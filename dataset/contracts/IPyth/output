--- 分析结果 1 / 342 - 合约地址：0xc05055e42986954029a463fed5b4178c24b0d4e1 ---
Installing solc '0.8.24'...
Version '0.8.24' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc05055e42986954029a463fed5b4178c24b0d4e1-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xc05055e42986954029a463fed5b4178c24b0d4e1 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 2 / 342 - 合约地址：0xf21842c0dce883d02d0c62ab45aaa2c4dfa4e93c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf21842c0dce883d02d0c62ab45aaa2c4dfa4e93c-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xf21842c0dce883d02d0c62ab45aaa2c4dfa4e93c analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 3 / 342 - 合约地址：0x76f623e5e5ddb53b6b91608efaf0de3318286eec ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x76f623e5e5ddb53b6b91608efaf0de3318286eec-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x76f623e5e5ddb53b6b91608efaf0de3318286eec analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 4 / 342 - 合约地址：0xc642c492bbfffb7cca586245a520afb313debb74 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc642c492bbfffb7cca586245a520afb313debb74-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xc642c492bbfffb7cca586245a520afb313debb74 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 5 / 342 - 合约地址：0x92b172bd476948d01f858dd3faac4943e3bc775e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x92b172bd476948d01f858dd3faac4943e3bc775e-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x92b172bd476948d01f858dd3faac4943e3bc775e analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 6 / 342 - 合约地址：0x65d798dc7c1cc79def7f05425fcd9d1a02e930a7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x65d798dc7c1cc79def7f05425fcd9d1a02e930a7-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x65d798dc7c1cc79def7f05425fcd9d1a02e930a7 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 7 / 342 - 合约地址：0x7fc56b3c11a5654e5f193fccea480047ae52325b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7fc56b3c11a5654e5f193fccea480047ae52325b-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#120) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#91) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#97) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106-129) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106-129)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-130) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#107) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x7fc56b3c11a5654e5f193fccea480047ae52325b analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 8 / 342 - 合约地址：0x2aea7909372e994935c2cfd28653de110c20efed ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#597) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#625-629) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#594-607) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#594-607)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#581-630) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#609-623) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#609-623)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x2aea7909372e994935c2cfd28653de110c20efed-SurfBear.sol#581-630) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2aea7909372e994935c2cfd28653de110c20efed analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 9 / 342 - 合约地址：0x81ff06fd898db289b79d284946a187cc3baf22b8 ---
Installing solc '0.8.28'...
Version '0.8.28' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x81ff06fd898db289b79d284946a187cc3baf22b8-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x81ff06fd898db289b79d284946a187cc3baf22b8 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 10 / 342 - 合约地址：0x57e0471ad005c1fd9e5c62035f2b01e31477ea2c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x57e0471ad005c1fd9e5c62035f2b01e31477ea2c-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#135) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#112) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#121-144) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#121-144)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-145) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#122) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x57e0471ad005c1fd9e5c62035f2b01e31477ea2c analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 11 / 342 - 合约地址：0xfbb3df5aaf8a2114febc462cd5d39193568316aa ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfbb3df5aaf8a2114febc462cd5d39193568316aa-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xfbb3df5aaf8a2114febc462cd5d39193568316aa analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 12 / 342 - 合约地址：0xc6f3405c861fa0dca04ec4ba59bc189d1d56ee05 ---
Installing solc '0.8.25'...
Version '0.8.25' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc6f3405c861fa0dca04ec4ba59bc189d1d56ee05-PythPriceOracle' running
INFO:Detectors:
OCCV9: multiple requests sent in outputUsdPrice = pythContract.getPriceUnsafe(outputTokenInfo.priceFeedId) (contracts/PythPriceOracle.sol#130) Each call should handle only one request at a time.
OCCV8: deprecated function invoked in this.getPrice(_inputTokenAddress,_outputTokenAddress) (contracts/PythPriceOracle.sol#188) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV4: PythPriceOracle.getPrice(address,address) (contracts/PythPriceOracle.sol#117-168) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceOracle.getPrice(address,address) (contracts/PythPriceOracle.sol#117-168)  sends oracle request but PythPriceOracle (contracts/PythPriceOracle.sol#19-254) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythPriceOracle.updatePrice(address,address,bytes) (contracts/PythPriceOracle.sol#173-189) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceOracle.updatePrice(address,address,bytes) (contracts/PythPriceOracle.sol#173-189)  sends oracle request but PythPriceOracle (contracts/PythPriceOracle.sol#19-254) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc6f3405c861fa0dca04ec4ba59bc189d1d56ee05 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 13 / 342 - 合约地址：0x322c97806b464c2acf56ba28dd36d85aae0e9955 ---
Installing solc '0.8.26'...
Version '0.8.26' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x322c97806b464c2acf56ba28dd36d85aae0e9955-TokenReceiver' running
INFO:Detectors:
OCCV8: deprecated function invoked in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool).PFData (contracts/receivers/TokenReceiver.sol#157) not checked. Please check before use it.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#239) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#239) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/receivers/TokenReceiver.sol#244) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/receivers/TokenReceiver.sol#244) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount + bonus (contracts/receivers/TokenReceiver.sol#250) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#164) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#164) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + tokenDecimals)) (contracts/receivers/TokenReceiver.sol#170) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + tokenDecimals)) (contracts/receivers/TokenReceiver.sol#170) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(token_).safeTransferFrom(payer_,treasury,amount_ - reward_) (contracts/receivers/TokenReceiver.sol#206) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.addToken(address,bytes32,uint256) (contracts/receivers/TokenReceiver.sol#68-81) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.removeToken(address) (contracts/receivers/TokenReceiver.sol#83-85) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.setThreshold(address,uint256) (contracts/receivers/TokenReceiver.sol#87-94) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool) (contracts/receivers/TokenReceiver.sol#143-202) without protection. Please add access control.
OCCV5: TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool) (contracts/receivers/TokenReceiver.sol#143-202)  sends oracle request but TokenReceiver (contracts/receivers/TokenReceiver.sol#17-252) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x322c97806b464c2acf56ba28dd36d85aae0e9955 analyzed (22 contracts with 3 detectors), 19 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 14 / 342 - 合约地址：0xdbf52908efcdf3c64b6ae279a4bf1ebcce9e24f9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdbf52908efcdf3c64b6ae279a4bf1ebcce9e24f9-DepositManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV3: bucket.withdraw(_receivers[i],unlockedAmount) (contracts/DepositManager/DepositManager.sol#169) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DepositManager.unlock(uint256[],address[],bool[]) (contracts/DepositManager/DepositManager.sol#152-176) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xdbf52908efcdf3c64b6ae279a4bf1ebcce9e24f9 analyzed (85 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 15 / 342 - 合约地址：0xb36379ca599e4d4cd1879d67c817ff26e39d7a56 ---
Installing solc '0.8.27'...
Version '0.8.27' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb36379ca599e4d4cd1879d67c817ff26e39d7a56-CustomTokenWriter' running
INFO:Detectors:
OCCV10: price of oracle response in CustomTokenWriter._deposit(address,uint256,address,string).price_ (contracts/CustomTokenWriter.sol#180) not checked. Please check before use it.
OCCV12: response in price_.publishTime <= block.timestamp - _customTokens[customToken_].threshold (contracts/CustomTokenWriter.sol#261) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime <= block.timestamp - _customTokens[customToken_].threshold (contracts/CustomTokenWriter.sol#261) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (NUMERATOR ** 2)) / _book.getCurrentPrice() / (10 ** (priceDecimals + decimals)) (contracts/CustomTokenWriter.sol#269-272) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (NUMERATOR ** 2)) / _book.getCurrentPrice() / (10 ** (priceDecimals + decimals)) (contracts/CustomTokenWriter.sol#269-272) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in round.supply < round.soldTokens + _getSoldTokens(customToken_,amount_,price_) (contracts/CustomTokenWriter.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _customTokens[customToken_].threshold (contracts/CustomTokenWriter.sol#189) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _customTokens[customToken_].threshold (contracts/CustomTokenWriter.sol#189) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/CustomTokenWriter.sol#197) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/CustomTokenWriter.sol#197) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(customToken_).safeTransferFrom(user_,treasury,amount_ - reward_) (contracts/CustomTokenWriter.sol#230) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: CustomTokenWriter._customTokens (contracts/CustomTokenWriter.sol#29) is used in oracle request but is modified in CustomTokenWriter.addCustomToken(address,bytes32,uint256) (contracts/CustomTokenWriter.sol#87-102) without protection. Please add access control.
OCCV3: CustomTokenWriter._customTokens (contracts/CustomTokenWriter.sol#29) is used in oracle request but is modified in CustomTokenWriter.removeCustomToken(address) (contracts/CustomTokenWriter.sol#104-106) without protection. Please add access control.
OCCV3: CustomTokenWriter._customTokens (contracts/CustomTokenWriter.sol#29) is used in oracle request but is modified in CustomTokenWriter.setThreshold(address,uint256) (contracts/CustomTokenWriter.sol#108-117) without protection. Please add access control.
OCCV3: CustomTokenWriter._customTokens (contracts/CustomTokenWriter.sol#29) is used in oracle request but is modified in CustomTokenWriter._deposit(address,uint256,address,string) (contracts/CustomTokenWriter.sol#160-226) without protection. Please add access control.
OCCV5: CustomTokenWriter._deposit(address,uint256,address,string) (contracts/CustomTokenWriter.sol#160-226)  sends oracle request but CustomTokenWriter (contracts/CustomTokenWriter.sol#14-274) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb36379ca599e4d4cd1879d67c817ff26e39d7a56 analyzed (20 contracts with 3 detectors), 16 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 16 / 342 - 合约地址：0x4edc5dada9e234c6f436e039fec591e44a66e564 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4edc5dada9e234c6f436e039fec591e44a66e564-ActivityRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x4edc5dada9e234c6f436e039fec591e44a66e564 analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 17 / 342 - 合约地址：0x5c485ef4398dbefb9d30d645ef5a9bd660b7b0e1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5c485ef4398dbefb9d30d645ef5a9bd660b7b0e1-BatchManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x5c485ef4398dbefb9d30d645ef5a9bd660b7b0e1 analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 18 / 342 - 合约地址：0x609b6053512ac823dcc77078bd2ed99e66ff6815 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x609b6053512ac823dcc77078bd2ed99e66ff6815-BestDexLens' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x609b6053512ac823dcc77078bd2ed99e66ff6815 analyzed (81 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 19 / 342 - 合约地址：0x4e317a5d98d906f6f329731f115b95cf6af1a019 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4e317a5d98d906f6f329731f115b95cf6af1a019-Bucket' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: BucketStorage.borrowedAsset (contracts/Bucket/BucketStorage.sol#35) is used in oracle request but is modified in Bucket.initialize(IBucket.ConstructorParams,address) (contracts/Bucket/Bucket.sol#39-114) without protection. Please add access control.
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),amountToWithdraw,address(this)) (contracts/Bucket/Bucket.sol#338) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: Bucket.withdraw(address,uint256) (contracts/Bucket/Bucket.sol#313-356) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x4e317a5d98d906f6f329731f115b95cf6af1a019 analyzed (94 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 20 / 342 - 合约地址：0xacdac5fefb7514a8a4cc1661af7cb8f3fe7c531d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xacdac5fefb7514a8a4cc1661af7cb8f3fe7c531d-BucketExtension' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),type()(uint256).max,address(this)) (contracts/Bucket/BucketExtension.sol#96) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: BucketExtension.withdrawBucketLiquidityFromAave() (contracts/Bucket/BucketExtension.sol#88-106) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xacdac5fefb7514a8a4cc1661af7cb8f3fe7c531d analyzed (92 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 21 / 342 - 合约地址：0xcdaa2fdf0a19e43d5c5220f5aad05c9b2ea59b01 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcdaa2fdf0a19e43d5c5220f5aad05c9b2ea59b01-DebtToken' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xcdaa2fdf0a19e43d5c5220f5aad05c9b2ea59b01 analyzed (82 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 22 / 342 - 合约地址：0x4bba96f8dca2f341d71310470d73bcbf101bef28 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4bba96f8dca2f341d71310470d73bcbf101bef28-DexAdapter' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#693) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV2(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#676-696) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#719) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#698-729) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#748) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithAlgebraV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#731-751) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#890) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#910) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithBalancer(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#853-913) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x4bba96f8dca2f341d71310470d73bcbf101bef28 analyzed (92 contracts with 3 detectors), 9 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 23 / 342 - 合约地址：0x2316a78c79c1d8bb0776129f8a020cf8a5c104c0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2316a78c79c1d8bb0776129f8a020cf8a5c104c0-FlashLoanManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x2316a78c79c1d8bb0776129f8a020cf8a5c104c0 analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 24 / 342 - 合约地址：0x158ed66bc58050ce3c241dcc8284bfe825b08fff ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x158ed66bc58050ce3c241dcc8284bfe825b08fff-KeeperRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x158ed66bc58050ce3c241dcc8284bfe825b08fff analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 25 / 342 - 合约地址：0x0e9ca5c7f4b937427c941252e36fa36d8424d4d6 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0e9ca5c7f4b937427c941252e36fa36d8424d4d6-LimitOrderLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x0e9ca5c7f4b937427c941252e36fa36d8424d4d6 analyzed (75 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 26 / 342 - 合约地址：0x4baef0a6d8f0be216c611cbb8405a81604483df8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4baef0a6d8f0be216c611cbb8405a81604483df8-LimitOrderManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x4baef0a6d8f0be216c611cbb8405a81604483df8 analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 27 / 342 - 合约地址：0x03659d6587e9afb92bc10b6cada8c59cdb93f4ed ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x03659d6587e9afb92bc10b6cada8c59cdb93f4ed-LimitPriceCOM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x03659d6587e9afb92bc10b6cada8c59cdb93f4ed analyzed (79 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 28 / 342 - 合约地址：0x5ca6c6050dda9603a60d3ae12e299e11056c12a1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5ca6c6050dda9603a60d3ae12e299e11056c12a1-LiquidityMiningRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x5ca6c6050dda9603a60d3ae12e299e11056c12a1 analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 29 / 342 - 合约地址：0xf83224252a34a8f5d9b9c84d843e57cb2862245f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf83224252a34a8f5d9b9c84d843e57cb2862245f-PToken' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xf83224252a34a8f5d9b9c84d843e57cb2862245f analyzed (83 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 30 / 342 - 合约地址：0x4a63105e7d0df8fc25250568fcb6f39738850496 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4a63105e7d0df8fc25250568fcb6f39738850496-PositionLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x4a63105e7d0df8fc25250568fcb6f39738850496 analyzed (75 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 31 / 342 - 合约地址：0x9fdc2ad2f2d800079d719fbb271df54cc2b75c2b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9fdc2ad2f2d800079d719fbb271df54cc2b75c2b-PositionManagerExtension' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x9fdc2ad2f2d800079d719fbb271df54cc2b75c2b analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 32 / 342 - 合约地址：0xa1e04e399f92bf0a10d6ace3c98f511e52106a2b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa1e04e399f92bf0a10d6ace3c98f511e52106a2b-PositionManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xa1e04e399f92bf0a10d6ace3c98f511e52106a2b analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 33 / 342 - 合约地址：0x8fec6cd32a551158930608c913b364dcf068bb54 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8fec6cd32a551158930608c913b364dcf068bb54-PrimexDNS' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x8fec6cd32a551158930608c913b364dcf068bb54 analyzed (84 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 34 / 342 - 合约地址：0xbfdd200f6693793ed3dcc4cf6d6750fcbb17a2c1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbfdd200f6693793ed3dcc4cf6d6750fcbb17a2c1-PrimexLens' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV9: oracle request in loop in (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV8: answeredInRound is deprecated but used in (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Do not use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).updatedAt (contracts/lens/PrimexLens.sol#192) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).roundId (contracts/lens/PrimexLens.sol#189) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).startedAt (contracts/lens/PrimexLens.sol#191) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).answeredInRound (contracts/lens/PrimexLens.sol#193) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).answer (contracts/lens/PrimexLens.sol#190) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PrimexLens.getChainlinkLatestRoundData(address[]) (contracts/lens/PrimexLens.sol#183-207) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PrimexLens.getChainlinkLatestRoundData(address[]) (contracts/lens/PrimexLens.sol#183-207)  sends oracle request but PrimexLens (contracts/lens/PrimexLens.sol#34-679) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xbfdd200f6693793ed3dcc4cf6d6750fcbb17a2c1 analyzed (96 contracts with 3 detectors), 10 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 35 / 342 - 合约地址：0x5a1235cd7f233b024273dcace98f966e0e7c7918 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5a1235cd7f233b024273dcace98f966e0e7c7918-PrimexPricingLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x5a1235cd7f233b024273dcace98f966e0e7c7918 analyzed (75 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 36 / 342 - 合约地址：0xfceb16249df85d59ef3ede19043903e68e3e1c1f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfceb16249df85d59ef3ede19043903e68e3e1c1f-PrimexUpkeep' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xfceb16249df85d59ef3ede19043903e68e3e1c1f analyzed (94 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 37 / 342 - 合约地址：0xdaea9429c0213d44a0650a611791a2317ccd9a50 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdaea9429c0213d44a0650a611791a2317ccd9a50-Reserve' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV3: ReserveStorage.dns (contracts/Reserve/ReserveStorage.sol#18) is used in oracle request but is modified in Reserve.initialize(IPrimexDNSV3,address) (contracts/Reserve/Reserve.sol#38-49) without protection. Please add access control.
OCCV3: IBucketV3(bucket).withdraw(dns.treasury(),amount) (contracts/Reserve/Reserve.sol#113) consumes contract/subscription funds but lacks protection. Please add access control.
Reference: ...
INFO:Slither:0xdaea9429c0213d44a0650a611791a2317ccd9a50 analyzed (83 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 38 / 342 - 合约地址：0x2aad252ec779c4b6dd401cf788f144ae5add36bf ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2aad252ec779c4b6dd401cf788f144ae5add36bf-SpotTradingRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x2aad252ec779c4b6dd401cf788f144ae5add36bf analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 39 / 342 - 合约地址：0xb0bfd9bc392089df7c84aa684b452226fece18c1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb0bfd9bc392089df7c84aa684b452226fece18c1-SwapManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xb0bfd9bc392089df7c84aa684b452226fece18c1 analyzed (84 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 40 / 342 - 合约地址：0x0c2cac9648ea7241abb4e0ee5603c590cf629678 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0c2cac9648ea7241abb4e0ee5603c590cf629678-TakeProfitStopLossCCM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x0c2cac9648ea7241abb4e0ee5603c590cf629678 analyzed (78 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 41 / 342 - 合约地址：0xb7ce0d23af9be49342a23987b23dcda0bb4cd396 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb7ce0d23af9be49342a23987b23dcda0bb4cd396-UncheckedERC20Streamer' running
INFO:Detectors:
OCCV10: price of oracle response in UncheckedERC20Streamer._deposit(address,uint256,address,string).price_ (contracts/presale/UncheckedERC20Streamer.sol#181) not checked. Please check before use it.
OCCV12: response in price_.publishTime <= block.timestamp - _uncheckedERC20[UncheckedERC20_].threshold (contracts/presale/UncheckedERC20Streamer.sol#265) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime <= block.timestamp - _uncheckedERC20[UncheckedERC20_].threshold (contracts/presale/UncheckedERC20Streamer.sol#265) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in usd = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/presale/UncheckedERC20Streamer.sol#273) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in usd = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/presale/UncheckedERC20Streamer.sol#273) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in token = usd * NUMERATOR / _vault.getCurrentPrice() (contracts/presale/UncheckedERC20Streamer.sol#274) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in soldTokens += _vault.getRewardForMilestone(usd,soldTokens) (contracts/presale/UncheckedERC20Streamer.sol#188) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _uncheckedERC20[UncheckedERC20_].threshold (contracts/presale/UncheckedERC20Streamer.sol#194) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _uncheckedERC20[UncheckedERC20_].threshold (contracts/presale/UncheckedERC20Streamer.sol#194) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/presale/UncheckedERC20Streamer.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/presale/UncheckedERC20Streamer.sol#202) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(UncheckedERC20_).safeTransferFrom(user_,treasury,amount_ - reward_) (contracts/presale/UncheckedERC20Streamer.sol#234) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: UncheckedERC20Streamer._uncheckedERC20 (contracts/presale/UncheckedERC20Streamer.sol#29) is used in oracle request but is modified in UncheckedERC20Streamer._deposit(address,uint256,address,string) (contracts/presale/UncheckedERC20Streamer.sol#161-230) without protection. Please add access control.
OCCV3: UncheckedERC20Streamer._uncheckedERC20 (contracts/presale/UncheckedERC20Streamer.sol#29) is used in oracle request but is modified in UncheckedERC20Streamer.addUncheckedERC20(address,bytes32,uint256) (contracts/presale/UncheckedERC20Streamer.sol#88-103) without protection. Please add access control.
OCCV3: UncheckedERC20Streamer._uncheckedERC20 (contracts/presale/UncheckedERC20Streamer.sol#29) is used in oracle request but is modified in UncheckedERC20Streamer.removeUncheckedERC20(address) (contracts/presale/UncheckedERC20Streamer.sol#105-107) without protection. Please add access control.
OCCV3: UncheckedERC20Streamer._uncheckedERC20 (contracts/presale/UncheckedERC20Streamer.sol#29) is used in oracle request but is modified in UncheckedERC20Streamer.setThreshold(address,uint256) (contracts/presale/UncheckedERC20Streamer.sol#109-118) without protection. Please add access control.
OCCV5: UncheckedERC20Streamer._deposit(address,uint256,address,string) (contracts/presale/UncheckedERC20Streamer.sol#161-230)  sends oracle request but UncheckedERC20Streamer (contracts/presale/UncheckedERC20Streamer.sol#14-278) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb7ce0d23af9be49342a23987b23dcda0bb4cd396 analyzed (20 contracts with 3 detectors), 17 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 42 / 342 - 合约地址：0xfd5d87da3786e26f7dec3ac2c04290a5535fe3e6 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfd5d87da3786e26f7dec3ac2c04290a5535fe3e6-TokenStore' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/RealmChain.sol:444:5:
    |
444 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_tokenConfig[asset_].pythId) (contracts/RealmChain.sol#720) Each call should handle only one request at a time.
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_pythNativePriceFeedId) (contracts/RealmChain.sol#847) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool).priceInfo (contracts/RealmChain.sol#605) not checked. Please check before use it.
OCCV12: response in _maxDepositAmount - amount (contracts/RealmChain.sol#152) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/RealmChain.sol#386) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/RealmChain.sol#386) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#606) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#606) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/RealmChain.sol#612) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/RealmChain.sol#612) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSoldTokens(address,uint256,ITokenStore.Option).priceInfo (contracts/RealmChain.sol#720) not checked. Please check before use it.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/RealmChain.sol#387) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/RealmChain.sol#387) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestone[_currentMilestone].sold = _milestone[_currentMilestone].sold + sold_ (contracts/RealmChain.sol#388) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/RealmChain.sol#389) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/RealmChain.sol#389) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/RealmChain.sol#396) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/RealmChain.sol#396) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/RealmChain.sol#397) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/RealmChain.sol#397) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(receiver_,treasury,amount_ - reward_) (contracts/RealmChain.sol#659) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#721) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#721) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/RealmChain.sol#726) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/RealmChain.sol#726) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/RealmChain.sol#821) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._deposit(ITokenStore.Option,address,address,bool).priceInfo (contracts/RealmChain.sol#772) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#773) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/RealmChain.sol#777) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in investment = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/RealmChain.sol#798) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSold(uint256,ITokenStore.Option).priceInfo (contracts/RealmChain.sol#847) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/RealmChain.sol#848) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/RealmChain.sol#852) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/RealmChain.sol#852) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: TokenStore._tokenConfig (contracts/RealmChain.sol#54) is used in oracle request but is modified in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/RealmChain.sol#579-655) without protection. Please add access control.
OCCV3: TokenStore._tokenConfig (contracts/RealmChain.sol#54) is used in oracle request but is modified in TokenStore.toggleAllowedTokens(address[],bytes32[],uint256[],bool[]) (contracts/RealmChain.sol#215-227) without protection. Please add access control.
OCCV5: TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/RealmChain.sol#579-655)  sends oracle request but TokenStore (contracts/RealmChain.sol#14-855) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/RealmChain.sol#715-727) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/RealmChain.sol#715-727)  sends oracle request but TokenStore (contracts/RealmChain.sol#14-855) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV5: TokenStore._deposit(ITokenStore.Option,address,address,bool) (contracts/RealmChain.sol#748-817)  sends oracle request but TokenStore (contracts/RealmChain.sol#14-855) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/RealmChain.sol#843-853) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/RealmChain.sol#843-853)  sends oracle request but TokenStore (contracts/RealmChain.sol#14-855) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xfd5d87da3786e26f7dec3ac2c04290a5535fe3e6 analyzed (21 contracts with 3 detectors), 42 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 43 / 342 - 合约地址：0x3165236338cf656da8545255eff843e07281b92f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3165236338cf656da8545255eff843e07281b92f-BatchManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x3165236338cf656da8545255eff843e07281b92f analyzed (96 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 44 / 342 - 合约地址：0x557f7cc7a3354c848bdefc5aa4cda75032b06f29 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x557f7cc7a3354c848bdefc5aa4cda75032b06f29-BucketExtension' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),type()(uint256).max,address(this)) (contracts/Bucket/BucketExtension.sol#96) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: BucketExtension.withdrawBucketLiquidityFromAave() (contracts/Bucket/BucketExtension.sol#88-106) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x557f7cc7a3354c848bdefc5aa4cda75032b06f29 analyzed (102 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 45 / 342 - 合约地址：0x2f04adc96b2f083ab2f9e3084fbe59a6fc3436b3 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2f04adc96b2f083ab2f9e3084fbe59a6fc3436b3-CurveStableOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: This declaration shadows an existing declaration.
   --> contracts/CurvePriceFeeds/CurveBaseOracle.sol:113:49:
    |
113 |         (address pool, address[] memory tokens, uint256 registryIndex) = _setTokens(crvLp, registry, registryIndex);
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
   --> contracts/CurvePriceFeeds/CurveBaseOracle.sol:110:9:
    |
110 |         uint256 registryIndex
    |         ^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
   --> contracts/CurvePriceFeeds/CurveBaseOracle.sol:142:9:
    |
142 |         TokenInfo memory tokenInfo = getTokenInfo(crvLp);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/CurvePriceFeeds/CurveBaseOracle.sol:53:5:
   |
53 |     mapping(address => TokenInfo) private tokenInfo;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Slither:0x2f04adc96b2f083ab2f9e3084fbe59a6fc3436b3 analyzed (35 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 46 / 342 - 合约地址：0x9a93520f99112478568f59d4c5ead467943f529d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9a93520f99112478568f59d4c5ead467943f529d-DepositManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV3: bucket.withdraw(_receivers[i],unlockedAmount) (contracts/DepositManager/DepositManager.sol#194) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DepositManager.unlock(uint256[],address[],bool[]) (contracts/DepositManager/DepositManager.sol#177-201) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x9a93520f99112478568f59d4c5ead467943f529d analyzed (96 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 47 / 342 - 合约地址：0x045d2675815ac80151f830df4271e93e584df6a2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x045d2675815ac80151f830df4271e93e584df6a2-DexAdapter' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#699) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV2(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#682-702) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#725) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#704-735) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#754) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithAlgebraV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#737-757) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#895) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#915) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithBalancer(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#858-918) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x045d2675815ac80151f830df4271e93e584df6a2 analyzed (102 contracts with 3 detectors), 9 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 48 / 342 - 合约地址：0x1e404dcd9f4ba7f4a13160b24f0ffffdf37ed7d0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1e404dcd9f4ba7f4a13160b24f0ffffdf37ed7d0-KeeperRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x1e404dcd9f4ba7f4a13160b24f0ffffdf37ed7d0 analyzed (96 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 49 / 342 - 合约地址：0xf397e37724921ce5e8646bf1d56908919583bf3e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf397e37724921ce5e8646bf1d56908919583bf3e-LimitOrderLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xf397e37724921ce5e8646bf1d56908919583bf3e analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 50 / 342 - 合约地址：0x501ad8c51547fad19d80069c9e0f0f5a0512d5c8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x501ad8c51547fad19d80069c9e0f0f5a0512d5c8-LimitOrderManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x501ad8c51547fad19d80069c9e0f0f5a0512d5c8 analyzed (96 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 51 / 342 - 合约地址：0x496bc5aa754daeed0c971edd4ec3d41225a425cc ---
https://raw.githubusercontent.com/crytic/solc/master/linux/amd64/solc-linux-amd64-v0.8.18+commit.87f61d96
Installing solc '0.8.18'...
Version '0.8.18' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x496bc5aa754daeed0c971edd4ec3d41225a425cc-PrimexPricingLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x496bc5aa754daeed0c971edd4ec3d41225a425cc analyzed (75 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 52 / 342 - 合约地址：0x59480ff97e3ff54062687138b6621fc91f125b8c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x59480ff97e3ff54062687138b6621fc91f125b8c-PositionLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x59480ff97e3ff54062687138b6621fc91f125b8c analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 53 / 342 - 合约地址：0xb74bc0cf31630be2dfeddc3ad5d77c84ea1ff89d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb74bc0cf31630be2dfeddc3ad5d77c84ea1ff89d-PositionManagerExtension' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xb74bc0cf31630be2dfeddc3ad5d77c84ea1ff89d analyzed (95 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 54 / 342 - 合约地址：0xa7f0c2c12a649da3de05758a97d4b9b5a6b008b1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa7f0c2c12a649da3de05758a97d4b9b5a6b008b1-PositionManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xa7f0c2c12a649da3de05758a97d4b9b5a6b008b1 analyzed (96 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 55 / 342 - 合约地址：0xb5b7a0a655b67c6f99d2a1e47763b5146c033fc9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb5b7a0a655b67c6f99d2a1e47763b5146c033fc9-PrimexDNS' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xb5b7a0a655b67c6f99d2a1e47763b5146c033fc9 analyzed (95 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 56 / 342 - 合约地址：0x87a5ffd94ca0345999b2b7e1b14129179b4fe2dd ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x87a5ffd94ca0345999b2b7e1b14129179b4fe2dd-PrimexLens' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV9: oracle request in loop in (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV8: answeredInRound is deprecated but used in (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Do not use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).answer (contracts/lens/PrimexLens.sol#190) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).updatedAt (contracts/lens/PrimexLens.sol#192) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).roundId (contracts/lens/PrimexLens.sol#189) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).startedAt (contracts/lens/PrimexLens.sol#191) not checked. Please check before use it.
OCCV10: oracle response PrimexLens.getChainlinkLatestRoundData(address[]).answeredInRound (contracts/lens/PrimexLens.sol#193) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PrimexLens.getChainlinkLatestRoundData(address[]) (contracts/lens/PrimexLens.sol#183-207) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PrimexLens.getChainlinkLatestRoundData(address[]) (contracts/lens/PrimexLens.sol#183-207)  sends oracle request but PrimexLens (contracts/lens/PrimexLens.sol#34-678) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (roundId,answer,startedAt,updatedAt,answeredInRound) = AggregatorV3Interface(_feeds[i]).latestRoundData() (contracts/lens/PrimexLens.sol#197-198) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x87a5ffd94ca0345999b2b7e1b14129179b4fe2dd analyzed (107 contracts with 3 detectors), 10 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 57 / 342 - 合约地址：0xa9ae323eb7240f7978de216899d53a1069ef9640 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa9ae323eb7240f7978de216899d53a1069ef9640-PrimexPricingLibrary' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xa9ae323eb7240f7978de216899d53a1069ef9640 analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 58 / 342 - 合约地址：0xd02fa92018eaa84fd627f67ca292866a09ad5a17 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd02fa92018eaa84fd627f67ca292866a09ad5a17-SwapManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xd02fa92018eaa84fd627f67ca292866a09ad5a17 analyzed (94 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 59 / 342 - 合约地址：0xd3b2926a491ea0ad8fa33cb6defa6b3ff438ca64 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd3b2926a491ea0ad8fa33cb6defa6b3ff438ca64-TakeProfitStopLossCCM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xd3b2926a491ea0ad8fa33cb6defa6b3ff438ca64 analyzed (88 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 60 / 342 - 合约地址：0x53e894076587ad3b239c213ee1e008b16591b7cc ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x53e894076587ad3b239c213ee1e008b16591b7cc-UniswapV2LPOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x53e894076587ad3b239c213ee1e008b16591b7cc analyzed (25 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 61 / 342 - 合约地址：0xb00ffcf3180505217d1747e88704d197b2e09414 ---
Installing solc '0.8.22'...
Version '0.8.22' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb00ffcf3180505217d1747e88704d197b2e09414-PythChainlinkStyleAggregator' running
INFO:Detectors:
OCCV10: price of oracle response in PythChainlinkStyleAggregator.latestAnswer().price (contracts/PythChainlinkAggregator.sol#49) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythChainlinkStyleAggregator.latestAnswer().price (contracts/PythChainlinkAggregator.sol#49) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythChainlinkStyleAggregator.latestAnswer() (contracts/PythChainlinkAggregator.sol#47-66) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythChainlinkStyleAggregator.latestAnswer() (contracts/PythChainlinkAggregator.sol#47-66)  sends oracle request but PythChainlinkStyleAggregator (contracts/PythChainlinkAggregator.sol#23-87) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb00ffcf3180505217d1747e88704d197b2e09414 analyzed (5 contracts with 3 detectors), 4 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 62 / 342 - 合约地址：0xa5b9fc7038d5e3b054249cf89a065b3bb15d0d28 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa5b9fc7038d5e3b054249cf89a065b3bb15d0d28-PrimexLensPart2' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xa5b9fc7038d5e3b054249cf89a065b3bb15d0d28 analyzed (104 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 63 / 342 - 合约地址：0x117077c260ca347e5f8df28c2a1e600e2db3a9a9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x117077c260ca347e5f8df28c2a1e600e2db3a9a9-LimitPriceCOM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x117077c260ca347e5f8df28c2a1e600e2db3a9a9 analyzed (89 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 64 / 342 - 合约地址：0xf435a732444089d3e38df19d5f74de9e0d362f32 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf435a732444089d3e38df19d5f74de9e0d362f32-Oracle' running
INFO:Detectors:
OCCV9: multiple requests sent in (None,chainLinkPrice,None,updatedAt,None) = chainLinkOracle.latestRoundData() (contracts/custom-oracle/Oracle.sol#31) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in Oracle.getPrice(bytes32).pythPrice (contracts/custom-oracle/Oracle.sol#24) not checked. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,chainLinkPrice,None,updatedAt,None) = chainLinkOracle.latestRoundData() (contracts/custom-oracle/Oracle.sol#31) not vaildated. Please check before use it.
OCCV10: oracle response Oracle.getPrice(bytes32).chainLinkPrice (contracts/custom-oracle/Oracle.sol#26) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: Oracle.pythOracle (contracts/custom-oracle/Oracle.sol#12) is used in oracle request but is modified in Oracle.initialize(IPyth) (contracts/custom-oracle/Oracle.sol#17-21) without protection. Please add access control.
OCCV4: Oracle.getPrice(bytes32) (contracts/custom-oracle/Oracle.sol#23-52) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xf435a732444089d3e38df19d5f74de9e0d362f32 analyzed (9 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 65 / 342 - 合约地址：0xff3b124099dec5560f69ebeeca0639c77bf7f245 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xff3b124099dec5560f69ebeeca0639c77bf7f245-KeeperRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xff3b124099dec5560f69ebeeca0639c77bf7f245 analyzed (97 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 66 / 342 - 合约地址：0x5e667d8271cd04f7018f2e2827047c13e406ffbd ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5e667d8271cd04f7018f2e2827047c13e406ffbd-Reserve' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV3: ReserveStorage.dns (contracts/Reserve/ReserveStorage.sol#18) is used in oracle request but is modified in Reserve.initialize(IPrimexDNSV3,address) (contracts/Reserve/Reserve.sol#38-49) without protection. Please add access control.
OCCV3: IBucketV3(bucket).withdraw(dns.treasury(),amount) (contracts/Reserve/Reserve.sol#113) consumes contract/subscription funds but lacks protection. Please add access control.
Reference: ...
INFO:Slither:0x5e667d8271cd04f7018f2e2827047c13e406ffbd analyzed (83 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 67 / 342 - 合约地址：0x4d798d94acd65285f8ee1da57a22c340e1b9e611 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4d798d94acd65285f8ee1da57a22c340e1b9e611-Sale' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/Sale.sol:501:5:
    |
501 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in Sale._getAchievedTokens(address,uint256).priceInfo (contracts/Sale.sol#748) not checked. Please check before use it.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + balance_ (contracts/Sale.sol#403) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + balance_ (contracts/Sale.sol#403) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalAchieved = _totalAchieved + achieved_ (contracts/Sale.sol#404) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalAchieved = _totalAchieved + achieved_ (contracts/Sale.sol#404) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _level[_currentLevel].achieved = _level[_currentLevel].achieved + achieved_ (contracts/Sale.sol#405) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _levelBalances[user_][_currentLevel] = _levelBalances[user_][_currentLevel] + achieved_ (contracts/Sale.sol#406) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _levelBalances[user_][_currentLevel] = _levelBalances[user_][_currentLevel] + achieved_ (contracts/Sale.sol#406) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _partnerBalances[partner_][asset_] += tokenRate_ (contracts/Sale.sol#413) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _partnerBalances[partner_][asset_] += tokenRate_ (contracts/Sale.sol#413) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _partnerBalances[partner_][ADDRESS] += usdRate_ (contracts/Sale.sol#414) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _partnerBalances[partner_][ADDRESS] += usdRate_ (contracts/Sale.sol#414) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in achieved_ * _rewardPoints[uint256(target)].reward / (10 ** ETH_DECIMAL_AMOUNT) (contracts/Sale.sol#450) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in achieved + reward (contracts/Sale.sol#875) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(purchaser_,treasury,balance_ - reward_) (contracts/Sale.sol#691) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _asset[asset_].timeout,price outdated) (contracts/Sale.sol#749) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _asset[asset_].timeout,price outdated) (contracts/Sale.sol#749) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = balance_ * price * 10 ** ETH_DECIMAL_AMOUNT / 10 ** (decimals + priceDecimals) (contracts/Sale.sol#754) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = balance_ * price * 10 ** ETH_DECIMAL_AMOUNT / 10 ** (decimals + priceDecimals) (contracts/Sale.sol#754) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in achieved = amountInUSD * 10 ** ETH_DECIMAL_AMOUNT / getCurrentLevelPrice() (contracts/Sale.sol#755) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: balance_ - reward_}() (contracts/Sale.sol#838) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in Sale._getAchieved(uint256).priceInfo (contracts/Sale.sol#862) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _timeout,price outdated) (contracts/Sale.sol#863) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in usdSize = (balance_ * price) / (10 ** decimals) (contracts/Sale.sol#867) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in achieved = usdSize * 10 ** ETH_DECIMAL_AMOUNT / getCurrentLevelPrice() (contracts/Sale.sol#868) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _oracle = IPyth(oracle_) (contracts/Sale.sol#149) Instantiates a contract but is not protected. Please add access control.
OCCV3: Sale._asset (contracts/Sale.sol#98) is used in oracle request but is modified in Sale.__initialize(address,address[],address,bytes32,address[],bytes32[]) (contracts/Sale.sol#122-156) without protection. Please add access control.
OCCV3: Sale._asset (contracts/Sale.sol#98) is used in oracle request but is modified in Sale.setupAssets(address[],bytes32[],uint256[],bool[]) (contracts/Sale.sol#245-257) without protection. Please add access control.
OCCV3: Sale._asset (contracts/Sale.sol#98) is used in oracle request but is modified in Sale._purchaseToken(address,uint256,address,string) (contracts/Sale.sol#626-687) without protection. Please add access control.
OCCV3: Sale._oracle (contracts/Sale.sol#69) is used in oracle request but is modified in Sale.__initialize(address,address[],address,bytes32,address[],bytes32[]) (contracts/Sale.sol#122-156) without protection. Please add access control.
OCCV4: Sale._getAchievedTokens(address,uint256) (contracts/Sale.sol#744-758) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: Sale._oracleId (contracts/Sale.sol#71) is used in oracle request but is modified in Sale.__initialize(address,address[],address,bytes32,address[],bytes32[]) (contracts/Sale.sol#122-156) without protection. Please add access control.
OCCV4: Sale._getAchieved(uint256) (contracts/Sale.sol#859-871) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x4d798d94acd65285f8ee1da57a22c340e1b9e611 analyzed (27 contracts with 3 detectors), 33 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 68 / 342 - 合约地址：0x282a37fe0d70cc82c35ac878f5b08a4be9f062ba ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x282a37fe0d70cc82c35ac878f5b08a4be9f062ba-DepositManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: This declaration has the same name as another declaration.
   --> contracts/DepositManager/DepositManager.sol:228:13:
    |
228 |             Deposit memory deposit = deposits[idToIndex[_depositIds[i]]];
    |             ^^^^^^^^^^^^^^^^^^^^^^
Note: The other declaration is here:
  --> contracts/DepositManager/DepositManager.sol:95:5:
   |
95 |     function deposit(
   |     ^ (Relevant source part starts here and spans across multiple lines).



INFO:Detectors:
OCCV3: bucket.withdraw(_receivers[i],unlockedAmount) (contracts/DepositManager/DepositManager.sol#209) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DepositManager.unlock(uint256[],address[],bool[]) (contracts/DepositManager/DepositManager.sol#186-216) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x282a37fe0d70cc82c35ac878f5b08a4be9f062ba analyzed (98 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 69 / 342 - 合约地址：0xda2ccf999dee63abbcf448bb2ada7ec75700d648 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xda2ccf999dee63abbcf448bb2ada7ec75700d648-KeeperRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xda2ccf999dee63abbcf448bb2ada7ec75700d648 analyzed (97 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 70 / 342 - 合约地址：0xd02de40ea549d9632d01f213fa3683ea4d1a5a09 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd02de40ea549d9632d01f213fa3683ea4d1a5a09-PrimexDNS' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xd02de40ea549d9632d01f213fa3683ea4d1a5a09 analyzed (96 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 71 / 342 - 合约地址：0x36f249d6fa1d17d3fafd04ad7ab1ed327f2fa2b7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x36f249d6fa1d17d3fafd04ad7ab1ed327f2fa2b7-Bucket' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: BucketStorage.borrowedAsset (contracts/Bucket/BucketStorage.sol#35) is used in oracle request but is modified in Bucket.initialize(IBucket.ConstructorParams,address) (contracts/Bucket/Bucket.sol#39-114) without protection. Please add access control.
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),amountToWithdraw,address(this)) (contracts/Bucket/Bucket.sol#338) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: Bucket.withdraw(address,uint256) (contracts/Bucket/Bucket.sol#313-356) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x36f249d6fa1d17d3fafd04ad7ab1ed327f2fa2b7 analyzed (105 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 72 / 342 - 合约地址：0xe0b3daa28e5c32b4ab7ee9700b57ce38eef9872b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe0b3daa28e5c32b4ab7ee9700b57ce38eef9872b-BucketsFactoryV2' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: BucketStorage.borrowedAsset (contracts/Bucket/BucketStorage.sol#35) is used in oracle request but is modified in Bucket.initialize(IBucket.ConstructorParams,address) (contracts/Bucket/Bucket.sol#39-114) without protection. Please add access control.
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),amountToWithdraw,address(this)) (contracts/Bucket/Bucket.sol#338) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: Bucket.withdraw(address,uint256) (contracts/Bucket/Bucket.sol#313-356) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xe0b3daa28e5c32b4ab7ee9700b57ce38eef9872b analyzed (119 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 73 / 342 - 合约地址：0x8e72d060a2212d09feee84ee3981708e0b22fb50 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8e72d060a2212d09feee84ee3981708e0b22fb50-DebtTokensFactory' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x8e72d060a2212d09feee84ee3981708e0b22fb50 analyzed (108 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 74 / 342 - 合约地址：0x091f73485336ccb1b66b41e88fd2fd33ecde418d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x091f73485336ccb1b66b41e88fd2fd33ecde418d-PTokensFactory' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x091f73485336ccb1b66b41e88fd2fd33ecde418d analyzed (109 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 75 / 342 - 合约地址：0x12ce0ba0217c253bb040fab6548935b0153110a0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x12ce0ba0217c253bb040fab6548935b0153110a0-CurveStableOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x12ce0ba0217c253bb040fab6548935b0153110a0 analyzed (36 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 76 / 342 - 合约地址：0xeff53abace5c2b901d3c6504edc5ef51cbde3634 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xeff53abace5c2b901d3c6504edc5ef51cbde3634-SpotTradingRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xeff53abace5c2b901d3c6504edc5ef51cbde3634 analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 77 / 342 - 合约地址：0xbff7cef343250f569e2087b00549b25c3cb3b6fb ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbff7cef343250f569e2087b00549b25c3cb3b6fb-TakeProfitStopLossCCM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xbff7cef343250f569e2087b00549b25c3cb3b6fb analyzed (78 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 78 / 342 - 合约地址：0x6cab05f4160bc863a324bf787dcc1179d8320c6a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6cab05f4160bc863a324bf787dcc1179d8320c6a-Bucket' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: BucketStorage.borrowedAsset (contracts/Bucket/BucketStorage.sol#35) is used in oracle request but is modified in Bucket.initialize(IBucket.ConstructorParams,address) (contracts/Bucket/Bucket.sol#39-114) without protection. Please add access control.
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),amountToWithdraw,address(this)) (contracts/Bucket/Bucket.sol#334) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: Bucket.withdraw(address,uint256) (contracts/Bucket/Bucket.sol#309-352) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x6cab05f4160bc863a324bf787dcc1179d8320c6a analyzed (94 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 79 / 342 - 合约地址：0xacde14dcd287bc907824a64a3bb7c147ae441c90 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xacde14dcd287bc907824a64a3bb7c147ae441c90-ERC20Module' running
INFO:Detectors:
OCCV10: price of oracle response in ERC20Module._realise(address,uint256,address,string).price_ (contracts/sale/ERC20Module.sol#176) not checked. Please check before use it.
OCCV12: response in price_.publishTime <= block.timestamp - _erc20Token[erc20Token_].threshold (contracts/sale/ERC20Module.sol#260) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime <= block.timestamp - _erc20Token[erc20Token_].threshold (contracts/sale/ERC20Module.sol#260) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in usd = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/sale/ERC20Module.sol#268) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in usd = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/sale/ERC20Module.sol#268) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in token = usd * NUMERATOR / _core.getCurrentCoreTierPrice() (contracts/sale/ERC20Module.sol#269) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in realised += _core.getBonusOnCoreTierEntering(usd,realised) (contracts/sale/ERC20Module.sol#183) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _erc20Token[erc20Token_].threshold (contracts/sale/ERC20Module.sol#189) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price_.publishTime < block.timestamp - _erc20Token[erc20Token_].threshold (contracts/sale/ERC20Module.sol#189) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/sale/ERC20Module.sol#197) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/sale/ERC20Module.sol#197) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(erc20Token_).safeTransferFrom(sender_,treasury,amount_ - reward_) (contracts/sale/ERC20Module.sol#229) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: ERC20Module._erc20Token (contracts/sale/ERC20Module.sol#29) is used in oracle request but is modified in ERC20Module._realise(address,uint256,address,string) (contracts/sale/ERC20Module.sol#159-225) without protection. Please add access control.
OCCV3: ERC20Module._erc20Token (contracts/sale/ERC20Module.sol#29) is used in oracle request but is modified in ERC20Module.addERC20Token(address,bytes32,uint256) (contracts/sale/ERC20Module.sol#86-101) without protection. Please add access control.
OCCV3: ERC20Module._erc20Token (contracts/sale/ERC20Module.sol#29) is used in oracle request but is modified in ERC20Module.removeERC20Token(address) (contracts/sale/ERC20Module.sol#103-105) without protection. Please add access control.
OCCV3: ERC20Module._erc20Token (contracts/sale/ERC20Module.sol#29) is used in oracle request but is modified in ERC20Module.setThreshold(address,uint256) (contracts/sale/ERC20Module.sol#107-116) without protection. Please add access control.
OCCV5: ERC20Module._realise(address,uint256,address,string) (contracts/sale/ERC20Module.sol#159-225)  sends oracle request but ERC20Module (contracts/sale/ERC20Module.sol#14-273) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xacde14dcd287bc907824a64a3bb7c147ae441c90 analyzed (21 contracts with 3 detectors), 17 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 80 / 342 - 合约地址：0x7988ac69133c5d5e4970476f8d6fcab994230fa0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7988ac69133c5d5e4970476f8d6fcab994230fa0-PythOracle' running
INFO:Detectors:
OCCV12: response in Math.mulDiv(priceNom * 10 ** commonParams.quoteDecimals,X96ONE,priceDenom * 10 ** commonParams.baseDecimals) (contracts/oracles/CompositeOracle.sol#91-92) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in Math.mulDiv(quoteNom * baseNom * 10 ** commonParams.quoteDecimals,X96ONE,quoteDenom * baseDenom * 10 ** commonParams.baseDecimals) (contracts/oracles/CompositeOracle.sol#106-111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle.getRationalPrice(address,address) (contracts/oracles/PythOracle.sol#59-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle.getRationalPrice(address,address) (contracts/oracles/PythOracle.sol#59-75)  sends oracle request but PythOracle (contracts/oracles/PythOracle.sol#14-84) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7988ac69133c5d5e4970476f8d6fcab994230fa0 analyzed (13 contracts with 3 detectors), 4 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 81 / 342 - 合约地址：0xbc88907ebd7d375b99dffc6c581229c93d6c30cb ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbc88907ebd7d375b99dffc6c581229c93d6c30cb-PrimexDNS' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xbc88907ebd7d375b99dffc6c581229c93d6c30cb analyzed (84 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 82 / 342 - 合约地址：0xa311dbbc05232b7254977423f521b3184a3726b7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa311dbbc05232b7254977423f521b3184a3726b7-PriceFeedOracle' running
INFO:Slither:0xa311dbbc05232b7254977423f521b3184a3726b7 analyzed (21 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 83 / 342 - 合约地址：0xa92038e993f90f6a930074aa97af4eb288756048 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa92038e993f90f6a930074aa97af4eb288756048-PriceOracle' running
INFO:Detectors:
OCCV9: multiple requests sent in result = pyth.getPriceNoOlderThan(priceFeedId,maxStaleness) (contracts/PriceOracle.sol#52-67) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PriceOracle.fetchPrice(bytes32).price (contracts/PriceOracle.sol#49) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: PriceOracle.maxStaleness (contracts/PriceOracle.sol#16) is used in oracle request but is modified in PriceOracle.setMaxStaleness(uint256) (contracts/PriceOracle.sol#36-39) without protection. Please add access control.
OCCV4: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#46-73) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#46-73)  sends oracle request but PriceOracle (contracts/PriceOracle.sol#14-74) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xa92038e993f90f6a930074aa97af4eb288756048 analyzed (6 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 84 / 342 - 合约地址：0xcfc479dc5371d21c52eead66290b21cda2eb0c9f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcfc479dc5371d21c52eead66290b21cda2eb0c9f-PriceOracle' running
INFO:Detectors:
OCCV9: multiple requests sent in result = pyth.getPriceNoOlderThan(priceFeedId,maxStaleness) (contracts/PriceOracle.sol#52-59) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PriceOracle.fetchPrice(bytes32).price (contracts/PriceOracle.sol#49) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: PriceOracle.maxStaleness (contracts/PriceOracle.sol#16) is used in oracle request but is modified in PriceOracle.setMaxStaleness(uint256) (contracts/PriceOracle.sol#36-39) without protection. Please add access control.
OCCV4: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#46-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#46-64)  sends oracle request but PriceOracle (contracts/PriceOracle.sol#14-65) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xcfc479dc5371d21c52eead66290b21cda2eb0c9f analyzed (6 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 85 / 342 - 合约地址：0x77f4b459c0d3e910e46821f4347c688ece4d6922 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x77f4b459c0d3e910e46821f4347c688ece4d6922-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x77f4b459c0d3e910e46821f4347c688ece4d6922 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 86 / 342 - 合约地址：0x4e4a2240ec517c45b44aab35bb3c343b22e6a6d8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4e4a2240ec517c45b44aab35bb3c343b22e6a6d8-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x4e4a2240ec517c45b44aab35bb3c343b22e6a6d8 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 87 / 342 - 合约地址：0x3ab78218944cbdeb35c09e0e1b38f1120ce97612 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3ab78218944cbdeb35c09e0e1b38f1120ce97612-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x3ab78218944cbdeb35c09e0e1b38f1120ce97612 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 88 / 342 - 合约地址：0x1ef51577f6ee1c5bb59c0a85a927c6e36b0f62f6 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1ef51577f6ee1c5bb59c0a85a927c6e36b0f62f6-CurveStableOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x1ef51577f6ee1c5bb59c0a85a927c6e36b0f62f6 analyzed (36 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 89 / 342 - 合约地址：0x06faa7646ae8001097edffd2217c341a54b472dc ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x06faa7646ae8001097edffd2217c341a54b472dc-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x06faa7646ae8001097edffd2217c341a54b472dc analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 90 / 342 - 合约地址：0xbd5043933f4ab65a8f31ed0ec731cc931115866c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbd5043933f4ab65a8f31ed0ec731cc931115866c-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > (uint64(p.price) * maxConfWidth) / Constants.BPS_DENOMINATOR (contracts/oracle/pyth/PythOracle.sol#125) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (scale * inAmount) / 10 ** baseDecimals (contracts/oracle/pyth/PythOracle.sol#99) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (scale * inAmount) / 10 ** baseDecimals (contracts/oracle/pyth/PythOracle.sol#99) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct(bytes32) (contracts/oracle/pyth/PythOracle.sol#111-135) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct(bytes32) (contracts/oracle/pyth/PythOracle.sol#111-135)  sends oracle request but PythOracle (contracts/oracle/pyth/PythOracle.sol#14-136) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(_feedId) (contracts/oracle/pyth/PythOracle.sol#112) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xbd5043933f4ab65a8f31ed0ec731cc931115866c analyzed (17 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 91 / 342 - 合约地址：0x0a05b3bca6863b194b9b4555706dbb0305422413 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0a05b3bca6863b194b9b4555706dbb0305422413-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x0a05b3bca6863b194b9b4555706dbb0305422413 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 92 / 342 - 合约地址：0x766aa22de459839d281d9f060f50a53709e10b22 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x766aa22de459839d281d9f060f50a53709e10b22-PriceOracle' running
INFO:Detectors:
OCCV9: multiple requests sent in price = pyth.getPriceUnsafe(priceFeedId) (contracts/PriceOracle.sol#80) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PriceOracle.fetchPrice(bytes32).price (contracts/PriceOracle.sol#61) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: PriceOracle.maxStaleness (contracts/PriceOracle.sol#27) is used in oracle request but is modified in PriceOracle.setMaxStaleness(uint256) (contracts/PriceOracle.sol#53-56) without protection. Please add access control.
OCCV4: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#58-86) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceOracle.fetchPrice(bytes32) (contracts/PriceOracle.sol#58-86)  sends oracle request but PriceOracle (contracts/PriceOracle.sol#25-129) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x766aa22de459839d281d9f060f50a53709e10b22 analyzed (7 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 93 / 342 - 合约地址：0xb57b90477e24bdabe5f60fbae3e9f0fdacd22a15 ---
Installing solc '0.8.23'...
Version '0.8.23' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb57b90477e24bdabe5f60fbae3e9f0fdacd22a15-TermPythAdapterPriceFeedV1' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/v1/TermPythAdapterPriceFeedV1.sol:85:9:
   |
85 |         uint80 roundId_
   |         ^^^^^^^^^^^^^^^


Warning: Warning: Function state mutability can be restricted to pure
  --> contracts/v1/TermPythAdapterPriceFeedV1.sol:84:5:
   |
84 |     function getRoundData(
   |     ^ (Relevant source part starts here and spans across multiple lines).



INFO:Detectors:
OCCV10: price of oracle response in TermPythAdapterPriceFeedV1.decimals().price (contracts/v1/TermPythAdapterPriceFeedV1.sol#67) not checked. Please check before use it.
OCCV10: publishTime of oracle response in TermPythAdapterPriceFeedV1.decimals().price (contracts/v1/TermPythAdapterPriceFeedV1.sol#67) not checked. Please check before use it.
OCCV12: response in priceReading.price <= 0 || priceReading.conf > uint64(priceReading.price) * maxConfWidth / BASIS_POINTS (contracts/v1/TermPythAdapterPriceFeedV1.sol#125) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: TermPythAdapterPriceFeedV1.decimals() (contracts/v1/TermPythAdapterPriceFeedV1.sol#66-74) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TermPythAdapterPriceFeedV1.decimals() (contracts/v1/TermPythAdapterPriceFeedV1.sol#66-74)  sends oracle request but TermPythAdapterPriceFeedV1 (contracts/v1/TermPythAdapterPriceFeedV1.sol#12-137) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TermPythAdapterPriceFeedV1.latestRoundData() (contracts/v1/TermPythAdapterPriceFeedV1.sol#106-136) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TermPythAdapterPriceFeedV1.latestRoundData() (contracts/v1/TermPythAdapterPriceFeedV1.sol#106-136)  sends oracle request but TermPythAdapterPriceFeedV1 (contracts/v1/TermPythAdapterPriceFeedV1.sol#12-137) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb57b90477e24bdabe5f60fbae3e9f0fdacd22a15 analyzed (6 contracts with 3 detectors), 7 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 94 / 342 - 合约地址：0x69aab98503216e16ec72ac3f4b8dfc900cc27777 ---
Installing solc '0.8.20'...
Version '0.8.20' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x69aab98503216e16ec72ac3f4b8dfc900cc27777-OmniDragonPriceOracle' running
INFO:Detectors:
OCCV12: response in weightedSum += uint256(oraclePrice) * chainlinkConfig.weight (contracts/core/oracles/OmniDragonPriceOracle.sol#348) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in weightedSum += uint256(oraclePrice_scope_0) * bandConfig.weight (contracts/core/oracles/OmniDragonPriceOracle.sol#358) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in weightedSum += uint256(oraclePrice_scope_2) * api3Config.weight (contracts/core/oracles/OmniDragonPriceOracle.sol#368) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - pythPrice.publishTime > pythConfig.maxStaleness (contracts/core/oracles/OmniDragonPriceOracle.sol#480) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in weightedSum += uint256(oraclePrice_scope_4) * pythConfig.weight (contracts/core/oracles/OmniDragonPriceOracle.sol#378) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in uint256((diff * 10000) / oldPrice) (contracts/core/oracles/OmniDragonPriceOracle.sol#632) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in diff = newPrice - oldPrice (contracts/core/oracles/OmniDragonPriceOracle.sol#631) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in diff = oldPrice - newPrice (contracts/core/oracles/OmniDragonPriceOracle.sol#631) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: OmniDragonPriceOracle.getNativeTokenPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#236-264) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OmniDragonPriceOracle.getNativeTokenPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#236-264)  sends oracle request but OmniDragonPriceOracle (contracts/core/oracles/OmniDragonPriceOracle.sol#54-785) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: OmniDragonPriceOracle.chainlinkConfig (contracts/core/oracles/OmniDragonPriceOracle.sol#87) is used in oracle request but is modified in OmniDragonPriceOracle.configureOracles(address,address,address,address,bytes32,string) (contracts/core/oracles/OmniDragonPriceOracle.sol#513-542) without protection. Please add access control.
OCCV3: OmniDragonPriceOracle.chainlinkConfig (contracts/core/oracles/OmniDragonPriceOracle.sol#87) is used in oracle request but is modified in OmniDragonPriceOracle.setOracleWeights(uint256,uint256,uint256,uint256) (contracts/core/oracles/OmniDragonPriceOracle.sol#547-563) without protection. Please add access control.
OCCV4: OmniDragonPriceOracle._getChainlinkPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#416-443) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OmniDragonPriceOracle._getChainlinkPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#416-443)  sends oracle request but OmniDragonPriceOracle (contracts/core/oracles/OmniDragonPriceOracle.sol#54-785) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: OmniDragonPriceOracle.api3Config (contracts/core/oracles/OmniDragonPriceOracle.sol#89) is used in oracle request but is modified in OmniDragonPriceOracle.configureOracles(address,address,address,address,bytes32,string) (contracts/core/oracles/OmniDragonPriceOracle.sol#513-542) without protection. Please add access control.
OCCV3: OmniDragonPriceOracle.api3Config (contracts/core/oracles/OmniDragonPriceOracle.sol#89) is used in oracle request but is modified in OmniDragonPriceOracle.setOracleWeights(uint256,uint256,uint256,uint256) (contracts/core/oracles/OmniDragonPriceOracle.sol#547-563) without protection. Please add access control.
OCCV4: OmniDragonPriceOracle._getAPI3Price() (contracts/core/oracles/OmniDragonPriceOracle.sol#461-473) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OmniDragonPriceOracle._getAPI3Price() (contracts/core/oracles/OmniDragonPriceOracle.sol#461-473)  sends oracle request but OmniDragonPriceOracle (contracts/core/oracles/OmniDragonPriceOracle.sol#54-785) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: OmniDragonPriceOracle.pythPriceId (contracts/core/oracles/OmniDragonPriceOracle.sol#94) is used in oracle request but is modified in OmniDragonPriceOracle.configureOracles(address,address,address,address,bytes32,string) (contracts/core/oracles/OmniDragonPriceOracle.sol#513-542) without protection. Please add access control.
OCCV3: OmniDragonPriceOracle.pythConfig (contracts/core/oracles/OmniDragonPriceOracle.sol#90) is used in oracle request but is modified in OmniDragonPriceOracle.configureOracles(address,address,address,address,bytes32,string) (contracts/core/oracles/OmniDragonPriceOracle.sol#513-542) without protection. Please add access control.
OCCV3: OmniDragonPriceOracle.pythConfig (contracts/core/oracles/OmniDragonPriceOracle.sol#90) is used in oracle request but is modified in OmniDragonPriceOracle.setOracleWeights(uint256,uint256,uint256,uint256) (contracts/core/oracles/OmniDragonPriceOracle.sol#547-563) without protection. Please add access control.
OCCV4: OmniDragonPriceOracle._getPythPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#475-504) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OmniDragonPriceOracle._getPythPrice() (contracts/core/oracles/OmniDragonPriceOracle.sol#475-504)  sends oracle request but OmniDragonPriceOracle (contracts/core/oracles/OmniDragonPriceOracle.sol#54-785) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythPrice = IPyth(pythConfig.feedAddress).getPriceUnsafe(pythPriceId) (contracts/core/oracles/OmniDragonPriceOracle.sol#478-503) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x69aab98503216e16ec72ac3f4b8dfc900cc27777 analyzed (12 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 95 / 342 - 合约地址：0xb2eeb93d778c364e7e2274d6299e2aa0c2bea090 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb2eeb93d778c364e7e2274d6299e2aa0c2bea090-PythUpgradable' running
INFO:Slither:0xb2eeb93d778c364e7e2274d6299e2aa0c2bea090 analyzed (22 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 96 / 342 - 合约地址：0x3dde106f8704dd0c9ce233e0c85c5673cd390a8f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3dde106f8704dd0c9ce233e0c85c5673cd390a8f-PythUpgradable' running
INFO:Slither:0x3dde106f8704dd0c9ce233e0c85c5673cd390a8f analyzed (29 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 97 / 342 - 合约地址：0x9a5d53ff09ccf870c751f1942882c1b7dabee79c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9a5d53ff09ccf870c751f1942882c1b7dabee79c-PythUpgradable' running
INFO:Slither:0x9a5d53ff09ccf870c751f1942882c1b7dabee79c analyzed (33 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 98 / 342 - 合约地址：0x35a58beee77a2ad547fcded7e8cb1c6e19746b13 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x35a58beee77a2ad547fcded7e8cb1c6e19746b13-PythUpgradable' running
Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:175:30:
    |
175 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:198:30:
    |
198 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^



INFO:Slither:0x35a58beee77a2ad547fcded7e8cb1c6e19746b13 analyzed (36 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 99 / 342 - 合约地址：0xdd24f84d36bf92c65f92307595335bdfab5bbd21 ---
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 722, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 211, in __init__
    self._compile(**kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 633, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 439, in compile
    filenames, working_dir, remappings = _handle_multiple_files(
                                         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 265, in _handle_multiple_files
    raise IOError(
OSError: Path 'crytic-export/etherscan-contracts/0xdd24f84d36bf92c65f92307595335bdfab5bbd21-PythUpgradable/../../../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol' is outside of the allowed directory: /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdd24f84d36bf92c65f92307595335bdfab5bbd21-PythUpgradable

[Return code]: 1

================================================================================

--- 分析结果 100 / 342 - 合约地址：0x846601f1c6d11c90ffa72e40c21a28efc30d1812 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x846601f1c6d11c90ffa72e40c21a28efc30d1812-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (dependencies/euler-price-oracle-1/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x846601f1c6d11c90ffa72e40c21a28efc30d1812 analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 101 / 342 - 合约地址：0x62b41081c97bab61c2b968cc0c49425d3c92376c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x62b41081c97bab61c2b968cc0c49425d3c92376c-MAIN_THJ_ETH_TEST.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x62b41081c97bab61c2b968cc0c49425d3c92376c analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 102 / 342 - 合约地址：0x9084f9c7dfb18bd683e4e42479c84e8553124166 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x9084f9c7dfb18bd683e4e42479c84e8553124166-Tester_ETH.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9084f9c7dfb18bd683e4e42479c84e8553124166 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 103 / 342 - 合约地址：0x3bea26866fce3596e7e994e45a0a65b74e16947e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x3bea26866fce3596e7e994e45a0a65b74e16947e-Tut_Loudio.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x3bea26866fce3596e7e994e45a0a65b74e16947e analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 104 / 342 - 合约地址：0x851b728e568c9e10ab8007f27a525fbbed29b259 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x851b728e568c9e10ab8007f27a525fbbed29b259-Megalio.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x851b728e568c9e10ab8007f27a525fbbed29b259 analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 105 / 342 - 合约地址：0x959165efbb7924a10509367611e440cf57e37784 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x959165efbb7924a10509367611e440cf57e37784-Megasaurs.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x959165efbb7924a10509367611e440cf57e37784 analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 106 / 342 - 合约地址：0xe0f9a1049935df090b679c761bfc726f5c5db7d0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe0f9a1049935df090b679c761bfc726f5c5db7d0-sickofu.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe0f9a1049935df090b679c761bfc726f5c5db7d0 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 107 / 342 - 合约地址：0x6db66e6c33f7c66a6cb87044f74e074d2587db08 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x6db66e6c33f7c66a6cb87044f74e074d2587db08-MegaCarrot.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x6db66e6c33f7c66a6cb87044f74e074d2587db08 analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 108 / 342 - 合约地址：0xbd5111eaa94a1a0031604f151d2173b03c12f171 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xbd5111eaa94a1a0031604f151d2173b03c12f171-TestKB.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xbd5111eaa94a1a0031604f151d2173b03c12f171 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 109 / 342 - 合约地址：0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f-megafknwizards.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xa0938ff8ca4b1b081d9386180f2f38cd8fcb9b9f analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 110 / 342 - 合约地址：0x48003fc38f46759a652c4705929fa801e2c22c26 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x48003fc38f46759a652c4705929fa801e2c22c26-Bad_Bunnz.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x48003fc38f46759a652c4705929fa801e2c22c26 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 111 / 342 - 合约地址：0xef0cd0f1362ee213c9f6a4c550337be1e7d96856 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xef0cd0f1362ee213c9f6a4c550337be1e7d96856-MegaRabbit.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xef0cd0f1362ee213c9f6a4c550337be1e7d96856 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 112 / 342 - 合约地址：0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca-Tapout_Genesis.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x4803da2a9d9f54f1d3812efc03f23bfcd6ac74ca analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 113 / 342 - 合约地址：0xc40a39d294559f4dc2fd20010510ad26ee070a21 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xc40a39d294559f4dc2fd20010510ad26ee070a21-Wagmi_Vision_Alpha_Pass.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc40a39d294559f4dc2fd20010510ad26ee070a21 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 114 / 342 - 合约地址：0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861-Etherum_Leeds.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe48f7ceb39e5a6109e08bf949dfec9e1064fc861 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 115 / 342 - 合约地址：0xa4c2878dac4b2884f411691b499e94d655475a71 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV9: multiple requests sent in p = pyth.getPriceUnsafe(XRP_PRICE_ID) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV12: response in require(bool,string)(block.timestamp - p.publishTime <= maxAgeSec,stale price) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#75) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in bal - collateralUSDC (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#84) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in pXRPOut = (usdcAmount * 1e20) / px8 (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#89) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in usdcOut = (pXRPAmount * px8) / 1e20 (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#93) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in mintAmount = (usdcAmount * 1e20) / px8 (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#109) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in collateralUSDC += usdcAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#111) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in collateralUSDC += usdcAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.pXRP += mintAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#113) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.pXRP += mintAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.entryCostUSDC += usdcAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#114) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.entryCostUSDC += usdcAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#114) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in totalSupply += amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#21) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in totalSupply += amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#21) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in balanceOf[to] += amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#21) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in balanceOf[to] += amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#21) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in balanceOf[from] -= amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#22) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in balanceOf[from] -= amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#22) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in totalSupply -= amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#22) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in totalSupply -= amount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#22) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in usdcReleased = (pXRPAmount * px8) / 1e20 (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#135) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in collateralUSDC -= usdcReleased (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#137) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in collateralUSDC -= usdcReleased (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#137) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in prevPXRP = pos.pXRP + pXRPAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#140) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in prevPXRP = pos.pXRP + pXRPAmount (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#140) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in costToRemove = (pos.entryCostUSDC * pXRPAmount) / prevPXRP (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#142) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in costToRemove = (pos.entryCostUSDC * pXRPAmount) / prevPXRP (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#142) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.entryCostUSDC -= costToRemove (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#144) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in pos.entryCostUSDC -= costToRemove (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#144) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in pXRPVaultWrapper_Pyth.mintByUSDC(uint256,bytes[],uint256).p (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#117) not checked. Please check before use it.
OCCV10: publishTime of oracle response in pXRPVaultWrapper_Pyth.mintByUSDC(uint256,bytes[],uint256).p (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#117) not checked. Please check before use it.
OCCV10: price of oracle response in pXRPVaultWrapper_Pyth.quoteRedeemNow(bytes[],uint256).p (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#173) not checked. Please check before use it.
OCCV10: publishTime of oracle response in pXRPVaultWrapper_Pyth.quoteRedeemNow(bytes[],uint256).p (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#173) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: pXRPVaultWrapper_Pyth._getXrpPx8(uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#72-80) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: pXRPVaultWrapper_Pyth._getXrpPx8(uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#72-80)  sends oracle request but pXRPVaultWrapper_Pyth (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#46-183) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: pXRPVaultWrapper_Pyth.mintByUSDC(uint256,bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#97-119) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: pXRPVaultWrapper_Pyth.mintByUSDC(uint256,bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#97-119)  sends oracle request but pXRPVaultWrapper_Pyth (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#46-183) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: pXRPVaultWrapper_Pyth.burn(uint256,bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#121-149) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: pXRPVaultWrapper_Pyth.burn(uint256,bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#121-149)  sends oracle request but pXRPVaultWrapper_Pyth (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#46-183) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: pXRPVaultWrapper_Pyth.quoteRedeemNow(bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#152-175) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: pXRPVaultWrapper_Pyth.quoteRedeemNow(bytes[],uint256) (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#152-175)  sends oracle request but pXRPVaultWrapper_Pyth (crytic-export/etherscan-contracts/0xa4c2878dac4b2884f411691b499e94d655475a71-pXRPVaultWrapper_Pyth.sol#46-183) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xa4c2878dac4b2884f411691b499e94d655475a71 analyzed (7 contracts with 3 detectors), 41 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 116 / 342 - 合约地址：0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol:3151:78:
     |
3151 |     function send(SendParam calldata _sendParam, MessagingFee calldata _fee, address _refundAddress)
     |                                                                              ^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol:3218:9:
     |
3218 |         address _refundAddress,
     |         ^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2982) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2970) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#3007-3009) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2981-2991) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2981-2991)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2993-3005) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2993-3005)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346-Honey_Jar_Gen_6_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x0de0f0a9f7f1a56dafd025d0f31c31c6cb190346 analyzed (42 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 117 / 342 - 合约地址：0x66581ac91373b0c8caf7c593bf78bebb26abddff ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x66581ac91373b0c8caf7c593bf78bebb26abddff-DropGuide.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x66581ac91373b0c8caf7c593bf78bebb26abddff analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 118 / 342 - 合约地址：0x278c31dd5a04f4dce3d055b4ed7e42cf093594af ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x278c31dd5a04f4dce3d055b4ed7e42cf093594af-NEMOM.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x278c31dd5a04f4dce3d055b4ed7e42cf093594af analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 119 / 342 - 合约地址：0x23b2e4d61705e427e688789a393294651b941c9a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x23b2e4d61705e427e688789a393294651b941c9a-testtesttestbatch.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x23b2e4d61705e427e688789a393294651b941c9a analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 120 / 342 - 合约地址：0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2605) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2591) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2633-2637) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2602-2615) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2602-2615)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2617-2631) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2617-2631)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a-Nurds.sol#2589-2638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x5ec3bd7eb3bb9cf36332a813ce9846fdc9bc609a analyzed (24 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 121 / 342 - 合约地址：0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5-Wagmi_Vision_Pass.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xdc7f5c5c16c2532d7703736c1fc62325f92b94d5 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 122 / 342 - 合约地址：0x7576e9a389a71b1342e04dc45d96580d4a5538d2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#595) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#583) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#620-622) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#594-604) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#594-604)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#606-618) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#606-618)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x7576e9a389a71b1342e04dc45d96580d4a5538d2-Wagmi_Vision.sol#581-623) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7576e9a389a71b1342e04dc45d96580d4a5538d2 analyzed (15 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 123 / 342 - 合约地址：0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#364) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#352) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#389-391) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#363-373) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#363-373)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#350-393) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#375-387) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#375-387)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf-KingdomlyFeeContract.sol#350-393) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x65db9966492c0a5ac0ef15c018c19ee383f7a8cf analyzed (6 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 124 / 342 - 合约地址：0x33a76173680427cba3ffc3a625b7bc43b08ce0c5 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol:3151:78:
     |
3151 |     function send(SendParam calldata _sendParam, MessagingFee calldata _fee, address _refundAddress)
     |                                                                              ^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol:3218:9:
     |
3218 |         address _refundAddress,
     |         ^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2982) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2970) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#3007-3009) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2981-2991) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2981-2991)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2993-3005) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2993-3005)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0x33a76173680427cba3ffc3a625b7bc43b08ce0c5-Honey_Comb_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x33a76173680427cba3ffc3a625b7bc43b08ce0c5 analyzed (42 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 125 / 342 - 合约地址：0xfdcec6b311bdd78255606fb7932ea42cfd012e8f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol:3151:78:
     |
3151 |     function send(SendParam calldata _sendParam, MessagingFee calldata _fee, address _refundAddress)
     |                                                                              ^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol:3218:9:
     |
3218 |         address _refundAddress,
     |         ^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2982) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2970) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#3007-3009) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2981-2991) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2981-2991)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2993-3005) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2993-3005)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xfdcec6b311bdd78255606fb7932ea42cfd012e8f-Sproto_Gremlins_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xfdcec6b311bdd78255606fb7932ea42cfd012e8f analyzed (42 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 126 / 342 - 合约地址：0xb33d976ba011c5c619397e8e71db8307211fa4d1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb33d976ba011c5c619397e8e71db8307211fa4d1-InterestLogic' running
INFO:Slither:0xb33d976ba011c5c619397e8e71db8307211fa4d1 analyzed (17 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 127 / 342 - 合约地址：0x82e81ef6fbc9464c2fd28c1fc9f01c166d32425a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x82e81ef6fbc9464c2fd28c1fc9f01c166d32425a-ValidationLogic' running
INFO:Slither:0x82e81ef6fbc9464c2fd28c1fc9f01c166d32425a analyzed (20 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 128 / 342 - 合约地址：0x93f5c828553968c659db847d5ccea61836efd72d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x93f5c828553968c659db847d5ccea61836efd72d-CommonAccountingLogic' running
INFO:Slither:0x93f5c828553968c659db847d5ccea61836efd72d analyzed (19 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 129 / 342 - 合约地址：0x09ad4b3bb2f0a24515391377a69b7fb2a919bf2a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x09ad4b3bb2f0a24515391377a69b7fb2a919bf2a-SpokeAccountingLogic' running
INFO:Slither:0x09ad4b3bb2f0a24515391377a69b7fb2a919bf2a analyzed (23 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 130 / 342 - 合约地址：0x20b5fba3ca9bace7b3fc421846cb76d0ded4ab93 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x20b5fba3ca9bace7b3fc421846cb76d0ded4ab93-CommonOptimisticFinalityLogic' running
INFO:Slither:0x20b5fba3ca9bace7b3fc421846cb76d0ded4ab93 analyzed (16 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 131 / 342 - 合约地址：0x350e13f38b0665f776545d83bc38d7ab1e35312d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x350e13f38b0665f776545d83bc38d7ab1e35312d-SpokeOptimisticFinalityLogic' running
INFO:Detectors:
OCCV3: weth.withdraw(payout) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#302) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318)  sends oracle request but SpokeOptimisticFinalityLogic (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#20-638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x350e13f38b0665f776545d83bc38d7ab1e35312d analyzed (30 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 132 / 342 - 合约地址：0x732f1b6f02114d33d7012aa119a01b3bda7cddd8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x732f1b6f02114d33d7012aa119a01b3bda7cddd8-Spoke' running
INFO:Detectors:
OCCV3: Spoke.weth (src/contracts/lendingSpoke/Spoke.sol#41) is used in oracle request but is modified in Spoke.initialize(uint16,address,IWormholeTunnel,IWETH) (src/contracts/lendingSpoke/Spoke.sol#63-79) without protection. Please add access control.
OCCV4: Spoke.unwrapWethToTarget(IWormholeTunnel.MessageSource,IERC20,uint256,bytes) (src/contracts/lendingSpoke/Spoke.sol#262-281) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: weth.withdraw(payout) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#302) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318)  sends oracle request but SpokeOptimisticFinalityLogic (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#20-638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x732f1b6f02114d33d7012aa119a01b3bda7cddd8 analyzed (36 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 133 / 342 - 合约地址：0x511e839f293d2401580bc160ec840c845101203c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x511e839f293d2401580bc160ec840c845101203c-SellerToken' running
INFO:Detectors:
OCCV8: deprecated function invoked in priceData = _oracle.getPrice(_tokens[token_].id) (contracts/receivers/SellerToken.sol#164) Do not use this function.
OCCV8: deprecated function invoked in tokenAmount = amountInUSD * NUMERATOR / tokenPresale.getPrice() (contracts/receivers/SellerToken.sol#244) Do not use this function.
Reference: ...
INFO:Slither:0x511e839f293d2401580bc160ec840c845101203c analyzed (25 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 134 / 342 - 合约地址：0x3c06b13873915d0beeeb8289eed0b8912de55dd4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3c06b13873915d0beeeb8289eed0b8912de55dd4-CommonAccountingLogic' running
INFO:Slither:0x3c06b13873915d0beeeb8289eed0b8912de55dd4 analyzed (20 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 135 / 342 - 合约地址：0xfe1d41af5867a0d7f653dd13908d985d6d3c415a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfe1d41af5867a0d7f653dd13908d985d6d3c415a-SpokeAccountingLogic' running
INFO:Slither:0xfe1d41af5867a0d7f653dd13908d985d6d3c415a analyzed (24 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 136 / 342 - 合约地址：0x2cb91374624a5ec81ef205db379861b7154d49c3 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2cb91374624a5ec81ef205db379861b7154d49c3-Spoke' running
INFO:Detectors:
OCCV3: Spoke.weth (src/contracts/lendingSpoke/Spoke.sol#41) is used in oracle request but is modified in Spoke.initialize(uint16,address,IWormholeTunnel,IWETH) (src/contracts/lendingSpoke/Spoke.sol#63-79) without protection. Please add access control.
OCCV4: Spoke.unwrapWethToTarget(IWormholeTunnel.MessageSource,IERC20,uint256,bytes) (src/contracts/lendingSpoke/Spoke.sol#262-281) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: weth.withdraw(payout) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#302) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#263-318)  sends oracle request but SpokeOptimisticFinalityLogic (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#20-638) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2cb91374624a5ec81ef205db379861b7154d49c3 analyzed (37 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 137 / 342 - 合约地址：0xc2ed21709d6d8d8ba24e9b1e8165604f6130a246 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc2ed21709d6d8d8ba24e9b1e8165604f6130a246-Spoke' running
INFO:Detectors:
OCCV3: weth.withdraw(rfp.amount) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#278) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#242-296) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#242-296)  sends oracle request but SpokeOptimisticFinalityLogic (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#19-585) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc2ed21709d6d8d8ba24e9b1e8165604f6130a246 analyzed (36 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 138 / 342 - 合约地址：0xe29578c5aef73b045d0baabee52b223d5cf02443 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe29578c5aef73b045d0baabee52b223d5cf02443-SpokeOptimisticFinalityLogic' running
INFO:Detectors:
OCCV3: weth.withdraw(rfp.amount) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#278) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#242-296) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SpokeOptimisticFinalityLogic.handleReleaseFunds(HubSpokeStructs.SpokeOptimisticFinalityState,IWETH,bytes) (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#242-296)  sends oracle request but SpokeOptimisticFinalityLogic (src/libraries/logic/optimisticFinality/SpokeOptimisticFinalityLogic.sol#19-585) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe29578c5aef73b045d0baabee52b223d5cf02443 analyzed (30 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 139 / 342 - 合约地址：0x6e0e8c78d7b894beff66ade8b27b089a53cf4d04 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6e0e8c78d7b894beff66ade8b27b089a53cf4d04-CommonAccountingLogic' running
INFO:Slither:0x6e0e8c78d7b894beff66ade8b27b089a53cf4d04 analyzed (25 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 140 / 342 - 合约地址：0xf93353f929b19b82a7f01b61b02844cabf76c764 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf93353f929b19b82a7f01b61b02844cabf76c764-SpokeAccountingLogic' running
INFO:Slither:0xf93353f929b19b82a7f01b61b02844cabf76c764 analyzed (25 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 141 / 342 - 合约地址：0xe0b791529f7876dc2b9d748a2e6570e605f40e5e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol:3151:78:
     |
3151 |     function send(SendParam calldata _sendParam, MessagingFee calldata _fee, address _refundAddress)
     |                                                                              ^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol:3218:9:
     |
3218 |         address _refundAddress,
     |         ^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in KingdomlyFeeContract.getOneDollarInWei().price (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2982) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: KingdomlyFeeContract.maxPriceAgeInSeconds (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2970) is used in oracle request but is modified in KingdomlyFeeContract.updateMaxPriceAgeInSeconds(uint256) (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#3007-3009) without protection. Please add access control.
OCCV4: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2981-2991) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.getOneDollarInWei() (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2981-2991)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2993-3005) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: KingdomlyFeeContract.updateOracleAndGetOneDollarInWei(bytes[]) (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2993-3005)  sends oracle request but KingdomlyFeeContract (crytic-export/etherscan-contracts/0xe0b791529f7876dc2b9d748a2e6570e605f40e5e-Honey_Jar_Gen_1_Proxy.sol#2968-3010) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe0b791529f7876dc2b9d748a2e6570e605f40e5e analyzed (42 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 142 / 342 - 合约地址：0x9c3b7240ed85b3b88952d1e1d4dd108f85756e8d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9c3b7240ed85b3b88952d1e1d4dd108f85756e8d-WitPriceFeedsDataLib' running
ERROR:Detectors:No oracle service identified in contracts.
ERROR:Detectors:No oracle service identified. Oracle services of Chainlink, Chronicle, Pyth and RedStone are supported.
INFO:Detectors:
OCCV4: WitPriceFeedsDataLib.fetchLastUpdate(WitPriceFeedsDataLib.PriceFeed,IWitPriceFeeds.ID4,uint24) (contracts/data/WitPriceFeedsDataLib.sol#116-200) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: WitPriceFeedsDataLib.fetchLastUpdate(WitPriceFeedsDataLib.PriceFeed,IWitPriceFeeds.ID4,uint24) (contracts/data/WitPriceFeedsDataLib.sol#116-200)  sends oracle request but WitPriceFeedsDataLib (contracts/data/WitPriceFeedsDataLib.sol#19-968) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: WitPriceFeedsDataLib.settlePriceFeedMapper(string,int8,IWitPriceFeeds.Mappers,string[]) (contracts/data/WitPriceFeedsDataLib.sol#321-360) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: WitPriceFeedsDataLib.settlePriceFeedMapper(string,int8,IWitPriceFeeds.Mappers,string[]) (contracts/data/WitPriceFeedsDataLib.sol#321-360)  sends oracle request but WitPriceFeedsDataLib (contracts/data/WitPriceFeedsDataLib.sol#19-968) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: WitPriceFeedsDataLib.settlePriceFeedOracle(string,int8,IWitPriceFeeds.Oracles,address,bytes32) (contracts/data/WitPriceFeedsDataLib.sol#362-393) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: WitPriceFeedsDataLib.settlePriceFeedOracle(string,int8,IWitPriceFeeds.Oracles,address,bytes32) (contracts/data/WitPriceFeedsDataLib.sol#362-393)  sends oracle request but WitPriceFeedsDataLib (contracts/data/WitPriceFeedsDataLib.sol#19-968) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: WitnetCBOR.readBytes(WitnetCBOR.CBOR) (contracts/libs/WitnetCBOR.sol#313-344) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: WitnetCBOR.readBytes(WitnetCBOR.CBOR) (contracts/libs/WitnetCBOR.sol#313-344)  sends oracle request but WitnetCBOR (contracts/libs/WitnetCBOR.sol#13-584) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9c3b7240ed85b3b88952d1e1d4dd108f85756e8d analyzed (19 contracts with 3 detectors), 8 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 143 / 342 - 合约地址：0x6f79c23d482ea6d2b075092289aefb86e761ee9d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6f79c23d482ea6d2b075092289aefb86e761ee9d-PythOracle' running
INFO:Detectors:
OCCV12: response in p.price <= 0 || p.conf > uint64(p.price) * maxConfWidth / BASIS_POINTS (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in feedExponent = int8(baseDecimals) - int8(priceStruct.expo) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in scale = ScaleUtils.from(quoteDecimals + uint8(- feedExponent),0) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#106) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle._fetchPriceStruct() (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#115-138)  sends oracle request but PythOracle (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#16-139) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: p = IPyth(pyth).getPriceUnsafe(feedId) (lib/euler-price-oracle/src/adapter/pyth/PythOracle.sol#116) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x6f79c23d482ea6d2b075092289aefb86e761ee9d analyzed (10 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 144 / 342 - 合约地址：0x9fab0e7bbaf0f1a3f3c4d1df4770e2ccb5299b8c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9fab0e7bbaf0f1a3f3c4d1df4770e2ccb5299b8c-RewardsManagerModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9fab0e7bbaf0f1a3f3c4d1df4770e2ccb5299b8c analyzed (69 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 145 / 342 - 合约地址：0x01a4be191964de8272b3411367829038c3f4406b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x01a4be191964de8272b3411367829038c3f4406b-PoolModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x01a4be191964de8272b3411367829038c3f4406b analyzed (65 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 146 / 342 - 合约地址：0x37f4fa12bd0e90831f50610b5ee0eda8afdacf97 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x37f4fa12bd0e90831f50610b5ee0eda8afdacf97-VaultModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x37f4fa12bd0e90831f50610b5ee0eda8afdacf97 analyzed (69 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 147 / 342 - 合约地址：0x86e513e8b1c580baf9cf9cee43b196dbe65b9f5b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x86e513e8b1c580baf9cf9cee43b196dbe65b9f5b-NodeModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x86e513e8b1c580baf9cf9cee43b196dbe65b9f5b analyzed (40 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 148 / 342 - 合约地址：0x7c2d5b1e7d7be588389bdb94138cc37dc014e85c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7c2d5b1e7d7be588389bdb94138cc37dc014e85c-PythMainnetPriceProvider' running
INFO:Slither:0x7c2d5b1e7d7be588389bdb94138cc37dc014e85c analyzed (17 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 149 / 342 - 合约地址：0x21e9d735db12221a787317954bddd7144353b5d7 ---
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 722, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 211, in __init__
    self._compile(**kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 633, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 439, in compile
    filenames, working_dir, remappings = _handle_multiple_files(
                                         ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 265, in _handle_multiple_files
    raise IOError(
OSError: Path 'crytic-export/etherscan-contracts/0x21e9d735db12221a787317954bddd7144353b5d7-PositionManager/../../node_modules/@synthetixio/core-contracts/contracts/utils/ERC2771Context.sol' is outside of the allowed directory: /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x21e9d735db12221a787317954bddd7144353b5d7-PositionManager

[Return code]: 1

================================================================================

--- 分析结果 150 / 342 - 合约地址：0xf1e04aff68bb60af56592d4ac3157be62bf2fad4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf1e04aff68bb60af56592d4ac3157be62bf2fad4-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xf1e04aff68bb60af56592d4ac3157be62bf2fad4 analyzed (41 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 151 / 342 - 合约地址：0xe37042640e497c82dccaf00643013b6418947b92 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe37042640e497c82dccaf00643013b6418947b92-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe37042640e497c82dccaf00643013b6418947b92 analyzed (78 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 152 / 342 - 合约地址：0xcdf47798128b2a771465b5833ca0c3ef1c913add ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcdf47798128b2a771465b5833ca0c3ef1c913add-CollateralConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xcdf47798128b2a771465b5833ca0c3ef1c913add analyzed (47 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 153 / 342 - 合约地址：0x7ccb9c6d39364831451f3a40d6411e506424e203 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7ccb9c6d39364831451f3a40d6411e506424e203-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7ccb9c6d39364831451f3a40d6411e506424e203 analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 154 / 342 - 合约地址：0x8fbf6d64b1e9b679a5cbacfcc4c8ca72df65f251 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8fbf6d64b1e9b679a5cbacfcc4c8ca72df65f251-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x8fbf6d64b1e9b679a5cbacfcc4c8ca72df65f251 analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 155 / 342 - 合约地址：0xbca246cd7850875e5c6598451b916f3a33a773d8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbca246cd7850875e5c6598451b916f3a33a773d8-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xbca246cd7850875e5c6598451b916f3a33a773d8 analyzed (76 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 156 / 342 - 合约地址：0x50a6b732b9a4dd3caa5f8fb33110728f8f65e4f0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x50a6b732b9a4dd3caa5f8fb33110728f8f65e4f0-MarketCollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x50a6b732b9a4dd3caa5f8fb33110728f8f65e4f0 analyzed (56 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 157 / 342 - 合约地址：0xb0a8c84360f505e050f4f76042fdc4f29320be2a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb0a8c84360f505e050f4f76042fdc4f29320be2a-PoolConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb0a8c84360f505e050f4f76042fdc4f29320be2a analyzed (65 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 158 / 342 - 合约地址：0x7656bdee9f4e7a507fd0c5b2431d3f3690e20711 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7656bdee9f4e7a507fd0c5b2431d3f3690e20711-MarketManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7656bdee9f4e7a507fd0c5b2431d3f3690e20711 analyzed (64 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 159 / 342 - 合约地址：0xeb3725c150ecf8d3659af5d49186970451411c95 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xeb3725c150ecf8d3659af5d49186970451411c95-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xeb3725c150ecf8d3659af5d49186970451411c95 analyzed (77 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 160 / 342 - 合约地址：0xd7be1a350a214b788960691ec43035500276ae5e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd7be1a350a214b788960691ec43035500276ae5e-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd7be1a350a214b788960691ec43035500276ae5e analyzed (71 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 161 / 342 - 合约地址：0xe8e04a78b54455705ab50f612b43739b1de68d05 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe8e04a78b54455705ab50f612b43739b1de68d05-PoolModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe8e04a78b54455705ab50f612b43739b1de68d05 analyzed (67 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 162 / 342 - 合约地址：0x6847b8da8733413ce59c9b5db8f78ebacc070760 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6847b8da8733413ce59c9b5db8f78ebacc070760-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x6847b8da8733413ce59c9b5db8f78ebacc070760 analyzed (71 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 163 / 342 - 合约地址：0x94f619642b80bbbae9d466ffbd8cd554c394166d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x94f619642b80bbbae9d466ffbd8cd554c394166d-ManaVendingMachine' running
INFO:Detectors:
OCCV12: response in requiredCrypto = (totalPrice * 1e18) / uint256(convertedPrice) (contracts/ManaVendingMachine.sol#342) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: pyth = IPyth(_pyth) (contracts/ManaVendingMachine.sol#153) Instantiates a contract but is not protected. Please add access control.
OCCV3: ManaVendingMachine.pyth (contracts/ManaVendingMachine.sol#17) is used in oracle request but is modified in ManaVendingMachine.setPythAddress(address) (contracts/ManaVendingMachine.sol#152-154) without protection. Please add access control.
OCCV3: ManaVendingMachine.feedID (contracts/ManaVendingMachine.sol#72) is used in oracle request but is modified in ManaVendingMachine.setFeedID(string,bytes32) (contracts/ManaVendingMachine.sol#241-249) without protection. Please add access control.
OCCV4: ManaVendingMachine.fetchPrice(bytes[]) (contracts/ManaVendingMachine.sol#274-288) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ManaVendingMachine.fetchPrice(bytes[]) (contracts/ManaVendingMachine.sol#274-288)  sends oracle request but ManaVendingMachine (contracts/ManaVendingMachine.sol#12-467) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x94f619642b80bbbae9d466ffbd8cd554c394166d analyzed (9 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 164 / 342 - 合约地址：0x57dd04596d64a2ef9faaa80ce09ad0145d2ee844 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x57dd04596d64a2ef9faaa80ce09ad0145d2ee844-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x57dd04596d64a2ef9faaa80ce09ad0145d2ee844 analyzed (78 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 165 / 342 - 合约地址：0xedd60593f675047685d290b78e82815609ed5d6d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xedd60593f675047685d290b78e82815609ed5d6d-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xedd60593f675047685d290b78e82815609ed5d6d analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 166 / 342 - 合约地址：0xeca8e18abe37d0633435261225f56954f4980faa ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xeca8e18abe37d0633435261225f56954f4980faa-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xeca8e18abe37d0633435261225f56954f4980faa analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 167 / 342 - 合约地址：0xec2ceaff77ee3dc138dc95cbdd19d31a8d83d9ae ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xec2ceaff77ee3dc138dc95cbdd19d31a8d83d9ae-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xec2ceaff77ee3dc138dc95cbdd19d31a8d83d9ae analyzed (76 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 168 / 342 - 合约地址：0x2433dd91699776881f68cf215ef05fb6efdde8b4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2433dd91699776881f68cf215ef05fb6efdde8b4-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2433dd91699776881f68cf215ef05fb6efdde8b4 analyzed (71 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 169 / 342 - 合约地址：0x7179f31c6d20d4af5fc5f6d0c8f3a9045e5abd3b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7179f31c6d20d4af5fc5f6d0c8f3a9045e5abd3b-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7179f31c6d20d4af5fc5f6d0c8f3a9045e5abd3b analyzed (77 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 170 / 342 - 合约地址：0xe801a383c8b680b21138b801e067dd54b9a03556 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe801a383c8b680b21138b801e067dd54b9a03556-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe801a383c8b680b21138b801e067dd54b9a03556 analyzed (71 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 171 / 342 - 合约地址：0x041f7bac39639b2a1774f526add84e17eb1d013a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x041f7bac39639b2a1774f526add84e17eb1d013a-PriceModelENS' running
INFO:Detectors:
OCCV8: deprecated function invoked in returnData = pyth.getPrice(nativeUsdPriceFeedId) (src/lib/OracleHandler.sol#124) Do not use this function.
Reference: ...
INFO:Slither:0x041f7bac39639b2a1774f526add84e17eb1d013a analyzed (9 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 172 / 342 - 合约地址：0xdf48c2da7c3050fd5b3c9d6cd80651778f2a8f62 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdf48c2da7c3050fd5b3c9d6cd80651778f2a8f62-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xdf48c2da7c3050fd5b3c9d6cd80651778f2a8f62 analyzed (78 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 173 / 342 - 合约地址：0x12a948d2fb8f22baeb62baa620f8fbef65ec89e9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x12a948d2fb8f22baeb62baa620f8fbef65ec89e9-CollateralConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x12a948d2fb8f22baeb62baa620f8fbef65ec89e9 analyzed (48 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 174 / 342 - 合约地址：0x60100476a2018f6103fd4924b6364285d79b84b5 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x60100476a2018f6103fd4924b6364285d79b84b5-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x60100476a2018f6103fd4924b6364285d79b84b5 analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 175 / 342 - 合约地址：0xc09a31d7fcade6d48ad37ab72833a34600c21b9b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc09a31d7fcade6d48ad37ab72833a34600c21b9b-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc09a31d7fcade6d48ad37ab72833a34600c21b9b analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 176 / 342 - 合约地址：0x6e045e3ad60755e5c97a4d15332e4088520b8424 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6e045e3ad60755e5c97a4d15332e4088520b8424-MarketCollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x6e045e3ad60755e5c97a4d15332e4088520b8424 analyzed (58 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 177 / 342 - 合约地址：0x9476e8882b8dec9ddc598501b5bdd5c9c3ad9d9e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9476e8882b8dec9ddc598501b5bdd5c9c3ad9d9e-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9476e8882b8dec9ddc598501b5bdd5c9c3ad9d9e analyzed (76 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 178 / 342 - 合约地址：0x3d3161d5fe1c14b9734cdc41b8d442ea360e43a9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3d3161d5fe1c14b9734cdc41b8d442ea360e43a9-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x3d3161d5fe1c14b9734cdc41b8d442ea360e43a9 analyzed (71 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 179 / 342 - 合约地址：0xcf195ee68bd6cae922e37ea5c0a9e885fb360fa2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcf195ee68bd6cae922e37ea5c0a9e885fb360fa2-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xcf195ee68bd6cae922e37ea5c0a9e885fb360fa2 analyzed (77 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 180 / 342 - 合约地址：0xf69845397cdef05f08a2ca4e37107ab85829faa0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf69845397cdef05f08a2ca4e37107ab85829faa0-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#122-156):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xf69845397cdef05f08a2ca4e37107ab85829faa0 analyzed (72 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 181 / 342 - 合约地址：0x4ce58e9f705069cdb2235a10d131b2a6638352e8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4ce58e9f705069cdb2235a10d131b2a6638352e8-Liquidator' running
INFO:Detectors:
OCCV4: Liquidator.liquidateSingleCollateralWithPythOracle(Liquidator.LiquidationParams,bytes[],bytes[]) (contracts/Liquidator.sol#161-258) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Liquidator.liquidateSingleCollateralWithPythOracle(Liquidator.LiquidationParams,bytes[],bytes[]) (contracts/Liquidator.sol#161-258)  sends oracle request but Liquidator (contracts/Liquidator.sol#13-383) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x4ce58e9f705069cdb2235a10d131b2a6638352e8 analyzed (17 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 182 / 342 - 合约地址：0x548b909a0f8b2a8f2943c840a91641c20575bf74 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x548b909a0f8b2a8f2943c840a91641c20575bf74-StVolUpDown' running
Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in pythPrice = oracle.getPrice(priceId) (contracts/StVol.sol#379) Do not use this function.
Reference: ...
INFO:Slither:0x548b909a0f8b2a8f2943c840a91641c20575bf74 analyzed (13 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 183 / 342 - 合约地址：0x618148f2bb58c5c89737bb160070613d4e1b790a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x618148f2bb58c5c89737bb160070613d4e1b790a-StVolUpDown' running
Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in pythPrice = oracle.getPrice(priceId) (contracts/StVol.sol#379) Do not use this function.
Reference: ...
INFO:Slither:0x618148f2bb58c5c89737bb160070613d4e1b790a analyzed (13 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 184 / 342 - 合约地址：0x7846a7289a6e7131021664b07ae4778cba382c94 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7846a7289a6e7131021664b07ae4778cba382c94-StVol1PerUp' running
Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in pythPrice = oracle.getPrice(priceId) (contracts/StVol.sol#379) Do not use this function.
Reference: ...
INFO:Slither:0x7846a7289a6e7131021664b07ae4778cba382c94 analyzed (13 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 185 / 342 - 合约地址：0xf94e7f50120fe8276b85e21f31c6de097eab8813 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf94e7f50120fe8276b85e21f31c6de097eab8813-StVol1PerDown' running
Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:200:30:
    |
200 |     ) internal view returns (bytes memory) {
    |                              ^^^^^^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
   --> @openzeppelin/contracts/utils/Address.sol:223:30:
    |
223 |     ) internal pure returns (bytes memory) {
    |                              ^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in pythPrice = oracle.getPrice(priceId) (contracts/StVol.sol#379) Do not use this function.
Reference: ...
INFO:Slither:0xf94e7f50120fe8276b85e21f31c6de097eab8813 analyzed (13 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 186 / 342 - 合约地址：0xcbabc532d9f2b2761777a9aea47451d37c823c14 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcbabc532d9f2b2761777a9aea47451d37c823c14-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> contracts/PythAggregatorV3.sol:29:9:
   |
29 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (contracts/PythAggregatorV3.sol#33) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (contracts/PythAggregatorV3.sol#33) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (contracts/PythAggregatorV3.sol#46) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (contracts/PythAggregatorV3.sol#46) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (contracts/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (contracts/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/PythAggregatorV3.sol#81) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/PythAggregatorV3.sol#81) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (contracts/PythAggregatorV3.sol#102) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (contracts/PythAggregatorV3.sol#102) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (contracts/PythAggregatorV3.sol#21-30) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (contracts/PythAggregatorV3.sol#21-30)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (contracts/PythAggregatorV3.sol#32-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (contracts/PythAggregatorV3.sol#32-35)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (contracts/PythAggregatorV3.sol#45-48) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (contracts/PythAggregatorV3.sol#45-48)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (contracts/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (contracts/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (contracts/PythAggregatorV3.sol#68-89) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (contracts/PythAggregatorV3.sol#68-89)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (contracts/PythAggregatorV3.sol#91-111) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (contracts/PythAggregatorV3.sol#91-111)  sends oracle request but PythAggregatorV3 (contracts/PythAggregatorV3.sol#12-112) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xcbabc532d9f2b2761777a9aea47451d37c823c14 analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 187 / 342 - 合约地址：0xc5774412dbd3734a5925936f320ee91a2940488d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc5774412dbd3734a5925936f320ee91a2940488d-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc5774412dbd3734a5925936f320ee91a2940488d analyzed (5 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 188 / 342 - 合约地址：0xf2d7b0f5cb09928db0f0686f4e64b4ad96e04562 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf2d7b0f5cb09928db0f0686f4e64b4ad96e04562-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xf2d7b0f5cb09928db0f0686f4e64b4ad96e04562 analyzed (5 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 189 / 342 - 合约地址：0x0f8e81e42d16ae713c3bfdbc47a50c53207c4e4a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0f8e81e42d16ae713c3bfdbc47a50c53207c4e4a-NativePaymentsHandler' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/handlers/NativePaymentsHandler.sol:112:9:
    |
112 |         _msgSender().call{value: balance}("");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in (amount_ * uint256(uint64(priceInfo.price)) * NUMERATOR) / _dataSalePoint.getPrice(type_) / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/handlers/NativePaymentsHandler.sol#237-240) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in NativePaymentsHandler._pay(IDataSalePoint.Type,address,address,bool).priceInfo (contracts/handlers/NativePaymentsHandler.sol#155) not checked. Please check before use it.
OCCV12: response in block.timestamp - priceInfo.publishTime > _priceThreshold (contracts/handlers/NativePaymentsHandler.sol#233) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * uint256(uint64(priceInfo.price)) * NUMERATOR) / _dataSalePoint.getPrice(type_) / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/handlers/NativePaymentsHandler.sol#237-240) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * uint256(uint64(priceInfo.price)) * NUMERATOR) / _dataSalePoint.getPrice(type_) / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/handlers/NativePaymentsHandler.sol#237-240) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in turn.supply < turn.sold + _getLiquidity(amount,type_,priceInfo) (contracts/handlers/NativePaymentsHandler.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - priceInfo.publishTime > _priceThreshold (contracts/handlers/NativePaymentsHandler.sol#168) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * NUMERATOR) / (10 ** (ETH_DECIMALS + decimals)) (contracts/handlers/NativePaymentsHandler.sol#171) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/handlers/NativePaymentsHandler.sol#198) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _pythPriceFeed = IPyth(pythPriceFeed_) (contracts/handlers/NativePaymentsHandler.sol#85) Instantiates a contract but is not protected. Please add access control.
OCCV3: NativePaymentsHandler._pythPriceFeedID (contracts/handlers/NativePaymentsHandler.sol#27) is used in oracle request but is modified in NativePaymentsHandler.setPriceFeedID(bytes32) (contracts/handlers/NativePaymentsHandler.sol#88-90) without protection. Please add access control.
OCCV3: NativePaymentsHandler._pythPriceFeed (contracts/handlers/NativePaymentsHandler.sol#26) is used in oracle request but is modified in NativePaymentsHandler.setPriceFeedAddress(address) (contracts/handlers/NativePaymentsHandler.sol#84-86) without protection. Please add access control.
OCCV5: NativePaymentsHandler._pay(IDataSalePoint.Type,address,address,bool) (contracts/handlers/NativePaymentsHandler.sol#135-194)  sends oracle request but NativePaymentsHandler (contracts/handlers/NativePaymentsHandler.sol#15-244) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x0f8e81e42d16ae713c3bfdbc47a50c53207c4e4a analyzed (16 contracts with 3 detectors), 13 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 190 / 342 - 合约地址：0x9975a5c7f4fccce40b53672f7f46b9e4a85199f7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9975a5c7f4fccce40b53672f7f46b9e4a85199f7-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> src/PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (src/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (src/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (src/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (src/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (src/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (src/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (src/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (src/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (src/PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (src/PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (src/PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (src/PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (src/PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (src/PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (src/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (src/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (src/PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (src/PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (src/PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (src/PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (src/PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (src/PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9975a5c7f4fccce40b53672f7f46b9e4a85199f7 analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 191 / 342 - 合约地址：0xc40f658462f8c5e779bf67515a48e3f83e804480 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc40f658462f8c5e779bf67515a48e3f83e804480-ETHReceiver' running
Warning: Warning: Return value of low-level calls not used.
  --> contracts/receivers/ETHReceiver.sol:99:9:
   |
99 |         _msgSender().call{value: balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in ETHReceiver._pay(INode.Variant,address,string,bool).PFData (contracts/receivers/ETHReceiver.sol#133) not checked. Please check before use it.
OCCV12: response in require(bool,error)(block.timestamp - PFData.publishTime <= _priceThreshold,revert PriceThresholdError()()) (contracts/receivers/ETHReceiver.sol#204) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * uint256(uint64(PFData.price))) / (10 ** uint8(uint32(- 1 * PFData.expo))) (contracts/receivers/ETHReceiver.sol#205) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - PFData.publishTime <= _priceThreshold,revert PriceThresholdError()()) (contracts/receivers/ETHReceiver.sol#144) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * NUMERATOR) / (10 ** (DECIMALS + decimals)) (contracts/receivers/ETHReceiver.sol#146) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/receivers/ETHReceiver.sol#170) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _priceFeed = IPyth(priceFeed_) (contracts/receivers/ETHReceiver.sol#71) Instantiates a contract but is not protected. Please add access control.
OCCV3: ETHReceiver._priceFeed (contracts/receivers/ETHReceiver.sol#28) is used in oracle request but is modified in ETHReceiver.setPriceFeedAddress(address) (contracts/receivers/ETHReceiver.sol#70-72) without protection. Please add access control.
OCCV3: ETHReceiver._priceFeedID (contracts/receivers/ETHReceiver.sol#29) is used in oracle request but is modified in ETHReceiver.setPriceFeedID(bytes32) (contracts/receivers/ETHReceiver.sol#74-76) without protection. Please add access control.
OCCV5: ETHReceiver._pay(INode.Variant,address,string,bool) (contracts/receivers/ETHReceiver.sol#122-166)  sends oracle request but ETHReceiver (contracts/receivers/ETHReceiver.sol#18-220) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc40f658462f8c5e779bf67515a48e3f83e804480 analyzed (21 contracts with 3 detectors), 13 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 192 / 342 - 合约地址：0xf1e95d0420aeda75ebf7804207919ad5616d8792 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf1e95d0420aeda75ebf7804207919ad5616d8792-ETHReceiver' running
Warning: Warning: Return value of low-level calls not used.
  --> contracts/receivers/ETHReceiver.sol:99:9:
   |
99 |         _msgSender().call{value: balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in ETHReceiver._pay(INode.Variant,address,string,bool).PFData (contracts/receivers/ETHReceiver.sol#133) not checked. Please check before use it.
OCCV12: response in require(bool,error)(block.timestamp - PFData.publishTime <= _priceThreshold,revert PriceThresholdError()()) (contracts/receivers/ETHReceiver.sol#204) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * uint256(uint64(PFData.price))) / (10 ** uint8(uint32(- 1 * PFData.expo))) (contracts/receivers/ETHReceiver.sol#205) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/ETHReceiver.sol#206) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount + bonus (contracts/receivers/ETHReceiver.sol#211) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - PFData.publishTime <= _priceThreshold,revert PriceThresholdError()()) (contracts/receivers/ETHReceiver.sol#144) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * NUMERATOR) / (10 ** (DECIMALS + decimals)) (contracts/receivers/ETHReceiver.sol#146) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/receivers/ETHReceiver.sol#170) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _priceFeed = IPyth(priceFeed_) (contracts/receivers/ETHReceiver.sol#71) Instantiates a contract but is not protected. Please add access control.
OCCV3: ETHReceiver._priceFeed (contracts/receivers/ETHReceiver.sol#28) is used in oracle request but is modified in ETHReceiver.setPriceFeedAddress(address) (contracts/receivers/ETHReceiver.sol#70-72) without protection. Please add access control.
OCCV3: ETHReceiver._priceFeedID (contracts/receivers/ETHReceiver.sol#29) is used in oracle request but is modified in ETHReceiver.setPriceFeedID(bytes32) (contracts/receivers/ETHReceiver.sol#74-76) without protection. Please add access control.
OCCV5: ETHReceiver._pay(INode.Variant,address,string,bool) (contracts/receivers/ETHReceiver.sol#122-166)  sends oracle request but ETHReceiver (contracts/receivers/ETHReceiver.sol#18-215) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xf1e95d0420aeda75ebf7804207919ad5616d8792 analyzed (21 contracts with 3 detectors), 14 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 193 / 342 - 合约地址：0x4f99c4ab8070cb83d369070df10379efa1b2915a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4f99c4ab8070cb83d369070df10379efa1b2915a-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> @pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x4f99c4ab8070cb83d369070df10379efa1b2915a analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 194 / 342 - 合约地址：0xd660ab304fd76db5e8a04bddc789c37fa86db596 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd660ab304fd76db5e8a04bddc789c37fa86db596-EthWriter' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/EthWriter.sol:108:9:
    |
108 |         _msgSender().call{value: balance}("");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in EthWriter._deposit(address,string).priceInfo (contracts/EthWriter.sol#144) not checked. Please check before use it.
OCCV12: response in block.timestamp - priceInfo.publishTime > _threshold (contracts/EthWriter.sol#215) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * uint256(uint64(priceInfo.price)) * NUMERATOR) / _book.getCurrentPrice() / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/EthWriter.sol#219-222) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * uint256(uint64(priceInfo.price)) * NUMERATOR) / _book.getCurrentPrice() / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/EthWriter.sol#219-222) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - priceInfo.publishTime > _threshold (contracts/EthWriter.sol#157) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * NUMERATOR) / (10 ** (ETH_DECIMALS + decimals)) (contracts/EthWriter.sol#160) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/EthWriter.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _priceFeed = IPyth(priceFeed_) (contracts/EthWriter.sol#84) Instantiates a contract but is not protected. Please add access control.
OCCV3: EthWriter._priceFeed (contracts/EthWriter.sol#30) is used in oracle request but is modified in EthWriter.setPriceFeedAddress(address) (contracts/EthWriter.sol#83-85) without protection. Please add access control.
OCCV3: EthWriter._id (contracts/EthWriter.sol#31) is used in oracle request but is modified in EthWriter.setPriceFeedID(bytes32) (contracts/EthWriter.sol#87-89) without protection. Please add access control.
OCCV5: EthWriter._deposit(address,string) (contracts/EthWriter.sol#131-178)  sends oracle request but EthWriter (contracts/EthWriter.sol#16-226) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd660ab304fd76db5e8a04bddc789c37fa86db596 analyzed (19 contracts with 3 detectors), 11 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 195 / 342 - 合约地址：0x9fb289147704fada1cdeaa0738f974d16f177ccc ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9fb289147704fada1cdeaa0738f974d16f177ccc-NativeCurrencyStreamer' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/presale/NativeCurrencyStreamer.sol:109:9:
    |
109 |         _msgSender().call{value: balance}("");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in NativeCurrencyStreamer._deposit(address,string).priceInfo (contracts/presale/NativeCurrencyStreamer.sol#145) not checked. Please check before use it.
OCCV12: response in block.timestamp - priceInfo.publishTime > _threshold (contracts/presale/NativeCurrencyStreamer.sol#219) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in usd = (amount_ * uint256(uint64(priceInfo.price))) / (10 ** uint8(uint32(- 1 * priceInfo.expo))) (contracts/presale/NativeCurrencyStreamer.sol#223) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in token = usd * NUMERATOR / _vault.getCurrentPrice() (contracts/presale/NativeCurrencyStreamer.sol#224) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in soldTokens += _vault.getRewardForMilestone(usd,soldTokens) (contracts/presale/NativeCurrencyStreamer.sol#153) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - priceInfo.publishTime > _threshold (contracts/presale/NativeCurrencyStreamer.sol#162) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * NUMERATOR) / (10 ** (ETH_DECIMALS + decimals)) (contracts/presale/NativeCurrencyStreamer.sol#165) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/presale/NativeCurrencyStreamer.sol#186) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: _priceFeed = IPyth(priceFeed_) (contracts/presale/NativeCurrencyStreamer.sol#85) Instantiates a contract but is not protected. Please add access control.
OCCV3: NativeCurrencyStreamer._priceFeed (contracts/presale/NativeCurrencyStreamer.sol#30) is used in oracle request but is modified in NativeCurrencyStreamer.setPriceFeedAddress(address) (contracts/presale/NativeCurrencyStreamer.sol#84-86) without protection. Please add access control.
OCCV3: NativeCurrencyStreamer._id (contracts/presale/NativeCurrencyStreamer.sol#31) is used in oracle request but is modified in NativeCurrencyStreamer.setPriceFeedID(bytes32) (contracts/presale/NativeCurrencyStreamer.sol#88-90) without protection. Please add access control.
OCCV5: NativeCurrencyStreamer._deposit(address,string) (contracts/presale/NativeCurrencyStreamer.sol#132-182)  sends oracle request but NativeCurrencyStreamer (contracts/presale/NativeCurrencyStreamer.sol#16-230) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9fb289147704fada1cdeaa0738f974d16f177ccc analyzed (19 contracts with 3 detectors), 12 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 196 / 342 - 合约地址：0x2d7405eb7886febce1b9aec729297cb91107736e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2d7405eb7886febce1b9aec729297cb91107736e-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> contracts/pyth/PythAggregatorV3.sol:41:9:
   |
41 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (contracts/pyth/PythAggregatorV3.sol#45) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (contracts/pyth/PythAggregatorV3.sol#45) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (contracts/pyth/PythAggregatorV3.sol#58) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (contracts/pyth/PythAggregatorV3.sol#63) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/pyth/PythAggregatorV3.sol#85) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/pyth/PythAggregatorV3.sol#85) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (contracts/pyth/PythAggregatorV3.sol#94) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (contracts/pyth/PythAggregatorV3.sol#94) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (contracts/pyth/PythAggregatorV3.sol#33-42) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (contracts/pyth/PythAggregatorV3.sol#33-42)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (contracts/pyth/PythAggregatorV3.sol#44-47) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (contracts/pyth/PythAggregatorV3.sol#44-47)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (contracts/pyth/PythAggregatorV3.sol#57-60) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (contracts/pyth/PythAggregatorV3.sol#57-60)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (contracts/pyth/PythAggregatorV3.sol#62-65) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (contracts/pyth/PythAggregatorV3.sol#62-65)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (contracts/pyth/PythAggregatorV3.sol#80-87) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (contracts/pyth/PythAggregatorV3.sol#80-87)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (contracts/pyth/PythAggregatorV3.sol#89-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (contracts/pyth/PythAggregatorV3.sol#89-97)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2d7405eb7886febce1b9aec729297cb91107736e analyzed (4 contracts with 3 detectors), 20 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 197 / 342 - 合约地址：0x8738b2912ea53b3d43348a138bc8ad3bb145f6c9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8738b2912ea53b3d43348a138bc8ad3bb145f6c9-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> contracts/pyth/PythAggregatorV3.sol:41:9:
   |
41 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (contracts/pyth/PythAggregatorV3.sol#45) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (contracts/pyth/PythAggregatorV3.sol#58) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (contracts/pyth/PythAggregatorV3.sol#63) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/pyth/PythAggregatorV3.sol#85) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (contracts/pyth/PythAggregatorV3.sol#85) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (contracts/pyth/PythAggregatorV3.sol#94) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (contracts/pyth/PythAggregatorV3.sol#94) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (contracts/pyth/PythAggregatorV3.sol#33-42) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (contracts/pyth/PythAggregatorV3.sol#33-42)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (contracts/pyth/PythAggregatorV3.sol#44-47) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (contracts/pyth/PythAggregatorV3.sol#44-47)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (contracts/pyth/PythAggregatorV3.sol#57-60) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (contracts/pyth/PythAggregatorV3.sol#57-60)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (contracts/pyth/PythAggregatorV3.sol#62-65) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (contracts/pyth/PythAggregatorV3.sol#62-65)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (contracts/pyth/PythAggregatorV3.sol#80-87) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (contracts/pyth/PythAggregatorV3.sol#80-87)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (contracts/pyth/PythAggregatorV3.sol#89-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (contracts/pyth/PythAggregatorV3.sol#89-97)  sends oracle request but PythAggregatorV3 (contracts/pyth/PythAggregatorV3.sol#24-98) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x8738b2912ea53b3d43348a138bc8ad3bb145f6c9 analyzed (4 contracts with 3 detectors), 19 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 198 / 342 - 合约地址：0x20d12300b4805708d4293d29cb83c1e01d6f8913 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x20d12300b4805708d4293d29cb83c1e01d6f8913-PythUpdater' running
INFO:Detectors:
OCCV4: PythUpdater.updateFeeds(bytes[]) (contracts/PythUpdater.sol#18-24) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythUpdater.updateFeeds(bytes[]) (contracts/PythUpdater.sol#18-24)  sends oracle request but PythUpdater (contracts/PythUpdater.sol#11-29) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x20d12300b4805708d4293d29cb83c1e01d6f8913 analyzed (4 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 199 / 342 - 合约地址：0xd96f2ad5f40fce3fffa7a06e7d7ac5bacfd8e987 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd96f2ad5f40fce3fffa7a06e7d7ac5bacfd8e987-NAVProxyUSDTBPriceFeed' running
Warning: Warning: Return value of low-level calls not used.
  --> src/oracle/NAVProxyUSDTBPriceFeed.sol:45:9:
   |
45 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in price = pyth.getPriceUnsafe(priceId) (src/oracle/NAVProxyUSDTBPriceFeed.sol#134) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in NAVProxyUSDTBPriceFeed.getRoundData(uint80).price (src/oracle/NAVProxyUSDTBPriceFeed.sol#92) not checked. Please check before use it.
OCCV10: publishTime of oracle response in NAVProxyUSDTBPriceFeed.getRoundData(uint80).price (src/oracle/NAVProxyUSDTBPriceFeed.sol#92) not checked. Please check before use it.
OCCV10: price of oracle response in NAVProxyUSDTBPriceFeed.latestRoundData().price (src/oracle/NAVProxyUSDTBPriceFeed.sol#119) not checked. Please check before use it.
OCCV10: publishTime of oracle response in NAVProxyUSDTBPriceFeed.latestRoundData().price (src/oracle/NAVProxyUSDTBPriceFeed.sol#119) not checked. Please check before use it.
OCCV10: price of oracle response in NAVProxyUSDTBPriceFeed._getPriceFromNAV(int256).price (src/oracle/NAVProxyUSDTBPriceFeed.sol#134) not checked. Please check before use it.
OCCV10: publishTime of oracle response in NAVProxyUSDTBPriceFeed._getPriceFromNAV(int256).price (src/oracle/NAVProxyUSDTBPriceFeed.sol#134) not checked. Please check before use it.
OCCV12: response in scaledAnswer = (answer * int256(10 ** NAV_PRICE_DECIMALS)) / int256(10 ** oracleDecimals) (src/oracle/NAVProxyUSDTBPriceFeed.sol#138) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: NAVProxyUSDTBPriceFeed.updateFeeds(bytes[]) (src/oracle/NAVProxyUSDTBPriceFeed.sol#37-46) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: NAVProxyUSDTBPriceFeed.updateFeeds(bytes[]) (src/oracle/NAVProxyUSDTBPriceFeed.sol#37-46)  sends oracle request but NAVProxyUSDTBPriceFeed (src/oracle/NAVProxyUSDTBPriceFeed.sol#18-142) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: NAVProxyUSDTBPriceFeed.getRoundData(uint80) (src/oracle/NAVProxyUSDTBPriceFeed.sol#79-100) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: NAVProxyUSDTBPriceFeed.getRoundData(uint80) (src/oracle/NAVProxyUSDTBPriceFeed.sol#79-100)  sends oracle request but NAVProxyUSDTBPriceFeed (src/oracle/NAVProxyUSDTBPriceFeed.sol#18-142) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: NAVProxyUSDTBPriceFeed.latestRoundData() (src/oracle/NAVProxyUSDTBPriceFeed.sol#108-128) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: NAVProxyUSDTBPriceFeed.latestRoundData() (src/oracle/NAVProxyUSDTBPriceFeed.sol#108-128)  sends oracle request but NAVProxyUSDTBPriceFeed (src/oracle/NAVProxyUSDTBPriceFeed.sol#18-142) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: NAVProxyUSDTBPriceFeed._getPriceFromNAV(int256) (src/oracle/NAVProxyUSDTBPriceFeed.sol#133-141) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: NAVProxyUSDTBPriceFeed._getPriceFromNAV(int256) (src/oracle/NAVProxyUSDTBPriceFeed.sol#133-141)  sends oracle request but NAVProxyUSDTBPriceFeed (src/oracle/NAVProxyUSDTBPriceFeed.sol#18-142) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd96f2ad5f40fce3fffa7a06e7d7ac5bacfd8e987 analyzed (4 contracts with 3 detectors), 16 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 200 / 342 - 合约地址：0x4c43f08fd41d720f3b53c35ff49fff9fc0343ee2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4c43f08fd41d720f3b53c35ff49fff9fc0343ee2-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x4c43f08fd41d720f3b53c35ff49fff9fc0343ee2 analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 201 / 342 - 合约地址：0x596cdf5d33486b035e8482688c638e7dcaf25a7b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x596cdf5d33486b035e8482688c638e7dcaf25a7b-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (node_modules/@pythnetwork/pyth-sdk-solidity/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x596cdf5d33486b035e8482688c638e7dcaf25a7b analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 202 / 342 - 合约地址：0x60e646f8b75041d331b71bdc4896f4d5705f8f1a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x60e646f8b75041d331b71bdc4896f4d5705f8f1a-SpectrasBOLDPriceFeed' running
INFO:Detectors:
OCCV3: pythPriceFeedContract = IPyth(0x4305FB66699C3B2702D4d05CF36551390A4c69C6) (src/strategies/positions/implementation/PriceFeed/SpectraBOLD/BOLDPriceFeed.sol#24) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x60e646f8b75041d331b71bdc4896f4d5705f8f1a analyzed (33 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 203 / 342 - 合约地址：0x7ad6d5c9435aa7781a817913b3afec2645ef78be ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7ad6d5c9435aa7781a817913b3afec2645ef78be-PythAggregatorV3' running
Warning: Warning: Return value of low-level calls not used.
  --> src/PythAggregatorV3.sol:34:9:
   |
34 |         payable(msg.sender).call{value: address(this).balance}("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV10: price of oracle response in PythAggregatorV3.decimals().price (src/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.decimals().price (src/PythAggregatorV3.sol#38) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestAnswer().price (src/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestAnswer().price (src/PythAggregatorV3.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestTimestamp().price (src/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestTimestamp().price (src/PythAggregatorV3.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.getRoundData(uint80).price (src/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.getRoundData(uint80).price (src/PythAggregatorV3.sol#86) not checked. Please check before use it.
OCCV10: price of oracle response in PythAggregatorV3.latestRoundData().price (src/PythAggregatorV3.sol#107) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregatorV3.latestRoundData().price (src/PythAggregatorV3.sol#107) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythAggregatorV3.updateFeeds(bytes[]) (src/PythAggregatorV3.sol#26-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.updateFeeds(bytes[]) (src/PythAggregatorV3.sol#26-35)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.decimals() (src/PythAggregatorV3.sol#37-40) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.decimals() (src/PythAggregatorV3.sol#37-40)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestAnswer() (src/PythAggregatorV3.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestAnswer() (src/PythAggregatorV3.sol#50-53)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestTimestamp() (src/PythAggregatorV3.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestTimestamp() (src/PythAggregatorV3.sol#55-58)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.getRoundData(uint80) (src/PythAggregatorV3.sol#73-94) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.getRoundData(uint80) (src/PythAggregatorV3.sol#73-94)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregatorV3.latestRoundData() (src/PythAggregatorV3.sol#96-116) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregatorV3.latestRoundData() (src/PythAggregatorV3.sol#96-116)  sends oracle request but PythAggregatorV3 (src/PythAggregatorV3.sol#16-117) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7ad6d5c9435aa7781a817913b3afec2645ef78be analyzed (4 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 204 / 342 - 合约地址：0xd1b575ed715e4630340bfdc4fb8a37df3383c84a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd1b575ed715e4630340bfdc4fb8a37df3383c84a-Getters' running
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#52) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd1b575ed715e4630340bfdc4fb8a37df3383c84a analyzed (24 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 205 / 342 - 合约地址：0x1f37f93c6aa7d987ae04786145d3066eab8eeb43 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1f37f93c6aa7d987ae04786145d3066eab8eeb43-SettersGovernor' running
ERROR:ContractSolcParsing:Impossible to generate IR for LibSetters.adjustStablecoins (contracts/transmuter/libraries/LibSetters.sol#93-106):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#51) Each call should handle only one request at a time.
OCCV9: multiple requests sent in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x1f37f93c6aa7d987ae04786145d3066eab8eeb43 analyzed (29 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 206 / 342 - 合约地址：0xdda8f002925a0dfb151c0eacb48d7136ce6a999f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdda8f002925a0dfb151c0eacb48d7136ce6a999f-SettersGuardian' running
ERROR:ContractSolcParsing:Impossible to generate IR for LibSetters.adjustStablecoins (contracts/transmuter/libraries/LibSetters.sol#93-106):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#51) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xdda8f002925a0dfb151c0eacb48d7136ce6a999f analyzed (26 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 207 / 342 - 合约地址：0x06c33a0c80c3970cbedde641c7a6419d703d93d7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x06c33a0c80c3970cbedde641c7a6419d703d93d7-Swapper' running
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#51) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x06c33a0c80c3970cbedde641c7a6419d703d93d7 analyzed (29 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 208 / 342 - 合约地址：0xe8c2c34599eaf8006e466398b378067db7d3c479 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe8c2c34599eaf8006e466398b378067db7d3c479-Production' running
ERROR:ContractSolcParsing:Impossible to generate IR for LibSetters.adjustStablecoins (contracts/transmuter/libraries/LibSetters.sol#93-106):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#51) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: circuitChainlink[0] = AggregatorV3Interface(0x6E27A25999B3C665E44D903B2139F5a4Be2B6C26) (contracts/transmuter/configs/Production.sol#132) Instantiates a contract but is not protected. Please add access control.
OCCV3: circuitChainlink[0] = AggregatorV3Interface(0x83Ec02059F686E747392A22ddfED7833bA0d7cE3) (contracts/transmuter/configs/Production.sol#146) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xe8c2c34599eaf8006e466398b378067db7d3c479 analyzed (25 contracts with 3 detectors), 28 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 209 / 342 - 合约地址：0x1e45b65cdd3712fef0024d063d6574a609985e59 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1e45b65cdd3712fef0024d063d6574a609985e59-Redeemer' running
INFO:Detectors:
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: multiple requests sent in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#52) Each call should handle only one request at a time.
OCCV9: multiple requests sent in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x1e45b65cdd3712fef0024d063d6574a609985e59 analyzed (29 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 210 / 342 - 合约地址：0x62314831a3588bdb244c855feb6ea94ebaa89441 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x62314831a3588bdb244c855feb6ea94ebaa89441-LibertiV2Vault' running
INFO:Detectors:
OCCV8: deprecated function invoked in dstPrice = PYTH.getPrice(tokenToPriceId[_desc.dstToken]) (contracts/LibertiV2Vault.sol#633) Do not use this function.
OCCV8: deprecated function invoked in srcPrice = PYTH.getPrice(tokenToPriceId[_desc.srcToken]) (contracts/LibertiV2Vault.sol#632) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV3: withdraw(amountIn,_msgSender(),_msgSender()) (contracts/LibertiV2Vault.sol#238) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: LibertiV2Vault.exit() (contracts/LibertiV2Vault.sol#236-239) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: LibertiV2Vault.rebalance(bytes[],bytes[]) (contracts/LibertiV2Vault.sol#298-339) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x62314831a3588bdb244c855feb6ea94ebaa89441 analyzed (28 contracts with 3 detectors), 5 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 211 / 342 - 合约地址：0x03494caa6669a090525fd61a7da6cb3a2d5e64a6 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x03494caa6669a090525fd61a7da6cb3a2d5e64a6-PythAdapter' running
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 722, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 211, in __init__
    self._compile(**kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 633, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 477, in compile
    solc_standard_json.standalone_compile(
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/solc_standard_json.py", line 90, in standalone_compile
    targets_json = run_solc_standard_json(
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/solc_standard_json.py", line 207, in run_solc_standard_json
    raise InvalidCompilation(solc_exception_str)
crytic_compile.platform.exceptions.InvalidCompilation: YulException: YulException: Variable var__3680 is 7 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.




[Return code]: 1

================================================================================

--- 分析结果 212 / 342 - 合约地址：0x271aca3e9b8ed9f4f618875093bd75a7e1b3116c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x271aca3e9b8ed9f4f618875093bd75a7e1b3116c-PythAdapter' running
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 96, in process_all
    compilations = compile_all(target, **vars(args))
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 722, in compile_all
    compilations.append(CryticCompile(target, **kwargs))
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 211, in __init__
    self._compile(**kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/crytic_compile.py", line 633, in _compile
    self._platform.compile(self, **kwargs)
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/etherscan.py", line 477, in compile
    solc_standard_json.standalone_compile(
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/solc_standard_json.py", line 90, in standalone_compile
    targets_json = run_solc_standard_json(
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/crytic_compile/platform/solc_standard_json.py", line 207, in run_solc_standard_json
    raise InvalidCompilation(solc_exception_str)
crytic_compile.platform.exceptions.InvalidCompilation: YulException: YulException: Variable var__3680 is 7 slot(s) too deep inside the stack. Stack too deep. Try compiling with `--via-ir` (cli) or the equivalent `viaIR: true` (standard JSON) while enabling the optimizer. Otherwise, try removing local variables.




[Return code]: 1

================================================================================

--- 分析结果 213 / 342 - 合约地址：0xadeb62cf762901adb44fec757abae1cfb804c36f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xadeb62cf762901adb44fec757abae1cfb804c36f-DCSBulkActionsEntry' running
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter.getPrice (contracts/oracle-entry/adapters/PythAdapter.sol#64-76):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter._priceToUint (contracts/oracle-entry/adapters/PythAdapter.sol#117-135):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV8: deprecated function invoked in _getAdapter(dataSource).getPrice(baseAsset,quoteAsset,timestamp) (contracts/oracle-entry/OracleEntry.sol#44-45) Do not use this function.
OCCV8: deprecated function invoked in iOracleEntry.getPrice(dcsProduct.baseAssetAddress,dcsProduct.quoteAssetAddress,priceTimestamp,vault.dataSource) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#184-190) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV3: treasury.withdraw(settlementAsset,wrappingProxy,assetAmount,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#496-501) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: treasury.withdraw(settlementAsset,withdrawer.account,assetAmount,false) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#507-512) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: treasury.withdraw(settlementAsset,addressManager.getCegaFeeReceiver(),totalFees,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#882-887) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115)  sends oracle request but PythAdapter (contracts/oracle-entry/adapters/PythAdapter.sol#13-136) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75)  sends oracle request but RedepositManager (contracts/redeposits/RedepositManager.sol#14-76) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xadeb62cf762901adb44fec757abae1cfb804c36f analyzed (78 contracts with 3 detectors), 15 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 214 / 342 - 合约地址：0x10bcb2aa8b99eec56bc7099c0b54f70f31316b2a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x10bcb2aa8b99eec56bc7099c0b54f70f31316b2a-DCSProductEntry' running
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter.getPrice (contracts/oracle-entry/adapters/PythAdapter.sol#64-76):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter._priceToUint (contracts/oracle-entry/adapters/PythAdapter.sol#117-135):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV8: deprecated function invoked in _getAdapter(dataSource).getPrice(baseAsset,quoteAsset,timestamp) (contracts/oracle-entry/OracleEntry.sol#44-45) Do not use this function.
OCCV8: deprecated function invoked in iOracleEntry.getPrice(dcsProduct.baseAssetAddress,dcsProduct.quoteAssetAddress,priceTimestamp,vault.dataSource) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#184-190) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV3: treasury.withdraw(settlementAsset,wrappingProxy,assetAmount,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#496-501) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: treasury.withdraw(settlementAsset,withdrawer.account,assetAmount,false) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#507-512) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: treasury.withdraw(settlementAsset,addressManager.getCegaFeeReceiver(),totalFees,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#882-887) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115)  sends oracle request but PythAdapter (contracts/oracle-entry/adapters/PythAdapter.sol#13-136) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75)  sends oracle request but RedepositManager (contracts/redeposits/RedepositManager.sol#14-76) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x10bcb2aa8b99eec56bc7099c0b54f70f31316b2a analyzed (78 contracts with 3 detectors), 15 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 215 / 342 - 合约地址：0x1ef1090f35431e3e1e92c51ec248ae88cd985b3c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1ef1090f35431e3e1e92c51ec248ae88cd985b3c-TradeWinnerNFT' running
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter.getPrice (contracts/oracle-entry/adapters/PythAdapter.sol#64-76):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for PythAdapter._priceToUint (contracts/oracle-entry/adapters/PythAdapter.sol#117-135):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV8: deprecated function invoked in _getAdapter(dataSource).getPrice(baseAsset,quoteAsset,timestamp) (contracts/oracle-entry/OracleEntry.sol#44-45) Do not use this function.
OCCV8: deprecated function invoked in iOracleEntry.getPrice(dcsProduct.baseAssetAddress,dcsProduct.quoteAssetAddress,priceTimestamp,vault.dataSource) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#184-190) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV3: treasury.withdraw(settlementAsset,wrappingProxy,assetAmount,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#496-501) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: treasury.withdraw(settlementAsset,withdrawer.account,assetAmount,false) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#507-512) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.processWithdrawal(WithdrawalQueue,ITreasury,IAddressManager,address,uint256,address,uint128,uint256,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#469-533)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.settleVault(CegaGlobalStorage,address,ITreasury,IAddressManager) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#754-848)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: treasury.withdraw(settlementAsset,addressManager.getCegaFeeReceiver(),totalFees,true) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#882-887) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DCSLogic.collectVaultFees(CegaGlobalStorage,ITreasury,IAddressManager,address) (contracts/cega-strategies/dcs/lib/DCSLogic.sol#850-902)  sends oracle request but DCSLogic (contracts/cega-strategies/dcs/lib/DCSLogic.sol#44-903) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAdapter.updateAssetPrices(uint40,address[],bytes[]) (contracts/oracle-entry/adapters/PythAdapter.sol#88-115)  sends oracle request but PythAdapter (contracts/oracle-entry/adapters/PythAdapter.sol#13-136) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedepositManager.redeposit(ITreasury,uint32,address,uint128,address) (contracts/redeposits/RedepositManager.sol#40-75)  sends oracle request but RedepositManager (contracts/redeposits/RedepositManager.sol#14-76) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x1ef1090f35431e3e1e92c51ec248ae88cd985b3c analyzed (78 contracts with 3 detectors), 15 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 216 / 342 - 合约地址：0x9c70c6c8efd84084f9e6ded91790318b8edff4b4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9c70c6c8efd84084f9e6ded91790318b8edff4b4-ProductionUSD' running
ERROR:ContractSolcParsing:Impossible to generate IR for LibSetters.adjustStablecoins (contracts/transmuter/libraries/LibSetters.sol#93-106):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#52) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: multiple requests sent in read(oracleType,read(targetType,BASE_18,targetData),oracleData) (contracts/transmuter/libraries/LibOracle.sol#34) Each call should handle only one request at a time.
OCCV9: oracle request in loop in _targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#71) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,_targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#72) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#181) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#182) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#184) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#185) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#201) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#202) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#203) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#204) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: circuitChainlink[0] = AggregatorV3Interface(0x8fFfFfd4AfB6115b954Bd326cbe7B4BA576818f6) (contracts/transmuter/configs/ProductionUSD.sol#63) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readRedemption(bytes) (contracts/transmuter/libraries/LibOracle.sol#24-35)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readMint(bytes) (contracts/transmuter/libraries/LibOracle.sol#40-54)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readBurn(bytes) (contracts/transmuter/libraries/LibOracle.sol#60-75)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#174-186)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#189-205)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#17-213) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#196) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x9c70c6c8efd84084f9e6ded91790318b8edff4b4 analyzed (25 contracts with 3 detectors), 27 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 217 / 342 - 合约地址：0x99fe8557a8f322525262720c52b7d57c56924012 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x99fe8557a8f322525262720c52b7d57c56924012-Getters' running
INFO:Detectors:
OCCV9: multiple requests sent in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#234) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#235) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#251) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#252) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#253) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#254) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in targetPrice * (BASE_18 - deviation) < oracleValue * BASE_18 && oracleValue * BASE_18 < targetPrice * (BASE_18 + deviation) (contracts/transmuter/libraries/LibOracle.sol#147-148) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#232) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x99fe8557a8f322525262720c52b7d57c56924012 analyzed (25 contracts with 3 detectors), 23 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 218 / 342 - 合约地址：0xa09735efbcff6e76e6efff82a9ad996a85cd0725 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa09735efbcff6e76e6efff82a9ad996a85cd0725-Redeemer' running
INFO:Detectors:
OCCV9: multiple requests sent in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#232) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#234) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#235) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#251) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#252) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#253) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#254) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in targetPrice * (BASE_18 - deviation) < oracleValue * BASE_18 && oracleValue * BASE_18 < targetPrice * (BASE_18 + deviation) (contracts/transmuter/libraries/LibOracle.sol#147-148) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xa09735efbcff6e76e6efff82a9ad996a85cd0725 analyzed (30 contracts with 3 detectors), 23 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 219 / 342 - 合约地址：0x49c7b39a2e01869d39548f232f9b1586da8ef9c2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x49c7b39a2e01869d39548f232f9b1586da8ef9c2-SettersGovernor' running
ERROR:ContractSolcParsing:Impossible to generate IR for LibSetters.adjustStablecoins (contracts/transmuter/libraries/LibSetters.sol#93-106):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#232) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#234) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#235) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#251) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#252) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#253) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#254) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in targetPrice * (BASE_18 - deviation) < oracleValue * BASE_18 && oracleValue * BASE_18 < targetPrice * (BASE_18 + deviation) (contracts/transmuter/libraries/LibOracle.sol#147-148) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x49c7b39a2e01869d39548f232f9b1586da8ef9c2 analyzed (30 contracts with 3 detectors), 23 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 220 / 342 - 合约地址：0xd838bf7fb3b420ac93a7d9f5b40230f78b33536f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd838bf7fb3b420ac93a7d9f5b40230f78b33536f-Swapper' running
INFO:Detectors:
OCCV9: multiple requests sent in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in targetPrice = read(targetType,BASE_18,targetData) (contracts/transmuter/libraries/LibOracle.sol#141) Each call should handle only one request at a time.
OCCV9: oracle request in loop in oracleValue = read(oracleType,targetPrice,oracleData) (contracts/transmuter/libraries/LibOracle.sol#142) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) Each call should handle only one request at a time.
OCCV9: oracle request in loop in pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,ratio,None,updatedAt,None) = feed.latestRoundData() (contracts/transmuter/libraries/LibOracle.sol#231) not vaildated. Please check before use it.
OCCV12: response in ratio <= 0 || block.timestamp - updatedAt > stalePeriod (contracts/transmuter/libraries/LibOracle.sol#232) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * uint256(ratio)) / (10 ** decimals) (contracts/transmuter/libraries/LibOracle.sol#234) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * (10 ** decimals)) / uint256(ratio) (contracts/transmuter/libraries/LibOracle.sol#235) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizedPrice) / normalizer (contracts/transmuter/libraries/LibOracle.sol#251) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount * normalizedPrice * normalizer (contracts/transmuter/libraries/LibOracle.sol#252) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (_quoteAmount * normalizer) / normalizedPrice (contracts/transmuter/libraries/LibOracle.sol#253) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _quoteAmount / (normalizer * normalizedPrice) (contracts/transmuter/libraries/LibOracle.sol#254) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in targetPrice * (BASE_18 - deviation) < oracleValue * BASE_18 && oracleValue * BASE_18 < targetPrice * (BASE_18 + deviation) (contracts/transmuter/libraries/LibOracle.sol#147-148) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readSpotAndTarget(OracleReadType,OracleReadType,bytes,bytes,uint256) (contracts/transmuter/libraries/LibOracle.sol#134-150)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readChainlinkFeed(uint256,AggregatorV3Interface,uint8,uint256,uint32) (contracts/transmuter/libraries/LibOracle.sol#224-236)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.readPythFeed(uint256,bytes32,address,uint8,uint32) (contracts/transmuter/libraries/LibOracle.sol#239-255)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pythData = IPyth(pyth).getPriceNoOlderThan(feedId,stalePeriod) (contracts/transmuter/libraries/LibOracle.sol#246) Instantiates a contract but is not protected. Please add access control.
OCCV4: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: LibOracle.updateOracle(address) (contracts/transmuter/libraries/LibOracle.sol#264-290)  sends oracle request but LibOracle (contracts/transmuter/libraries/LibOracle.sol#18-291) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd838bf7fb3b420ac93a7d9f5b40230f78b33536f analyzed (30 contracts with 3 detectors), 23 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 221 / 342 - 合约地址：0x2f1e5d64a7dc7af130f116dcfca70b1569edc6e4 ---
Installing solc '0.8.21'...
Version '0.8.21' installed.
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2f1e5d64a7dc7af130f116dcfca70b1569edc6e4-TokenStore' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/TokenStore.sol:431:5:
    |
431 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV8: deprecated function invoked in priceInfo = _pyth.getPrice(_pythNativePriceFeedId) (contracts/TokenStore.sol#830) Do not use this function.
OCCV8: deprecated function invoked in priceInfo = _pyth.getPrice(_pythNativePriceFeedId) (contracts/TokenStore.sol#592) Do not use this function.
OCCV8: deprecated function invoked in priceInfo = _pyth.getPrice(_tokenConfig[asset_].pythId) (contracts/TokenStore.sol#706) Do not use this function.
OCCV8: deprecated function invoked in priceInfo = _pyth.getPrice(_pythNativePriceFeedId) (contracts/TokenStore.sol#756) Do not use this function.
Reference: ...
INFO:Slither:0x2f1e5d64a7dc7af130f116dcfca70b1569edc6e4 analyzed (18 contracts with 3 detectors), 4 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 222 / 342 - 合约地址：0x8deb19172be86bba00630042ae41202ec0c4ddeb ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8deb19172be86bba00630042ae41202ec0c4ddeb-TokenStore' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/TokenStore.sol:444:5:
    |
444 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_pythNativePriceFeedId) (contracts/TokenStore.sol#847) Each call should handle only one request at a time.
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_tokenConfig[asset_].pythId) (contracts/TokenStore.sol#720) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool).priceInfo (contracts/TokenStore.sol#605) not checked. Please check before use it.
OCCV12: response in _maxDepositAmount - amount (contracts/TokenStore.sol#152) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/TokenStore.sol#386) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/TokenStore.sol#386) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#606) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#606) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/TokenStore.sol#612) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/TokenStore.sol#612) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSoldTokens(address,uint256,ITokenStore.Option).priceInfo (contracts/TokenStore.sol#720) not checked. Please check before use it.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/TokenStore.sol#387) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/TokenStore.sol#387) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestone[_currentMilestone].sold = _milestone[_currentMilestone].sold + sold_ (contracts/TokenStore.sol#388) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/TokenStore.sol#389) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/TokenStore.sol#389) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/TokenStore.sol#396) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/TokenStore.sol#396) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/TokenStore.sol#397) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/TokenStore.sol#397) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(receiver_,treasury,amount_ - reward_) (contracts/TokenStore.sol#659) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#721) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#721) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/TokenStore.sol#726) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/TokenStore.sol#726) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._deposit(ITokenStore.Option,address,address,bool).priceInfo (contracts/TokenStore.sol#772) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#773) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/TokenStore.sol#777) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in investment = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/TokenStore.sol#798) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSold(uint256,ITokenStore.Option).priceInfo (contracts/TokenStore.sol#847) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#848) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/TokenStore.sol#852) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/TokenStore.sol#852) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/TokenStore.sol#821) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: TokenStore._tokenConfig (contracts/TokenStore.sol#54) is used in oracle request but is modified in TokenStore.toggleAllowedTokens(address[],bytes32[],uint256[],bool[]) (contracts/TokenStore.sol#215-227) without protection. Please add access control.
OCCV3: TokenStore._tokenConfig (contracts/TokenStore.sol#54) is used in oracle request but is modified in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#579-655) without protection. Please add access control.
OCCV5: TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#579-655)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/TokenStore.sol#715-727) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/TokenStore.sol#715-727)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV5: TokenStore._deposit(ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#748-817)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/TokenStore.sol#843-853) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/TokenStore.sol#843-853)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x8deb19172be86bba00630042ae41202ec0c4ddeb analyzed (18 contracts with 3 detectors), 42 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 223 / 342 - 合约地址：0xd3f9f32a382c6dae14ab27e76191dbcb5d1e586e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd3f9f32a382c6dae14ab27e76191dbcb5d1e586e-TokenSale' running
INFO:Detectors:
OCCV9: multiple requests sent in priceInfo = _oracle.getPriceUnsafe(_tokens[token_].pythId) (contracts/sales/TokenSale.sol#265) Each call should handle only one request at a time.
OCCV8: deprecated function invoked in (amount_ * price * (UNITS ** 2)) / _storage.getPrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/sales/TokenSale.sol#285-288) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenSale._buy(address,uint256,IStorage.Option,address,address,bool).priceInfo (contracts/sales/TokenSale.sol#188) not checked. Please check before use it.
OCCV12: response in priceInfo.publishTime <= block.timestamp - _tokens[token_].threshold (contracts/sales/TokenSale.sol#277) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime <= block.timestamp - _tokens[token_].threshold (contracts/sales/TokenSale.sol#277) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (UNITS ** 2)) / _storage.getPrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/sales/TokenSale.sol#285-288) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (UNITS ** 2)) / _storage.getPrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/sales/TokenSale.sol#285-288) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in round.supply < round.sold + _getSold(token_,amount_,option_,priceInfo) (contracts/sales/TokenSale.sol#193) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _tokens[token_].threshold (contracts/sales/TokenSale.sol#197) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _tokens[token_].threshold (contracts/sales/TokenSale.sol#197) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * UNITS) / (10 ** (priceDecimals + tokenDecimals)) (contracts/sales/TokenSale.sol#205) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * UNITS) / (10 ** (priceDecimals + tokenDecimals)) (contracts/sales/TokenSale.sol#205) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(token_).safeTransferFrom(user_,treasury,amount_ - reward_) (contracts/sales/TokenSale.sol#244) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenSale._getRef(address,address,address,IStorage.Option,uint256).priceInfo (contracts/sales/TokenSale.sol#265) not checked. Please check before use it.
OCCV10: publishTime of oracle response in TokenSale._getRef(address,address,address,IStorage.Option,uint256).priceInfo (contracts/sales/TokenSale.sol#265) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: TokenSale._tokens (contracts/sales/TokenSale.sol#29) is used in oracle request but is modified in TokenSale.addToken(address,bytes32,uint256) (contracts/sales/TokenSale.sol#84-99) without protection. Please add access control.
OCCV3: TokenSale._tokens (contracts/sales/TokenSale.sol#29) is used in oracle request but is modified in TokenSale.removeToken(address) (contracts/sales/TokenSale.sol#101-103) without protection. Please add access control.
OCCV3: TokenSale._tokens (contracts/sales/TokenSale.sol#29) is used in oracle request but is modified in TokenSale.setThreshold(address,uint256) (contracts/sales/TokenSale.sol#105-114) without protection. Please add access control.
OCCV3: TokenSale._tokens (contracts/sales/TokenSale.sol#29) is used in oracle request but is modified in TokenSale._buy(address,uint256,IStorage.Option,address,address,bool) (contracts/sales/TokenSale.sol#163-240) without protection. Please add access control.
OCCV5: TokenSale._buy(address,uint256,IStorage.Option,address,address,bool) (contracts/sales/TokenSale.sol#163-240)  sends oracle request but TokenSale (contracts/sales/TokenSale.sol#14-290) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenSale._getRef(address,address,address,IStorage.Option,uint256) (contracts/sales/TokenSale.sol#250-269) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenSale._getRef(address,address,address,IStorage.Option,uint256) (contracts/sales/TokenSale.sol#250-269)  sends oracle request but TokenSale (contracts/sales/TokenSale.sol#14-290) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd3f9f32a382c6dae14ab27e76191dbcb5d1e586e analyzed (17 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 224 / 342 - 合约地址：0x4ef073d156ba84cb20e824113b2612fdc3f004d4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4ef073d156ba84cb20e824113b2612fdc3f004d4-CoinPaymentsHandler' running
INFO:Detectors:
OCCV8: deprecated function invoked in (amount_ * price * (NUMERATOR ** 2)) / _dataSalePoint.getPrice(type_) / (10 ** (priceDecimals + decimals)) (contracts/handlers/CoinPaymentsHandler.sol#286-289) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV12: response in priceInfo.publishTime <= block.timestamp - _coins[coin_].priceThreshold (contracts/handlers/CoinPaymentsHandler.sol#278) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime <= block.timestamp - _coins[coin_].priceThreshold (contracts/handlers/CoinPaymentsHandler.sol#278) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (NUMERATOR ** 2)) / _dataSalePoint.getPrice(type_) / (10 ** (priceDecimals + decimals)) (contracts/handlers/CoinPaymentsHandler.sol#286-289) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * (NUMERATOR ** 2)) / _dataSalePoint.getPrice(type_) / (10 ** (priceDecimals + decimals)) (contracts/handlers/CoinPaymentsHandler.sol#286-289) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in turn.supply < turn.sold + _getLiquidity(coin_,amount_,type_,priceInfo) (contracts/handlers/CoinPaymentsHandler.sol#193) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _coins[coin_].priceThreshold (contracts/handlers/CoinPaymentsHandler.sol#197) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _coins[coin_].priceThreshold (contracts/handlers/CoinPaymentsHandler.sol#197) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/handlers/CoinPaymentsHandler.sol#205) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + coinDecimals)) (contracts/handlers/CoinPaymentsHandler.sol#205) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(coin_).safeTransferFrom(user_,treasury,amount_ - reward_) (contracts/handlers/CoinPaymentsHandler.sol#245) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: CoinPaymentsHandler._coins (contracts/handlers/CoinPaymentsHandler.sol#29) is used in oracle request but is modified in CoinPaymentsHandler.addCoin(address,bytes32,uint256) (contracts/handlers/CoinPaymentsHandler.sol#84-99) without protection. Please add access control.
OCCV3: CoinPaymentsHandler._coins (contracts/handlers/CoinPaymentsHandler.sol#29) is used in oracle request but is modified in CoinPaymentsHandler.removeCoin(address) (contracts/handlers/CoinPaymentsHandler.sol#101-103) without protection. Please add access control.
OCCV3: CoinPaymentsHandler._coins (contracts/handlers/CoinPaymentsHandler.sol#29) is used in oracle request but is modified in CoinPaymentsHandler.setThreshold(address,uint256) (contracts/handlers/CoinPaymentsHandler.sol#105-114) without protection. Please add access control.
OCCV3: CoinPaymentsHandler._coins (contracts/handlers/CoinPaymentsHandler.sol#29) is used in oracle request but is modified in CoinPaymentsHandler._pay(address,uint256,IDataSalePoint.Type,address,address,bool) (contracts/handlers/CoinPaymentsHandler.sol#163-241) without protection. Please add access control.
OCCV5: CoinPaymentsHandler._pay(address,uint256,IDataSalePoint.Type,address,address,bool) (contracts/handlers/CoinPaymentsHandler.sol#163-241)  sends oracle request but CoinPaymentsHandler (contracts/handlers/CoinPaymentsHandler.sol#14-291) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x4ef073d156ba84cb20e824113b2612fdc3f004d4 analyzed (17 contracts with 3 detectors), 16 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 225 / 342 - 合约地址：0xd938e0b29bfc78a10ff29fb0591d1d3424da0507 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd938e0b29bfc78a10ff29fb0591d1d3424da0507-TokenStore' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/TokenStore.sol:444:5:
    |
444 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_pythNativePriceFeedId) (contracts/TokenStore.sol#847) Each call should handle only one request at a time.
OCCV9: multiple requests sent in priceInfo = _pyth.getPriceUnsafe(_tokenConfig[asset_].pythId) (contracts/TokenStore.sol#720) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool).priceInfo (contracts/TokenStore.sol#605) not checked. Please check before use it.
OCCV12: response in _maxDepositAmount - amount (contracts/TokenStore.sol#152) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/TokenStore.sol#386) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/TokenStore.sol#386) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#606) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#606) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/TokenStore.sol#612) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/TokenStore.sol#612) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSoldTokens(address,uint256,ITokenStore.Option).priceInfo (contracts/TokenStore.sol#720) not checked. Please check before use it.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/TokenStore.sol#387) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/TokenStore.sol#387) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestone[_currentMilestone].sold = _milestone[_currentMilestone].sold + sold_ (contracts/TokenStore.sol#388) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/TokenStore.sol#389) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _milestoneBalances[user_][_currentMilestone] = _milestoneBalances[user_][_currentMilestone] + sold_ (contracts/TokenStore.sol#389) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/TokenStore.sol#396) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][asset_] += fReward_ (contracts/TokenStore.sol#396) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/TokenStore.sol#397) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _repBalances[rep_][tokenAddress] += sReward_ (contracts/TokenStore.sol#397) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(receiver_,treasury,amount_ - reward_) (contracts/TokenStore.sol#659) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#721) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _tokenConfig[asset_].threshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#721) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/TokenStore.sol#726) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/TokenStore.sol#726) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/TokenStore.sol#821) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._deposit(ITokenStore.Option,address,address,bool).priceInfo (contracts/TokenStore.sol#772) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#773) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/TokenStore.sol#777) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in investment = (amount * price * MULTIPLIER) / (10 ** (precision + decimals)) (contracts/TokenStore.sol#798) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in TokenStore._getSold(uint256,ITokenStore.Option).priceInfo (contracts/TokenStore.sol#847) not checked. Please check before use it.
OCCV12: response in require(bool,string)(priceInfo.publishTime > block.timestamp - _pythNativeThreshold,TokenStore: Pyth Oracle price outdated) (contracts/TokenStore.sol#848) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/TokenStore.sol#852) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentMilestonePrice(option_) / (10 ** decimals) (contracts/TokenStore.sol#852) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: TokenStore._tokenConfig (contracts/TokenStore.sol#54) is used in oracle request but is modified in TokenStore.toggleAllowedTokens(address[],bytes32[],uint256[],bool[]) (contracts/TokenStore.sol#215-227) without protection. Please add access control.
OCCV3: TokenStore._tokenConfig (contracts/TokenStore.sol#54) is used in oracle request but is modified in TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#579-655) without protection. Please add access control.
OCCV5: TokenStore._depositToken(address,uint256,ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#579-655)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/TokenStore.sol#715-727) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSoldTokens(address,uint256,ITokenStore.Option) (contracts/TokenStore.sol#715-727)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV5: TokenStore._deposit(ITokenStore.Option,address,address,bool) (contracts/TokenStore.sol#748-817)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/TokenStore.sol#843-853) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: TokenStore._getSold(uint256,ITokenStore.Option) (contracts/TokenStore.sol#843-853)  sends oracle request but TokenStore (contracts/TokenStore.sol#14-854) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd938e0b29bfc78a10ff29fb0591d1d3424da0507 analyzed (18 contracts with 3 detectors), 42 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 226 / 342 - 合约地址：0xf51e45e42ac6e162e01f888a381bba8c353c7fd9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf51e45e42ac6e162e01f888a381bba8c353c7fd9-PythOracle' running
INFO:Detectors:
OCCV8: deprecated function invoked in pythPrice = pyth.getPrice(priceId) (contracts/oracles/PythOracle.sol#17) Do not use this function.
Reference: ...
INFO:Slither:0xf51e45e42ac6e162e01f888a381bba8c353c7fd9 analyzed (4 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 227 / 342 - 合约地址：0x97ba0d1a38c588e9da5f3088a0202e6a84053f82 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x97ba0d1a38c588e9da5f3088a0202e6a84053f82-SaleContract' running
Warning: Warning: Return value of low-level calls not used.
   --> contracts/SaleContract.sol:512:5:
    |
512 |     _msgSender().call{value: balance}("");
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in priceInfo = _priceFeedOracle.getPriceUnsafe(_customToken[asset_].pythId) (contracts/SaleContract.sol#818) Each call should handle only one request at a time.
OCCV9: multiple requests sent in priceInfo = _priceFeedOracle.getPriceUnsafe(_priceFeedOracleNativeId) (contracts/SaleContract.sol#963) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in SaleContract._buyForCustomToken(address,uint256,ISaleContract.OperationType,address,address,bool).priceInfo (contracts/SaleContract.sol#699) not checked. Please check before use it.
OCCV12: response in maxBuy - amount (contracts/SaleContract.sol#142) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/SaleContract.sol#435) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _userTotalBalances[user_] = _userTotalBalances[user_] + amount_ (contracts/SaleContract.sol#435) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _customToken[asset_].threshold (contracts/SaleContract.sol#701) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _customToken[asset_].threshold (contracts/SaleContract.sol#701) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/SaleContract.sol#709) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * MULTIPLIER) / (10 ** (priceDecimals + tokenDecimals)) (contracts/SaleContract.sol#709) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in SaleContract._getSoldTokens(address,uint256,ISaleContract.OperationType).priceInfo (contracts/SaleContract.sol#818) not checked. Please check before use it.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/SaleContract.sol#436) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _totalSoldTokens = _totalSoldTokens + sold_ (contracts/SaleContract.sol#436) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _phase[currentPhase].sold = _phase[currentPhase].sold + sold_ (contracts/SaleContract.sol#437) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _phaseBalances[user_][currentPhase] = _phaseBalances[user_][currentPhase] + sold_ (contracts/SaleContract.sol#438) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _phaseBalances[user_][currentPhase] = _phaseBalances[user_][currentPhase] + sold_ (contracts/SaleContract.sol#438) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _promoterBalances[promoter_][asset_] += fReward_ (contracts/SaleContract.sol#445) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _promoterBalances[promoter_][asset_] += fReward_ (contracts/SaleContract.sol#445) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _promoterBalances[promoter_][0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa] += sReward_ (contracts/SaleContract.sol#446) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in _promoterBalances[promoter_][0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa] += sReward_ (contracts/SaleContract.sol#446) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(receiver_,treasury,amount_ - reward_) (contracts/SaleContract.sol#757) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(asset_).safeTransferFrom(receiver_,treasury,amount_ - reward_) (contracts/SaleContract.sol#757) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _customToken[asset_].threshold (contracts/SaleContract.sol#819) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceInfo.publishTime < block.timestamp - _customToken[asset_].threshold (contracts/SaleContract.sol#819) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentPhasePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/SaleContract.sol#826) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER * MULTIPLIER) / getCurrentPhasePrice(option_) / (10 ** (priceDecimals + decimals)) (contracts/SaleContract.sol#826) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/SaleContract.sol#935) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (success,None) = treasury.call{value: amount_ - reward_}() (contracts/SaleContract.sol#935) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in SaleContract._buyForNative(ISaleContract.OperationType,address,address,bool).priceInfo (contracts/SaleContract.sol#883) not checked. Please check before use it.
OCCV12: response in priceInfo.publishTime < block.timestamp - _priceFeedOracleNativeThreshold (contracts/SaleContract.sol#884) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount * price * MULTIPLIER) / (10 ** (DECIMAL + decimals)) (contracts/SaleContract.sol#890) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in investment = (amount * price * MULTIPLIER) / (10 ** (DECIMAL + decimals)) (contracts/SaleContract.sol#913) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in SaleContract._getSold(uint256,ISaleContract.OperationType).priceInfo (contracts/SaleContract.sol#963) not checked. Please check before use it.
OCCV12: response in priceInfo.publishTime < block.timestamp - _priceFeedOracleNativeThreshold (contracts/SaleContract.sol#964) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentPhasePrice(option_) / (10 ** decimals) (contracts/SaleContract.sol#970) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in (amount_ * price * MULTIPLIER) / getCurrentPhasePrice(option_) / (10 ** decimals) (contracts/SaleContract.sol#970) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: SaleContract._customToken (contracts/SaleContract.sol#57) is used in oracle request but is modified in SaleContract._buyForCustomToken(address,uint256,ISaleContract.OperationType,address,address,bool) (contracts/SaleContract.sol#661-754) without protection. Please add access control.
OCCV3: SaleContract._customToken (contracts/SaleContract.sol#57) is used in oracle request but is modified in SaleContract.changeCustomTokens(address[],bytes32[],uint256[],bool[]) (contracts/SaleContract.sol#213-227) without protection. Please add access control.
OCCV5: SaleContract._buyForCustomToken(address,uint256,ISaleContract.OperationType,address,address,bool) (contracts/SaleContract.sol#661-754)  sends oracle request but SaleContract (contracts/SaleContract.sol#15-972) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: SaleContract._getSoldTokens(address,uint256,ISaleContract.OperationType) (contracts/SaleContract.sol#813-827) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SaleContract._getSoldTokens(address,uint256,ISaleContract.OperationType) (contracts/SaleContract.sol#813-827)  sends oracle request but SaleContract (contracts/SaleContract.sol#15-972) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV5: SaleContract._buyForNative(ISaleContract.OperationType,address,address,bool) (contracts/SaleContract.sol#852-932)  sends oracle request but SaleContract (contracts/SaleContract.sol#15-972) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: SaleContract._getSold(uint256,ISaleContract.OperationType) (contracts/SaleContract.sol#959-971) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SaleContract._getSold(uint256,ISaleContract.OperationType) (contracts/SaleContract.sol#959-971)  sends oracle request but SaleContract (contracts/SaleContract.sol#15-972) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x97ba0d1a38c588e9da5f3088a0202e6a84053f82 analyzed (18 contracts with 3 detectors), 44 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 228 / 342 - 合约地址：0x2d315ed5c3f665d0612eee602987e95b35c2fc59 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2d315ed5c3f665d0612eee602987e95b35c2fc59-TokenReceiver' running
INFO:Detectors:
OCCV8: deprecated function invoked in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool).PFData (contracts/receivers/TokenReceiver.sol#157) not checked. Please check before use it.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#239) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#239) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/receivers/TokenReceiver.sol#244) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in amountInUSD = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + decimals)) (contracts/receivers/TokenReceiver.sol#244) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in tokenAmount = amountInUSD * NUMERATOR / _node.getPrice(variant_) (contracts/receivers/TokenReceiver.sol#245) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#164) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in require(bool,error)(block.timestamp - _tokens[token_].threshold <= PFData.publishTime,revert PriceThresholdError()()) (contracts/receivers/TokenReceiver.sol#164) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + tokenDecimals)) (contracts/receivers/TokenReceiver.sol#170) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in funds = (amount_ * price * NUMERATOR) / (10 ** (priceDecimals + tokenDecimals)) (contracts/receivers/TokenReceiver.sol#170) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in IERC20(token_).safeTransferFrom(payer_,treasury,amount_ - reward_) (contracts/receivers/TokenReceiver.sol#206) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool) (contracts/receivers/TokenReceiver.sol#143-202) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.addToken(address,bytes32,uint256) (contracts/receivers/TokenReceiver.sol#68-81) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.removeToken(address) (contracts/receivers/TokenReceiver.sol#83-85) without protection. Please add access control.
OCCV3: TokenReceiver._tokens (contracts/receivers/TokenReceiver.sol#28) is used in oracle request but is modified in TokenReceiver.setThreshold(address,uint256) (contracts/receivers/TokenReceiver.sol#87-94) without protection. Please add access control.
OCCV5: TokenReceiver._payTokens(address,uint256,INode.Variant,address,string,bool) (contracts/receivers/TokenReceiver.sol#143-202)  sends oracle request but TokenReceiver (contracts/receivers/TokenReceiver.sol#17-259) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2d315ed5c3f665d0612eee602987e95b35c2fc59 analyzed (22 contracts with 3 detectors), 18 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 229 / 342 - 合约地址：0xc0f7411c04922b4cb049a3e09ff2df89cb45d11b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc0f7411c04922b4cb049a3e09ff2df89cb45d11b-PoolConfigurationModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xc0f7411c04922b4cb049a3e09ff2df89cb45d11b analyzed (62 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 230 / 342 - 合约地址：0xeedecb154f90b9d68599ea631276489f0400d197 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xeedecb154f90b9d68599ea631276489f0400d197-ActivityRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xeedecb154f90b9d68599ea631276489f0400d197 analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 231 / 342 - 合约地址：0xfdf97b2890ee79a54e17c5630312bbf36efdbaeb ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfdf97b2890ee79a54e17c5630312bbf36efdbaeb-BestDexLens' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xfdf97b2890ee79a54e17c5630312bbf36efdbaeb analyzed (81 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 232 / 342 - 合约地址：0x702c3e4f94dd8c0db584e565dc665dd88b0fdcda ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x702c3e4f94dd8c0db584e565dc665dd88b0fdcda-Bucket' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: BucketStorage.borrowedAsset (contracts/Bucket/BucketStorage.sol#35) is used in oracle request but is modified in Bucket.initialize(IBucket.ConstructorParams,address) (contracts/Bucket/Bucket.sol#39-114) without protection. Please add access control.
OCCV3: IPool(aavePool).withdraw(address(borrowedAsset),amountToWithdraw,address(this)) (contracts/Bucket/Bucket.sol#338) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: Bucket.withdraw(address,uint256) (contracts/Bucket/Bucket.sol#313-356) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x702c3e4f94dd8c0db584e565dc665dd88b0fdcda analyzed (94 contracts with 3 detectors), 3 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 233 / 342 - 合约地址：0x16c5c3838504cc6e559af63a63eb14398b9da086 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x16c5c3838504cc6e559af63a63eb14398b9da086-DebtToken' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x16c5c3838504cc6e559af63a63eb14398b9da086 analyzed (82 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 234 / 342 - 合约地址：0xf3dad8dd8921b1f9ce981bdb4bb3851c94653077 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf3dad8dd8921b1f9ce981bdb4bb3851c94653077-DexAdapter' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:13:88:
   |
13 |     function doApprove(address token, address spender, uint256 amount) public returns (uint256) {
   |                                                                                        ^^^^^^^


Warning: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.
  --> contracts/libraries/TokenApproveLibrary.sol:20:90:
   |
20 |     function _doApprove(address token, address spender, uint256 amount) private returns (uint256) {
   |                                                                                          ^^^^^^^



INFO:Detectors:
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#693) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV2(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#676-696) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#719) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithUniswapV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#698-729) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#748) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithAlgebraV3(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#731-751) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#890) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV3: WNative.withdraw(WNative.balanceOf(address(this))) (contracts/DexAdapter.sol#910) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: DexAdapter._swapWithBalancer(IDexAdapter.SwapParams) (contracts/DexAdapter.sol#853-913) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xf3dad8dd8921b1f9ce981bdb4bb3851c94653077 analyzed (92 contracts with 3 detectors), 9 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 235 / 342 - 合约地址：0x002eccc61e55c9d7cb0d8f14f8ef53efbbbc703a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x002eccc61e55c9d7cb0d8f14f8ef53efbbbc703a-FlashLoanManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x002eccc61e55c9d7cb0d8f14f8ef53efbbbc703a analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 236 / 342 - 合约地址：0xea2278755e29b732a249e6465c71479e6d976784 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xea2278755e29b732a249e6465c71479e6d976784-KeeperRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xea2278755e29b732a249e6465c71479e6d976784 analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 237 / 342 - 合约地址：0xb1a4c7a1037e3b0b9709f180b78581731724e32d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb1a4c7a1037e3b0b9709f180b78581731724e32d-LimitOrderManager' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xb1a4c7a1037e3b0b9709f180b78581731724e32d analyzed (86 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 238 / 342 - 合约地址：0x42ec8c8295d8d3746ab045d6b3a5bce39a64708f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x42ec8c8295d8d3746ab045d6b3a5bce39a64708f-LimitPriceCOM' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x42ec8c8295d8d3746ab045d6b3a5bce39a64708f analyzed (79 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 239 / 342 - 合约地址：0xed02aecf3dd22e43b3213205398e476eb0a4990a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xed02aecf3dd22e43b3213205398e476eb0a4990a-LiquidityMiningRewardDistributor' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xed02aecf3dd22e43b3213205398e476eb0a4990a analyzed (85 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 240 / 342 - 合约地址：0x6bba3ff630cecb3e264cf0771f2558dc67321b34 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6bba3ff630cecb3e264cf0771f2558dc67321b34-PToken' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0x6bba3ff630cecb3e264cf0771f2558dc67321b34 analyzed (83 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 241 / 342 - 合约地址：0xbe668d393bb86a34a2c432e739f45cec3308cdf0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbe668d393bb86a34a2c432e739f45cec3308cdf0-PrimexDNS' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xbe668d393bb86a34a2c432e739f45cec3308cdf0 analyzed (84 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 242 / 342 - 合约地址：0xf1bcec1e0bf0502365cf5b311ad3324e46090640 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf1bcec1e0bf0502365cf5b311ad3324e46090640-PrimexLensPart2' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Slither:0xf1bcec1e0bf0502365cf5b311ad3324e46090640 analyzed (87 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 243 / 342 - 合约地址：0x68f702ff07f14b057018ab8f3e0f7df03dd91f94 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x68f702ff07f14b057018ab8f3e0f7df03dd91f94-ETHRSWETHPendlePTOracle' running
Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/SturdyLeverage.sol:79:7:
   |
79 |       uint256 collateralAmount = pair.userCollateralBalance(_params.user);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/SturdyLeverage.sol:62:5:
   |
62 |     uint256 collateralAmount = IERC20(_params.collateralAsset).balanceOf(address(this));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:27:7:
   |
27 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:39:5:
   |
39 |     uint256 outAmount = IYearnVault(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:35:7:
   |
35 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:43:5:
   |
43 |     uint256 outAmount;
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:26:7:
   |
26 |       uint256 outAmount = IERC4626(_path.swapFrom).redeem(_amount, address(this), address(this));
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:38:5:
   |
38 |     uint256 outAmount = IERC4626(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:212:25:
    |
212 |     function maxDeposit(address _receiver) public view returns (uint256 _maxAssets) {
    |                         ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:217:22:
    |
217 |     function maxMint(address _receiver) external view returns (uint256 _maxShares) {
    |                      ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:133:9:
    |
133 |         uint256 _deltaTime,
    |         ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:135:9:
    |
135 |         uint64 _oldFullUtilizationInterest
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/SturdyLeverage.sol:197:5:
    |
197 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan.sol:96:5:
   |
96 |     uint256 _slippage, 
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan1.sol:121:5:
    |
121 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDCRVOracle.sol:43:49:
   |
43 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol:52:49:
   |
52 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol:45:49:
   |
45 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ERC4626Oracle.sol:34:49:
   |
34 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHPendlePTOracle.sol:50:49:
   |
50 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSETHPendlePTOracle.sol:46:49:
   |
46 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSWETHPendlePTOracle.sol:48:49:
   |
48 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/PythBasedAssetOracle.sol:69:49:
   |
69 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/RedstoneBasedAssetOracle.sol:49:49:
   |
49 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHBalPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHUniV3BunniPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:53:30:
   |
53 |         (, int256 _answer, , uint256 _updatedAt, ) = AggregatorV3Interface(STETH_CHAINLINK)
   |                              ^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _creationCode = BytesLib.concat(SSTORE2.read(contractAddress1),SSTORE2.read(contractAddress2)) (contracts/src/SturdyPairDeployer.sol#224) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _multiplyDecimals = uint8(uint32(- IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID).expo)) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in price1 = IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#70) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV12: response in NORMALIZATION = 10 ** (18 + _multiplyDecimals - _divideDecimals + IERC20Metadata(_borrowAsset).decimals() - IERC20Metadata(_collateralAsset).decimals()) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#56-62) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = uint256(1e36) * uint256(uint64(price1.price)) / uint256(uint64(price2.price)) / NORMALIZATION (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#82) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV12: response in price2.price <= 0 || (block.timestamp - price2.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#78) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price1.price <= 0 || (block.timestamp - price1.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#72) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#48) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#56) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#64) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#75) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#84) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_3CRV_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#105) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_3CRV_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#107) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#68) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#77) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_MKUSD_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#92) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_MKUSD_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#94) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHPendlePTOracle.sol#54) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#66) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#49) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHOracle.sol#44) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#67) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#90) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/FruxFAssetOracle.sol#111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#102) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: oracle response PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice()._updatedAt (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53) not checked. Please check before use it.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_PXETH_STETH_POOL).get_virtual_price() * minPrice) / 1e18 (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#61) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/SFRAXOracle.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#88) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#97) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#118) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: SturdyPairDeployer.contractAddress1 (contracts/src/SturdyPairDeployer.sol#35) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV3: SturdyPairDeployer.contractAddress2 (contracts/src/SturdyPairDeployer.sol#36) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV4: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251)  sends oracle request but SturdyPairDeployer (contracts/src/SturdyPairDeployer.sol#30-314) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage.sol#27) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46)  sends oracle request but CrvYearnVaultLeverage (contracts/src/leverages/CrvYearnVaultLeverage.sol#8-48) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#35) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69)  sends oracle request but CrvYearnVaultLeverage2 (contracts/src/leverages/CrvYearnVaultLeverage2.sol#9-71) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(vault).withdraw(_amount,address(this),1) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#66) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115)  sends oracle request but YearnVaultPendleLPTLeverage (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#11-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71)  sends oracle request but CrvUSDCRVOracle (contracts/src/oracles/CrvUSDCRVOracle.sol#14-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83)  sends oracle request but CrvUSDYvMkUSDCrvUSDOracle (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#16-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64)  sends oracle request but ETHEETHPendlePTOracle (contracts/src/oracles/ETHEETHPendlePTOracle.sol#16-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71)  sends oracle request but ETHEETHYvPendleLPTOracle (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#18-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59)  sends oracle request but ETHRSETHPendlePTOracle (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#13-60) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52)  sends oracle request but ETHSWETHOracle (contracts/src/oracles/ETHSWETHOracle.sol#14-53) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72)  sends oracle request but ETHSWETHYvPendleLPTOracle (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#18-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112)  sends oracle request but FruxFAssetOracle (contracts/src/oracles/FruxFAssetOracle.sol#15-113) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV5: PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#39-63)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price1 = IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#70) Instantiates a contract but is not protected. Please add access control.
OCCV3: price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Instantiates a contract but is not protected. Please add access control.
OCCV4: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64)  sends oracle request but PxETHYvStETHPxETHOracle (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#13-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV4: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110)  sends oracle request but SFRAXOracle (contracts/src/oracles/SFRAXOracle.sol#16-111) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) Instantiates a contract but is not protected. Please add access control.
OCCV4: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119)  sends oracle request but DualOracleChainlinkUniV3 (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#14-154) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x68f702ff07f14b057018ab8f3e0f7df03dd91f94 analyzed (125 contracts with 3 detectors), 132 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 244 / 342 - 合约地址：0xd32d748039bd32d68b3e492dde3af955be70ec14 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd32d748039bd32d68b3e492dde3af955be70ec14-VariableInterestRate' running
Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/SturdyLeverage.sol:79:7:
   |
79 |       uint256 collateralAmount = pair.userCollateralBalance(_params.user);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/SturdyLeverage.sol:62:5:
   |
62 |     uint256 collateralAmount = IERC20(_params.collateralAsset).balanceOf(address(this));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:27:7:
   |
27 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:39:5:
   |
39 |     uint256 outAmount = IYearnVault(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:35:7:
   |
35 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:43:5:
   |
43 |     uint256 outAmount;
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:26:7:
   |
26 |       uint256 outAmount = IERC4626(_path.swapFrom).redeem(_amount, address(this), address(this));
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:38:5:
   |
38 |     uint256 outAmount = IERC4626(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:212:25:
    |
212 |     function maxDeposit(address _receiver) public view returns (uint256 _maxAssets) {
    |                         ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:217:22:
    |
217 |     function maxMint(address _receiver) external view returns (uint256 _maxShares) {
    |                      ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:133:9:
    |
133 |         uint256 _deltaTime,
    |         ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:135:9:
    |
135 |         uint64 _oldFullUtilizationInterest
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/SturdyLeverage.sol:197:5:
    |
197 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan.sol:96:5:
   |
96 |     uint256 _slippage, 
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan1.sol:121:5:
    |
121 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDCRVOracle.sol:43:49:
   |
43 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol:52:49:
   |
52 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol:45:49:
   |
45 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ERC4626Oracle.sol:34:49:
   |
34 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHPendlePTOracle.sol:50:49:
   |
50 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSETHPendlePTOracle.sol:46:49:
   |
46 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSWETHPendlePTOracle.sol:48:49:
   |
48 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/PythBasedAssetOracle.sol:69:49:
   |
69 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/RedstoneBasedAssetOracle.sol:49:49:
   |
49 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHBalPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHUniV3BunniPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:53:30:
   |
53 |         (, int256 _answer, , uint256 _updatedAt, ) = AggregatorV3Interface(STETH_CHAINLINK)
   |                              ^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _creationCode = BytesLib.concat(SSTORE2.read(contractAddress1),SSTORE2.read(contractAddress2)) (contracts/src/SturdyPairDeployer.sol#224) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _multiplyDecimals = uint8(uint32(- IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID).expo)) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV12: response in NORMALIZATION = 10 ** (18 + _multiplyDecimals - _divideDecimals + IERC20Metadata(_borrowAsset).decimals() - IERC20Metadata(_collateralAsset).decimals()) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#56-62) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = uint256(1e36) * uint256(uint64(price1.price)) / uint256(uint64(price2.price)) / NORMALIZATION (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#82) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV12: response in price1.price <= 0 || (block.timestamp - price1.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#72) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price2.price <= 0 || (block.timestamp - price2.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#78) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#48) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#56) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#64) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#75) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#84) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_3CRV_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#105) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_3CRV_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#107) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#68) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#77) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_MKUSD_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#92) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_MKUSD_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#94) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHPendlePTOracle.sol#54) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#66) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#49) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHOracle.sol#44) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#67) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#90) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/FruxFAssetOracle.sol#111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#102) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: oracle response PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice()._updatedAt (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53) not checked. Please check before use it.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_PXETH_STETH_POOL).get_virtual_price() * minPrice) / 1e18 (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#61) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/SFRAXOracle.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#88) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#118) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#97) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: SturdyPairDeployer.contractAddress1 (contracts/src/SturdyPairDeployer.sol#35) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV3: SturdyPairDeployer.contractAddress2 (contracts/src/SturdyPairDeployer.sol#36) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV4: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251)  sends oracle request but SturdyPairDeployer (contracts/src/SturdyPairDeployer.sol#30-314) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage.sol#27) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46)  sends oracle request but CrvYearnVaultLeverage (contracts/src/leverages/CrvYearnVaultLeverage.sol#8-48) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#35) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69)  sends oracle request but CrvYearnVaultLeverage2 (contracts/src/leverages/CrvYearnVaultLeverage2.sol#9-71) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(vault).withdraw(_amount,address(this),1) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#66) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115)  sends oracle request but YearnVaultPendleLPTLeverage (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#11-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71)  sends oracle request but CrvUSDCRVOracle (contracts/src/oracles/CrvUSDCRVOracle.sol#14-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83)  sends oracle request but CrvUSDYvMkUSDCrvUSDOracle (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#16-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64)  sends oracle request but ETHEETHPendlePTOracle (contracts/src/oracles/ETHEETHPendlePTOracle.sol#16-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71)  sends oracle request but ETHEETHYvPendleLPTOracle (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#18-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59)  sends oracle request but ETHRSETHPendlePTOracle (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#13-60) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52)  sends oracle request but ETHSWETHOracle (contracts/src/oracles/ETHSWETHOracle.sol#14-53) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72)  sends oracle request but ETHSWETHYvPendleLPTOracle (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#18-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112)  sends oracle request but FruxFAssetOracle (contracts/src/oracles/FruxFAssetOracle.sol#15-113) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV5: PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#39-63)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price1 = IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#70) Instantiates a contract but is not protected. Please add access control.
OCCV3: price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Instantiates a contract but is not protected. Please add access control.
OCCV4: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64)  sends oracle request but PxETHYvStETHPxETHOracle (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#13-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV4: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110)  sends oracle request but SFRAXOracle (contracts/src/oracles/SFRAXOracle.sol#16-111) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) Instantiates a contract but is not protected. Please add access control.
OCCV4: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119)  sends oracle request but DualOracleChainlinkUniV3 (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#14-154) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd32d748039bd32d68b3e492dde3af955be70ec14 analyzed (125 contracts with 3 detectors), 132 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 245 / 342 - 合约地址：0xa621a3809fda139c7aa63d7736d2e3eb0b351d0b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa621a3809fda139c7aa63d7736d2e3eb0b351d0b-ETHEETHPendlePTOracle' running
Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/SturdyLeverage.sol:79:7:
   |
79 |       uint256 collateralAmount = pair.userCollateralBalance(_params.user);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/SturdyLeverage.sol:62:5:
   |
62 |     uint256 collateralAmount = IERC20(_params.collateralAsset).balanceOf(address(this));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:27:7:
   |
27 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:39:5:
   |
39 |     uint256 outAmount = IYearnVault(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:35:7:
   |
35 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:43:5:
   |
43 |     uint256 outAmount;
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:26:7:
   |
26 |       uint256 outAmount = IERC4626(_path.swapFrom).redeem(_amount, address(this), address(this));
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:38:5:
   |
38 |     uint256 outAmount = IERC4626(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:212:25:
    |
212 |     function maxDeposit(address _receiver) public view returns (uint256 _maxAssets) {
    |                         ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:217:22:
    |
217 |     function maxMint(address _receiver) external view returns (uint256 _maxShares) {
    |                      ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:133:9:
    |
133 |         uint256 _deltaTime,
    |         ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:135:9:
    |
135 |         uint64 _oldFullUtilizationInterest
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/SturdyLeverage.sol:197:5:
    |
197 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan.sol:96:5:
   |
96 |     uint256 _slippage, 
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan1.sol:121:5:
    |
121 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDCRVOracle.sol:43:49:
   |
43 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol:52:49:
   |
52 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol:45:49:
   |
45 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ERC4626Oracle.sol:34:49:
   |
34 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHPendlePTOracle.sol:50:49:
   |
50 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSETHPendlePTOracle.sol:46:49:
   |
46 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSWETHPendlePTOracle.sol:48:49:
   |
48 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/PythBasedAssetOracle.sol:69:49:
   |
69 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/RedstoneBasedAssetOracle.sol:49:49:
   |
49 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHBalPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHUniV3BunniPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:53:30:
   |
53 |         (, int256 _answer, , uint256 _updatedAt, ) = AggregatorV3Interface(STETH_CHAINLINK)
   |                              ^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _divideDecimals = uint8(uint32(- IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID).expo)) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _creationCode = BytesLib.concat(SSTORE2.read(contractAddress1),SSTORE2.read(contractAddress2)) (contracts/src/SturdyPairDeployer.sol#224) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#48) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#56) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#64) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#75) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#84) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_3CRV_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#105) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_3CRV_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#107) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#68) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#77) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_MKUSD_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#92) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_MKUSD_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#94) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHPendlePTOracle.sol#54) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#66) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#49) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHOracle.sol#44) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#67) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#90) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/FruxFAssetOracle.sol#111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#102) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: oracle response PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice()._updatedAt (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53) not checked. Please check before use it.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_PXETH_STETH_POOL).get_virtual_price() * minPrice) / 1e18 (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#61) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/SFRAXOracle.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#88) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#118) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#97) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV12: response in NORMALIZATION = 10 ** (18 + _multiplyDecimals - _divideDecimals + IERC20Metadata(_borrowAsset).decimals() - IERC20Metadata(_collateralAsset).decimals()) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#56-62) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = uint256(1e36) * uint256(uint64(price1.price)) / uint256(uint64(price2.price)) / NORMALIZATION (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#82) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV12: response in price1.price <= 0 || (block.timestamp - price1.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#72) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price2.price <= 0 || (block.timestamp - price2.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#78) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: SturdyPairDeployer.contractAddress1 (contracts/src/SturdyPairDeployer.sol#35) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV3: SturdyPairDeployer.contractAddress2 (contracts/src/SturdyPairDeployer.sol#36) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV4: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251)  sends oracle request but SturdyPairDeployer (contracts/src/SturdyPairDeployer.sol#30-314) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage.sol#27) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46)  sends oracle request but CrvYearnVaultLeverage (contracts/src/leverages/CrvYearnVaultLeverage.sol#8-48) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#35) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69)  sends oracle request but CrvYearnVaultLeverage2 (contracts/src/leverages/CrvYearnVaultLeverage2.sol#9-71) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(vault).withdraw(_amount,address(this),1) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#66) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115)  sends oracle request but YearnVaultPendleLPTLeverage (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#11-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71)  sends oracle request but CrvUSDCRVOracle (contracts/src/oracles/CrvUSDCRVOracle.sol#14-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83)  sends oracle request but CrvUSDYvMkUSDCrvUSDOracle (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#16-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64)  sends oracle request but ETHEETHPendlePTOracle (contracts/src/oracles/ETHEETHPendlePTOracle.sol#16-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71)  sends oracle request but ETHEETHYvPendleLPTOracle (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#18-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59)  sends oracle request but ETHRSETHPendlePTOracle (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#13-60) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52)  sends oracle request but ETHSWETHOracle (contracts/src/oracles/ETHSWETHOracle.sol#14-53) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72)  sends oracle request but ETHSWETHYvPendleLPTOracle (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#18-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112)  sends oracle request but FruxFAssetOracle (contracts/src/oracles/FruxFAssetOracle.sol#15-113) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV5: PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#39-63)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price1 = IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#70) Instantiates a contract but is not protected. Please add access control.
OCCV3: price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Instantiates a contract but is not protected. Please add access control.
OCCV4: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64)  sends oracle request but PxETHYvStETHPxETHOracle (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#13-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV4: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110)  sends oracle request but SFRAXOracle (contracts/src/oracles/SFRAXOracle.sol#16-111) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) Instantiates a contract but is not protected. Please add access control.
OCCV4: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119)  sends oracle request but DualOracleChainlinkUniV3 (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#14-154) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xa621a3809fda139c7aa63d7736d2e3eb0b351d0b analyzed (125 contracts with 3 detectors), 132 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 246 / 342 - 合约地址：0xddb80a52cf2098647146e0bbeb2961502c322c37 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xddb80a52cf2098647146e0bbeb2961502c322c37-ETHRSETHPendlePTOracle' running
Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/SturdyLeverage.sol:79:7:
   |
79 |       uint256 collateralAmount = pair.userCollateralBalance(_params.user);
   |       ^^^^^^^^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/SturdyLeverage.sol:62:5:
   |
62 |     uint256 collateralAmount = IERC20(_params.collateralAsset).balanceOf(address(this));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:27:7:
   |
27 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage.sol:39:5:
   |
39 |     uint256 outAmount = IYearnVault(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:35:7:
   |
35 |       uint256 outAmount = IYearnVault(_path.swapFrom).withdraw(_amount, address(this), 1);
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/CrvYearnVaultLeverage2.sol:43:5:
   |
43 |     uint256 outAmount;
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: This declaration shadows an existing declaration.
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:26:7:
   |
26 |       uint256 outAmount = IERC4626(_path.swapFrom).redeem(_amount, address(this), address(this));
   |       ^^^^^^^^^^^^^^^^^
Note: The shadowed declaration is here:
  --> contracts/src/leverages/ERC4626VaultLeverage.sol:38:5:
   |
38 |     uint256 outAmount = IERC4626(vault).deposit(_amount, address(this));
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:212:25:
    |
212 |     function maxDeposit(address _receiver) public view returns (uint256 _maxAssets) {
    |                         ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/SturdyPair.sol:217:22:
    |
217 |     function maxMint(address _receiver) external view returns (uint256 _maxShares) {
    |                      ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:133:9:
    |
133 |         uint256 _deltaTime,
    |         ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/VariableInterestRate.sol:135:9:
    |
135 |         uint64 _oldFullUtilizationInterest
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/SturdyLeverage.sol:197:5:
    |
197 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan.sol:96:5:
   |
96 |     uint256 _slippage, 
   |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/src/leverages/Mode/SturdyLeverageWihtoutFlashloan1.sol:121:5:
    |
121 |     uint256 _slippage, 
    |     ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDCRVOracle.sol:43:49:
   |
43 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol:52:49:
   |
52 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol:45:49:
   |
45 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ERC4626Oracle.sol:34:49:
   |
34 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHPendlePTOracle.sol:50:49:
   |
50 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSETHPendlePTOracle.sol:46:49:
   |
46 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHRSWETHPendlePTOracle.sol:48:49:
   |
48 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol:56:49:
   |
56 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/PythBasedAssetOracle.sol:69:49:
   |
69 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/Mode/RedstoneBasedAssetOracle.sol:49:49:
   |
49 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHBalPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHUniV3BunniPxETHOracle.sol:39:49:
   |
39 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:40:49:
   |
40 |     function getPrices() external view returns (bool _isBadData, uint256 _priceLow, uint256 _priceHigh) {
   |                                                 ^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
  --> contracts/src/oracles/PxETHYvStETHPxETHOracle.sol:53:30:
   |
53 |         (, int256 _answer, , uint256 _updatedAt, ) = AggregatorV3Interface(STETH_CHAINLINK)
   |                              ^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in _creationCode = BytesLib.concat(SSTORE2.read(contractAddress1),SSTORE2.read(contractAddress2)) (contracts/src/SturdyPairDeployer.sol#224) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Each call should handle only one request at a time.
OCCV9: multiple requests sent in _multiplyDecimals = uint8(uint32(- IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID).expo)) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._divideDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#55) not checked. Please check before use it.
OCCV12: response in NORMALIZATION = 10 ** (18 + _multiplyDecimals - _divideDecimals + IERC20Metadata(_borrowAsset).decimals() - IERC20Metadata(_collateralAsset).decimals()) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#56-62) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = uint256(1e36) * uint256(uint64(price1.price)) / uint256(uint64(price2.price)) / NORMALIZATION (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#82) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string)._multiplyDecimals (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#54) not checked. Please check before use it.
OCCV12: response in price1.price <= 0 || (block.timestamp - price1.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#72) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price2.price <= 0 || (block.timestamp - price2.publishTime > MAX_ORACLE_DELAY) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#78) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#48) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#56) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDCRVOracle.sol#64) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#75) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#84) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_3CRV_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#105) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_3CRV_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#107) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#68) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#77) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_CRVUSD_MKUSD_POOL).get_virtual_price() * minStable) / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#92) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in curveLPTokenPrice * IYearnVault(YEARN_CRVUSD_MKUSD_VAULT).pricePerShare() / 1e18 (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#94) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHPendlePTOracle.sol#54) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#66) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#49) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHOracle.sol#44) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#60) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in rate = IERC4626(YEARN_VAULT).convertToShares(10 ** ASSET_DECIMALS) * rate / 1e18 (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#67) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#90) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/FruxFAssetOracle.sol#111) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/FruxFAssetOracle.sol#102) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) not vaildated. Please check before use it.
OCCV10: oracle response PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice()._updatedAt (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53) not checked. Please check before use it.
OCCV12: response in curveLPTokenPrice = (ICurvePool(CURVE_PXETH_STETH_POOL).get_virtual_price() * minPrice) / 1e18 (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#61) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#88) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/SFRAXOracle.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > MAX_ORACLE_DELAY) (contracts/src/oracles/SFRAXOracle.sol#100) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) not vaildated. Please check before use it.
OCCV12: response in _answer_scope_0 <= 0 || (block.timestamp - _updatedAt_scope_1 > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#109) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in _price = _price / CHAINLINK_NORMALIZATION (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#118) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: answer and startedAt of data feed in (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) not vaildated. Please check before use it.
OCCV12: response in _answer <= 0 || (block.timestamp - _updatedAt > maxOracleDelay) (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#97) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: SturdyPairDeployer.contractAddress1 (contracts/src/SturdyPairDeployer.sol#35) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV3: SturdyPairDeployer.contractAddress2 (contracts/src/SturdyPairDeployer.sol#36) is used in oracle request but is modified in SturdyPairDeployer.setCreationCode(bytes) (contracts/src/SturdyPairDeployer.sol#134-141) without protection. Please add access control.
OCCV4: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SturdyPairDeployer._deploy(bytes,bytes,bytes) (contracts/src/SturdyPairDeployer.sol#218-251)  sends oracle request but SturdyPairDeployer (contracts/src/SturdyPairDeployer.sol#30-314) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage.sol#27) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage.sol#13-46)  sends oracle request but CrvYearnVaultLeverage (contracts/src/leverages/CrvYearnVaultLeverage.sol#8-48) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(_path.swapFrom).withdraw(_amount,address(this),1) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#35) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvYearnVaultLeverage2._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/CrvYearnVaultLeverage2.sol#22-69)  sends oracle request but CrvYearnVaultLeverage2 (contracts/src/leverages/CrvYearnVaultLeverage2.sol#9-71) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: outAmount = IYearnVault(vault).withdraw(_amount,address(this),1) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#66) consumes contract/subscription funds but lacks protection. Please add access control.
OCCV4: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: YearnVaultPendleLPTLeverage._processSwap(uint256,IBaseLeverage.MultipSwapPath,bool) (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#47-115)  sends oracle request but YearnVaultPendleLPTLeverage (contracts/src/leverages/YearnVaultPendleLPTLeverage.sol#11-117) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDCRVOracle.getPrices() (contracts/src/oracles/CrvUSDCRVOracle.sol#43-71)  sends oracle request but CrvUSDCRVOracle (contracts/src/oracles/CrvUSDCRVOracle.sol#14-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#45-46) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRV_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDCRVOracle.sol#61-62) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#65-90)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#72-73) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#81-82) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYv3CRVCrvUSDOracle._getYv3CRVCrvUSDPrice(uint256) (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#95-108)  sends oracle request but CrvUSDYv3CRVCrvUSDOracle (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#16-109) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(THREECRV_ETH_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYv3CRVCrvUSDOracle.sol#97-98) Instantiates a contract but is not protected. Please add access control.
OCCV4: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: CrvUSDYvMkUSDCrvUSDOracle._getCrvUSDPrice() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#58-83)  sends oracle request but CrvUSDYvMkUSDCrvUSDOracle (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#16-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CRVUSD_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#65-66) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(ETH_USD_CHAINLINK).latestRoundData() (contracts/src/oracles/CrvUSDYvMkUSDCrvUSDOracle.sol#74-75) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#50-64)  sends oracle request but ETHEETHPendlePTOracle (contracts/src/oracles/ETHEETHPendlePTOracle.sol#16-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHPendlePTOracle.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHEETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#56-71)  sends oracle request but ETHEETHYvPendleLPTOracle (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#18-72) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_WEETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHEETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHRSETHPendlePTOracle.getPrices() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#46-59)  sends oracle request but ETHRSETHPendlePTOracle (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#13-60) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_RSETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHRSETHPendlePTOracle.sol#47) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHOracle.getPrices() (contracts/src/oracles/ETHSWETHOracle.sol#40-52)  sends oracle request but ETHSWETHOracle (contracts/src/oracles/ETHSWETHOracle.sol#14-53) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHOracle.sol#42) Instantiates a contract but is not protected. Please add access control.
OCCV4: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ETHSWETHYvPendleLPTOracle.getPrices() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#56-72)  sends oracle request but ETHSWETHYvPendleLPTOracle (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#18-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(REDSTONE_SWETH_ETH_PRICE).latestRoundData() (contracts/src/oracles/ETHSWETHYvPendleLPTOracle.sol#58) Instantiates a contract but is not protected. Please add access control.
OCCV4: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FruxFAssetOracle._getChainlinkPrice() (contracts/src/oracles/FruxFAssetOracle.sol#82-112)  sends oracle request but FruxFAssetOracle (contracts/src/oracles/FruxFAssetOracle.sol#15-113) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#86-87) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/FruxFAssetOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV5: PythBasedAssetOracle.constructor(uint256,uint256,address,address,bytes32,bytes32,string) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#39-63)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythBasedAssetOracle.getPrices() (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#69-86)  sends oracle request but PythBasedAssetOracle (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#25-87) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price1 = IPyth(PYTH_ORACLE).getPriceUnsafe(BORROW_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#70) Instantiates a contract but is not protected. Please add access control.
OCCV3: price2 = IPyth(PYTH_ORACLE).getPriceUnsafe(COLLATERAL_ASSET_PRICE_ID) (contracts/src/oracles/Mode/PythBasedAssetOracle.sol#76) Instantiates a contract but is not protected. Please add access control.
OCCV4: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PxETHYvStETHPxETHOracle._getYvStETHPxETHPrice() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#51-64)  sends oracle request but PxETHYvStETHPxETHOracle (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#13-65) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(STETH_CHAINLINK).latestRoundData() (contracts/src/oracles/PxETHYvStETHPxETHOracle.sol#53-54) Instantiates a contract but is not protected. Please add access control.
OCCV4: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: SFRAXOracle._getChainlinkPrice() (contracts/src/oracles/SFRAXOracle.sol#80-110)  sends oracle request but SFRAXOracle (contracts/src/oracles/SFRAXOracle.sol#16-111) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#84-85) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/SFRAXOracle.sol#96-97) Instantiates a contract but is not protected. Please add access control.
OCCV4: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: DualOracleChainlinkUniV3._getChainlinkPrice() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#89-119)  sends oracle request but DualOracleChainlinkUniV3 (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#14-154) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: (None,_answer,None,_updatedAt,None) = AggregatorV3Interface(CHAINLINK_MULTIPLY_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#93-94) Instantiates a contract but is not protected. Please add access control.
OCCV3: (None,_answer_scope_0,None,_updatedAt_scope_1,None) = AggregatorV3Interface(CHAINLINK_DIVIDE_ADDRESS).latestRoundData() (contracts/src/oracles/dual-oracles/DualOracleChainlinkUniV3.sol#105-106) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xddb80a52cf2098647146e0bbeb2961502c322c37 analyzed (125 contracts with 3 detectors), 132 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 247 / 342 - 合约地址：0x0803d94e420afac30034686aff01c42827dbce28 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0803d94e420afac30034686aff01c42827dbce28-RUETHCashivaToken' running
INFO:Slither:0x0803d94e420afac30034686aff01c42827dbce28 analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 248 / 342 - 合约地址：0x030785cfc99062b697d9d597c74f0d7465521127 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x030785cfc99062b697d9d597c74f0d7465521127-KGETHCashivaToken' running
INFO:Slither:0x030785cfc99062b697d9d597c74f0d7465521127 analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 249 / 342 - 合约地址：0xb6e42d5d569fb2d4d451275d851fc4e4adf44f11 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb6e42d5d569fb2d4d451275d851fc4e4adf44f11-MRETHCashivaToken' running
INFO:Slither:0xb6e42d5d569fb2d4d451275d851fc4e4adf44f11 analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 250 / 342 - 合约地址：0x898532ecdc29295efb6e14bef0933d39c0710897 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x898532ecdc29295efb6e14bef0933d39c0710897-RUETHCashivaToken' running
INFO:Slither:0x898532ecdc29295efb6e14bef0933d39c0710897 analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 251 / 342 - 合约地址：0xee1dbfc1f0706046432f5256ffc326887018acbe ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xee1dbfc1f0706046432f5256ffc326887018acbe-KGETHCashivaToken' running
INFO:Slither:0xee1dbfc1f0706046432f5256ffc326887018acbe analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 252 / 342 - 合约地址：0xd51b38bd3ac0777ee15fc6bda67849fa1d3e6d87 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd51b38bd3ac0777ee15fc6bda67849fa1d3e6d87-MRETHCashivaToken' running
INFO:Slither:0xd51b38bd3ac0777ee15fc6bda67849fa1d3e6d87 analyzed (40 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 253 / 342 - 合约地址：0x248c217666421ae7be28bef83e05aa4bf33dbdcb ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x248c217666421ae7be28bef83e05aa4bf33dbdcb-CEther' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Comptroller/RedemptionManager.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Interfaces/IAccountLiquidity.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Interfaces/ICompLogic.sol


Warning: Warning: Since the VM version paris, "difficulty" was replaced by "prevrandao", which now returns a random number based on the beacon chain.
  --> contracts/Multicall2.sol:68:22:
   |
68 |         difficulty = block.difficulty;
   |                      ^^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/CToken/CToken.sol:723:5:
    |
723 |     uint256 borrowerIndex = accountBorrows[borrower].interestIndex;
    |     ^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/Comptroller/CompoundLens.sol:486:5:
    |
486 |     address oracle = IComptroller(comptroller).oracle();
    |     ^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/Comptroller/CompoundLens.sol:517:8:
    |
517 |       (uint256 oErr, uint256 depositBalance, uint256 borrowBalance, uint256 exchangeRateMantissa) = ICToken(asset)
    |        ^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:47:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                               ^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:62:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                                              ^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:80:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                                                                ^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1099:5:
     |
1099 |     address liquidator,
     |     ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1100:5:
     |
1100 |     address borrower,
     |     ^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1101:5:
     |
1101 |     uint256 seizeTokens
     |     ^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1133:57:
     |
1133 |   function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) external {
     |                                                         ^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:31:27:
   |
31 |   function getPriceUnsafe(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                           ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:40:21:
   |
40 |   function getPrice(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                     ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:45:24:
   |
45 |   function getEmaPrice(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                        ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:50:32:
   |
50 |   function getPriceNoOlderThan(bytes32 id, uint age) external view returns (PythStructs.Price memory price) {
   |                                ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:55:30:
   |
55 |   function getEmaPriceUnsafe(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                              ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:60:35:
   |
60 |   function getEmaPriceNoOlderThan(bytes32 id, uint age) external view returns (PythStructs.Price memory price) {
   |                                   ^^^^^^^^^^


Warning: Warning: Function state mutability can be restricted to view
   --> contracts/Comptroller/Comptroller.sol:944:3:
    |
944 |   function redeemAllowed(address cToken, address redeemer, uint256 redeemTokens) external {
    |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1076:3:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1096:3:
     |
1096 |   function seizeAllowed(
     |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1133:3:
     |
1133 |   function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) external {
     |   ^ (Relevant source part starts here and spans across multiple lines).



INFO:Detectors:
OCCV9: multiple requests sent in (tokenRoundID,tokenAnswer,tokenStartedAt,tokenUpdatedAt,tokenAnsweredInRound) = IChainlinkFeed(tokenFeed).latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#25-31) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (roundID,answer,None,updatedAt,answeredInRound) = IChainlinkFeed(feed.addr).latestRoundData() (contracts/Oracle/FeedPriceOracle.sol#130-131) Each call should handle only one request at a time.
OCCV9: oracle request in loop in price = IPyth(feed.addr).getPriceUnsafe(feed.feedId) (contracts/Oracle/PythOracle.sol#98-99) Each call should handle only one request at a time.
OCCV8: deprecated function invoked in IPyth(mtrgFeed).getValidTimePeriod() (contracts/Oracle/wstMTRGOracle.sol#37) Do not use this function.
OCCV8: deprecated function invoked in mtrgPrice = IPyth(mtrgFeed).getPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#41) Do not use this function.
OCCV8: deprecated function invoked in mtrgPrice = IPyth(mtrgFeed).getEmaPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#46) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythOracle.getUnderlyingPrice(address).price (contracts/Oracle/PythOracle.sol#98-99) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythOracle.getUnderlyingPrice(address).price (contracts/Oracle/PythOracle.sol#98-99) not checked. Please check before use it.
OCCV12: response in decimals = DECIMALS - feed.tokenDecimals - uint32(price.expo * - 1) (contracts/Oracle/PythOracle.sol#101-103) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in wstMTRGOracle.getPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#32) not checked. Please check before use it.
OCCV10: publishTime of oracle response in wstMTRGOracle.getPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#32) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getEmaPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in wstMTRGOracle.getEmaPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#61) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#19-50) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#19-50)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataETH() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#52-62) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataETH() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#52-62)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataToken() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#64-74) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataToken() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#64-74)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythOracle.getUnderlyingPrice(address) (contracts/Oracle/PythOracle.sol#90-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle.getUnderlyingPrice(address) (contracts/Oracle/PythOracle.sol#90-108)  sends oracle request but PythOracle (contracts/Oracle/PythOracle.sol#5-120) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price = IPyth(feed.addr).getPriceUnsafe(feed.feedId) (contracts/Oracle/PythOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#31-34) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#31-34)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPriceUnsafe(feedId) (contracts/Oracle/wstMTRGOracle.sol#32) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(mtrgFeed).getValidTimePeriod() (contracts/Oracle/wstMTRGOracle.sol#37) Instantiates a contract but is not protected. Please add access control.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#41) Instantiates a contract but is not protected. Please add access control.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#46) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#50-53)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPriceNoOlderThan(feedId,age) (contracts/Oracle/wstMTRGOracle.sol#51) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getEmaPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getEmaPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#55-58)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPriceUnsafe(feedId) (contracts/Oracle/wstMTRGOracle.sol#56) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#60-63) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#60-63)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPriceNoOlderThan(feedId,age) (contracts/Oracle/wstMTRGOracle.sol#61) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x248c217666421ae7be28bef83e05aa4bf33dbdcb analyzed (121 contracts with 3 detectors), 39 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 254 / 342 - 合约地址：0x3bcee7e4f14e1b8506e63dbfa2bc4de083538034 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3bcee7e4f14e1b8506e63dbfa2bc4de083538034-CompoundLens' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Comptroller/RedemptionManager.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Interfaces/IAccountLiquidity.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/Interfaces/ICompLogic.sol


Warning: Warning: Since the VM version paris, "difficulty" was replaced by "prevrandao", which now returns a random number based on the beacon chain.
  --> contracts/Multicall2.sol:68:22:
   |
68 |         difficulty = block.difficulty;
   |                      ^^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/CToken/CToken.sol:723:5:
    |
723 |     uint256 borrowerIndex = accountBorrows[borrower].interestIndex;
    |     ^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/Comptroller/CompoundLens.sol:486:5:
    |
486 |     address oracle = IComptroller(comptroller).oracle();
    |     ^^^^^^^^^^^^^^


Warning: Warning: Unused local variable.
   --> contracts/Comptroller/CompoundLens.sol:517:8:
    |
517 |       (uint256 oErr, uint256 depositBalance, uint256 borrowBalance, uint256 exchangeRateMantissa) = ICToken(asset)
    |        ^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:47:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                               ^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:62:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                                              ^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1076:80:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |                                                                                ^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1099:5:
     |
1099 |     address liquidator,
     |     ^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1100:5:
     |
1100 |     address borrower,
     |     ^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1101:5:
     |
1101 |     uint256 seizeTokens
     |     ^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> contracts/Comptroller/Comptroller.sol:1133:57:
     |
1133 |   function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) external {
     |                                                         ^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:31:27:
   |
31 |   function getPriceUnsafe(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                           ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:40:21:
   |
40 |   function getPrice(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                     ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:45:24:
   |
45 |   function getEmaPrice(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                        ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:50:32:
   |
50 |   function getPriceNoOlderThan(bytes32 id, uint age) external view returns (PythStructs.Price memory price) {
   |                                ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:55:30:
   |
55 |   function getEmaPriceUnsafe(bytes32 id) external view returns (PythStructs.Price memory price) {
   |                              ^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/Oracle/wstMTRGOracle.sol:60:35:
   |
60 |   function getEmaPriceNoOlderThan(bytes32 id, uint age) external view returns (PythStructs.Price memory price) {
   |                                   ^^^^^^^^^^


Warning: Warning: Function state mutability can be restricted to view
   --> contracts/Comptroller/Comptroller.sol:944:3:
    |
944 |   function redeemAllowed(address cToken, address redeemer, uint256 redeemTokens) external {
    |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1076:3:
     |
1076 |   function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) external {
     |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1096:3:
     |
1096 |   function seizeAllowed(
     |   ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to view
    --> contracts/Comptroller/Comptroller.sol:1133:3:
     |
1133 |   function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) external {
     |   ^ (Relevant source part starts here and spans across multiple lines).



INFO:Detectors:
OCCV9: multiple requests sent in (tokenRoundID,tokenAnswer,tokenStartedAt,tokenUpdatedAt,tokenAnsweredInRound) = IChainlinkFeed(tokenFeed).latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#25-31) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (roundID,answer,None,updatedAt,answeredInRound) = IChainlinkFeed(feed.addr).latestRoundData() (contracts/Oracle/FeedPriceOracle.sol#130-131) Each call should handle only one request at a time.
OCCV9: oracle request in loop in price = IPyth(feed.addr).getPriceUnsafe(feed.feedId) (contracts/Oracle/PythOracle.sol#98-99) Each call should handle only one request at a time.
OCCV8: deprecated function invoked in IPyth(mtrgFeed).getValidTimePeriod() (contracts/Oracle/wstMTRGOracle.sol#37) Do not use this function.
OCCV8: deprecated function invoked in mtrgPrice = IPyth(mtrgFeed).getPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#41) Do not use this function.
OCCV8: deprecated function invoked in mtrgPrice = IPyth(mtrgFeed).getEmaPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#46) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythOracle.getUnderlyingPrice(address).price (contracts/Oracle/PythOracle.sol#98-99) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythOracle.getUnderlyingPrice(address).price (contracts/Oracle/PythOracle.sol#98-99) not checked. Please check before use it.
OCCV12: response in decimals = DECIMALS - feed.tokenDecimals - uint32(price.expo * - 1) (contracts/Oracle/PythOracle.sol#101-103) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in wstMTRGOracle.getPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#32) not checked. Please check before use it.
OCCV10: publishTime of oracle response in wstMTRGOracle.getPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#32) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#51) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getEmaPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#56) not checked. Please check before use it.
OCCV10: publishTime of oracle response in wstMTRGOracle.getEmaPriceUnsafe(bytes32).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#56) not checked. Please check before use it.
OCCV10: price of oracle response in wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256).mtrgPrice (contracts/Oracle/wstMTRGOracle.sol#61) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#19-50) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundData() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#19-50)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataETH() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#52-62) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataETH() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#52-62)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataToken() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#64-74) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkFeedAdaptor_ETHToUSD.latestRoundDataToken() (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#64-74)  sends oracle request but ChainlinkFeedAdaptor_ETHToUSD (contracts/Oracle/ChainlinkFeedAdaptor_ETHToUSD.sol#7-75) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythOracle.getUnderlyingPrice(address) (contracts/Oracle/PythOracle.sol#90-108) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythOracle.getUnderlyingPrice(address) (contracts/Oracle/PythOracle.sol#90-108)  sends oracle request but PythOracle (contracts/Oracle/PythOracle.sol#5-120) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: price = IPyth(feed.addr).getPriceUnsafe(feed.feedId) (contracts/Oracle/PythOracle.sol#98-99) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#31-34) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#31-34)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPriceUnsafe(feedId) (contracts/Oracle/wstMTRGOracle.sol#32) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(mtrgFeed).getValidTimePeriod() (contracts/Oracle/wstMTRGOracle.sol#37) Instantiates a contract but is not protected. Please add access control.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#41) Instantiates a contract but is not protected. Please add access control.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPrice(feedId) (contracts/Oracle/wstMTRGOracle.sol#46) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#50-53) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#50-53)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getPriceNoOlderThan(feedId,age) (contracts/Oracle/wstMTRGOracle.sol#51) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getEmaPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#55-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getEmaPriceUnsafe(bytes32) (contracts/Oracle/wstMTRGOracle.sol#55-58)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPriceUnsafe(feedId) (contracts/Oracle/wstMTRGOracle.sol#56) Instantiates a contract but is not protected. Please add access control.
OCCV4: wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#60-63) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: wstMTRGOracle.getEmaPriceNoOlderThan(bytes32,uint256) (contracts/Oracle/wstMTRGOracle.sol#60-63)  sends oracle request but wstMTRGOracle (contracts/Oracle/wstMTRGOracle.sol#9-64) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: mtrgPrice = IPyth(mtrgFeed).getEmaPriceNoOlderThan(feedId,age) (contracts/Oracle/wstMTRGOracle.sol#61) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x3bcee7e4f14e1b8506e63dbfa2bc4de083538034 analyzed (121 contracts with 3 detectors), 39 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 255 / 342 - 合约地址：0xb3cacdc722470259886abb57cee1fea714e86387 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb3cacdc722470259886abb57cee1fea714e86387-HoneyPotOEVShare' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/oev-contracts/src/interfaces/chronicle/IMedian.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> lib/oev-contracts/src/interfaces/pyth/IPyth.sol


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> lib/oev-contracts/src/controllers/BaseController.sol:38:40:
   |
38 |     function canUnlock(address caller, uint256 _lastUnlockTime) public view override returns (bool) {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV9: multiple requests sent in (roundId,answer,None,updatedAt,None) = CHAINLINK_SOURCE.getRoundData(targetRoundId) (lib/oev-contracts/src/adapters/source-adapters/ChainlinkSourceAdapter.sol#103) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (roundId,answer,None,updatedAt,None) = CHAINLINK_SOURCE.getRoundData(targetRoundId) (lib/oev-contracts/src/adapters/source-adapters/ChainlinkSourceAdapter.sol#103) Each call should handle only one request at a time.
Reference: ...
INFO:Slither:0xb3cacdc722470259886abb57cee1fea714e86387 analyzed (23 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 256 / 342 - 合约地址：0xc20e2debccfbf359e3eb9ff5022d11742ad63c07 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc20e2debccfbf359e3eb9ff5022d11742ad63c07-PythPriceProvider' running
INFO:Detectors:
OCCV9: multiple requests sent in emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#272) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#197-205) Each call should handle only one request at a time.
OCCV9: oracle request in loop in emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#272) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#277-279) Each call should handle only one request at a time.
OCCV9: oracle request in loop in emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#327) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#378-391) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#197-205) not checked but returned directly. Please check before use it.
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#277-279) not checked but returned directly. Please check before use it.
OCCV10: price of oracle response in PythPriceProvider.getPrice(address).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#272) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythPriceProvider.getPrice(address).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#272) not checked. Please check before use it.
OCCV12: response in priceMantissa /= 10 ** (priceDecimals - tokenDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#286) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceMantissa *= 10 ** (tokenDecimals - priceDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#288) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = (tokenAmount * priceMantissa) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#301) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation / (10 ** (decimals - tokenDecimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#304) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation / (10 ** (decimals - tokenDecimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#304) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation * (10 ** (tokenDecimals - decimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#306) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation * (10 ** (tokenDecimals - decimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#306) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythPriceProvider.getEvaluationUnsafe(address,uint256).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#327) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythPriceProvider.getEvaluationUnsafe(address,uint256).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#327) not checked. Please check before use it.
OCCV12: response in priceMantissa /= 10 ** (priceDecimals - tokenDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#333) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceMantissa *= 10 ** (tokenDecimals - priceDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#335) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = (tokenAmount * priceMantissa) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#339) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation / (10 ** (decimals - tokenDecimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#342) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation / (10 ** (decimals - tokenDecimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#342) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation * (10 ** (tokenDecimals - decimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#344) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in evaluation = evaluation * (10 ** (tokenDecimals - decimals)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#344) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#378-391) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: PythPriceProvider.validTimePeriod (contracts/priceOracle/priceproviders/PythPriceProvider.sol#26) is used in oracle request but is modified in PythPriceProvider.initialize() (contracts/priceOracle/priceproviders/PythPriceProvider.sol#76-82) without protection. Please add access control.
OCCV4: PythPriceProvider.updatePrices(bytes32[],bytes[]) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#191-207) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#197-205) Instantiates a contract but is not protected. Please add access control.
OCCV3: updateFee = IPyth(pythOracle).singleUpdateFeeInWei() * lenPriceId (contracts/priceOracle/priceproviders/PythPriceProvider.sol#198) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pythOracle).updatePriceFeeds{value: msg.value}(updateData) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#202) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getUpdatedPrice(address,bytes[]) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#216-224) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pythOracle).updatePriceFeeds{value: msg.value}(updateData) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#221) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getPrice(address) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#262-291) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#272) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#277-279) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getEvaluationUnsafe(address,uint256) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#317-347) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#327) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getExpiredPriceFeeds(address[],uint256) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#364-399) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#378-391) Instantiates a contract but is not protected. Please add access control.
OCCV3: updateFee = IPyth(pythOracle).singleUpdateFeeInWei() * cntTokenNeedUpdate (contracts/priceOracle/priceproviders/PythPriceProvider.sol#398) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xc20e2debccfbf359e3eb9ff5022d11742ad63c07 analyzed (17 contracts with 3 detectors), 42 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 257 / 342 - 合约地址：0x53a2a7c0cbb76b20782c6842a25876c5377b64e8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x53a2a7c0cbb76b20782c6842a25876c5377b64e8-StandardPythFactory' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> src/interfaces/pyth/IPyth.sol


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> src/controllers/MutableUnlockersController.sol:56:40:
   |
56 |     function canUnlock(address caller, uint256 _lastUnlockTime) public view override returns (bool) {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^



INFO:Slither:0x53a2a7c0cbb76b20782c6842a25876c5377b64e8 analyzed (20 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 258 / 342 - 合约地址：0x1ed187354d6bfb983932d9983917b199a7253ab9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1ed187354d6bfb983932d9983917b199a7253ab9-MorphoPythOracleFactory' running
INFO:Detectors:
OCCV8: deprecated function invoked in SCALE_FACTOR.mulDiv(BASE_VAULT.getAssets(BASE_VAULT_CONVERSION_SAMPLE) * PythFeedLib.getPrice(pyth,BASE_FEED_1,PRICE_FEED_MAX_AGE) * PythFeedLib.getPrice(pyth,BASE_FEED_2,PRICE_FEED_MAX_AGE),QUOTE_VAULT.getAssets(QUOTE_VAULT_CONVERSION_SAMPLE) * PythFeedLib.getPrice(pyth,QUOTE_FEED_1,PRICE_FEED_MAX_AGE) * PythFeedLib.getPrice(pyth,QUOTE_FEED_2,PRICE_FEED_MAX_AGE)) (src/morpho-pyth/MorphoPythOracle.sol#109-116) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythFeedLib.getDecimals(IPyth,bytes32).price (src/morpho-pyth/libraries/PythFeedLib.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythFeedLib.getDecimals(IPyth,bytes32).price (src/morpho-pyth/libraries/PythFeedLib.sol#28) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PythFeedLib.getPrice(IPyth,bytes32,uint256) (src/morpho-pyth/libraries/PythFeedLib.sol#15-21) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythFeedLib.getPrice(IPyth,bytes32,uint256) (src/morpho-pyth/libraries/PythFeedLib.sol#15-21)  sends oracle request but PythFeedLib (src/morpho-pyth/libraries/PythFeedLib.sol#11-31) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythFeedLib.getDecimals(IPyth,bytes32) (src/morpho-pyth/libraries/PythFeedLib.sol#25-30) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythFeedLib.getDecimals(IPyth,bytes32) (src/morpho-pyth/libraries/PythFeedLib.sol#25-30)  sends oracle request but PythFeedLib (src/morpho-pyth/libraries/PythFeedLib.sol#11-31) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x1ed187354d6bfb983932d9983917b199a7253ab9 analyzed (13 contracts with 3 detectors), 7 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 259 / 342 - 合约地址：0xcadd1dd658439d92e26efe6154fff13b94d11494 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcadd1dd658439d92e26efe6154fff13b94d11494-PriceFeedPythWrapper' running
INFO:Detectors:
OCCV10: price of oracle response in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256).response (contracts/utils/PriceFeedPythWrapper.sol#85) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256).response (contracts/utils/PriceFeedPythWrapper.sol#85) not checked. Please check before use it.
OCCV12: response in int256(pythAnswer / int256(10 ** (_pythPriceDecimals - _decimals))) (contracts/utils/PriceFeedPythWrapper.sol#129) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer / int256(10 ** (_pythPriceDecimals - _decimals))) (contracts/utils/PriceFeedPythWrapper.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer * int256(10 ** (_decimals - _pythPriceDecimals))) (contracts/utils/PriceFeedPythWrapper.sol#131) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer * int256(10 ** (_decimals - _pythPriceDecimals))) (contracts/utils/PriceFeedPythWrapper.sol#131) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - pythRound.updatedAt > allowedTimeout (contracts/utils/PriceFeedPythWrapper.sol#155) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PriceFeedPythWrapper._callandCheckFeeds().response (contracts/utils/PriceFeedPythWrapper.sol#137) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PriceFeedPythWrapper._callandCheckFeeds().response (contracts/utils/PriceFeedPythWrapper.sol#137) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pyth_).priceFeedExists(pythPriceFeedId_) == false (contracts/utils/PriceFeedPythWrapper.sol#80) Instantiates a contract but is not protected. Please add access control.
OCCV3: response = IPyth(pyth_).getPriceUnsafe(pythPriceFeedId_) (contracts/utils/PriceFeedPythWrapper.sol#85) Instantiates a contract but is not protected. Please add access control.
OCCV3: pyth = IPyth(pyth_) (contracts/utils/PriceFeedPythWrapper.sol#88) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceFeedPythWrapper.pythPriceFeedId (contracts/utils/PriceFeedPythWrapper.sol#60) is used in oracle request but is modified in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) without protection. Please add access control.
OCCV3: PriceFeedPythWrapper.pyth (contracts/utils/PriceFeedPythWrapper.sol#61) is used in oracle request but is modified in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) without protection. Please add access control.
OCCV4: PriceFeedPythWrapper._callandCheckFeeds() (contracts/utils/PriceFeedPythWrapper.sol#135-158) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0xcadd1dd658439d92e26efe6154fff13b94d11494 analyzed (5 contracts with 3 detectors), 16 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 260 / 342 - 合约地址：0x44400ec733f1d4dec9fd93c2de6e8a53f6ab094e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x44400ec733f1d4dec9fd93c2de6e8a53f6ab094e-OracleFactory' running
INFO:Detectors:
OCCV9: multiple requests sent in (roundIdFeedInterAsset,answerFeedInterAsset,startedAtFeedInterAsset,updatedAtInterFeedInterAsset,answeredInRoundFeedInterAsset) = feedInterAsset.latestRoundData() (contracts/utils/ComputedPriceFeed.sol#140-154) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256).response (contracts/utils/PriceFeedPythWrapper.sol#85) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256).response (contracts/utils/PriceFeedPythWrapper.sol#85) not checked. Please check before use it.
OCCV12: response in int256(pythAnswer / int256(10 ** (_pythPriceDecimals - _decimals))) (contracts/utils/PriceFeedPythWrapper.sol#129) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer / int256(10 ** (_pythPriceDecimals - _decimals))) (contracts/utils/PriceFeedPythWrapper.sol#129) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer * int256(10 ** (_decimals - _pythPriceDecimals))) (contracts/utils/PriceFeedPythWrapper.sol#131) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(pythAnswer * int256(10 ** (_decimals - _pythPriceDecimals))) (contracts/utils/PriceFeedPythWrapper.sol#131) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp - pythRound.updatedAt > allowedTimeout (contracts/utils/PriceFeedPythWrapper.sol#155) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PriceFeedPythWrapper._callandCheckFeeds().response (contracts/utils/PriceFeedPythWrapper.sol#137) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PriceFeedPythWrapper._callandCheckFeeds().response (contracts/utils/PriceFeedPythWrapper.sol#137) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: ComputedPriceFeed.feedAsset (contracts/utils/ComputedPriceFeed.sol#40) is used in oracle request but is modified in ComputedPriceFeed.initialize(string,uint8,address,address,uint256) (contracts/utils/ComputedPriceFeed.sol#48-69) without protection. Please add access control.
OCCV3: ComputedPriceFeed.feedInterAsset (contracts/utils/ComputedPriceFeed.sol#41) is used in oracle request but is modified in ComputedPriceFeed.initialize(string,uint8,address,address,uint256) (contracts/utils/ComputedPriceFeed.sol#48-69) without protection. Please add access control.
OCCV4: ComputedPriceFeed._callandCheckFeeds() (contracts/utils/ComputedPriceFeed.sol#118-173) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: InversePriceFeed.feedAsset (contracts/utils/InversePriceFeed.sol#40) is used in oracle request but is modified in InversePriceFeed.initialize(string,uint8,address,uint256) (contracts/utils/InversePriceFeed.sol#47-63) without protection. Please add access control.
OCCV4: InversePriceFeed._callandCheckFeed() (contracts/utils/InversePriceFeed.sol#103-131) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pyth_).priceFeedExists(pythPriceFeedId_) == false (contracts/utils/PriceFeedPythWrapper.sol#80) Instantiates a contract but is not protected. Please add access control.
OCCV3: response = IPyth(pyth_).getPriceUnsafe(pythPriceFeedId_) (contracts/utils/PriceFeedPythWrapper.sol#85) Instantiates a contract but is not protected. Please add access control.
OCCV3: pyth = IPyth(pyth_) (contracts/utils/PriceFeedPythWrapper.sol#88) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceFeedPythWrapper.pythPriceFeedId (contracts/utils/PriceFeedPythWrapper.sol#60) is used in oracle request but is modified in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) without protection. Please add access control.
OCCV3: PriceFeedPythWrapper.pyth (contracts/utils/PriceFeedPythWrapper.sol#61) is used in oracle request but is modified in PriceFeedPythWrapper.initialize(string,uint8,address,bytes32,uint256) (contracts/utils/PriceFeedPythWrapper.sol#67-90) without protection. Please add access control.
OCCV4: PriceFeedPythWrapper._callandCheckFeeds() (contracts/utils/PriceFeedPythWrapper.sol#135-158) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
Reference: ...
INFO:Slither:0x44400ec733f1d4dec9fd93c2de6e8a53f6ab094e analyzed (11 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 261 / 342 - 合约地址：0x29c829792dba54d8532ad142e46cf929dc21f9a0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x29c829792dba54d8532ad142e46cf929dc21f9a0-PythPriceProvider' running
INFO:Detectors:
OCCV9: multiple requests sent in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#220-222) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#157-165) Each call should handle only one request at a time.
OCCV9: oracle request in loop in emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#215) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#220-222) Each call should handle only one request at a time.
OCCV9: oracle request in loop in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#265-278) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#157-165) not checked but returned directly. Please check before use it.
OCCV10: price of oracle response in PythPriceProvider.getPrice(address).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#215) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythPriceProvider.getPrice(address).emaPrice (contracts/priceOracle/priceproviders/PythPriceProvider.sol#215) not checked. Please check before use it.
OCCV12: response in priceMantissa /= 10 ** (priceDecimals - tokenDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#229) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in priceMantissa *= 10 ** (tokenDecimals - priceDecimals) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#231) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#220-222) not checked but returned directly. Please check before use it.
OCCV10: the value in IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#265-278) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: PythPriceProvider.validTimePeriod (contracts/priceOracle/priceproviders/PythPriceProvider.sol#26) is used in oracle request but is modified in PythPriceProvider.initialize() (contracts/priceOracle/priceproviders/PythPriceProvider.sol#64-70) without protection. Please add access control.
OCCV4: PythPriceProvider.updatePrices(bytes32[],bytes[]) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#151-167) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#157-165) Instantiates a contract but is not protected. Please add access control.
OCCV3: updateFee = IPyth(pythOracle).singleUpdateFeeInWei() * lenPriceId (contracts/priceOracle/priceproviders/PythPriceProvider.sol#158) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pythOracle).updatePriceFeeds{value: msg.value}(updateData) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#162) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getPrice(address) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#205-234) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: emaPrice = IPyth(pythOracle).getEmaPriceUnsafe(priceId) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#215) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,validTimePeriod) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#220-222) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceProvider.getExpiredPriceFeeds(address[],uint256) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#251-286) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: IPyth(pythOracle).getEmaPriceNoOlderThan(priceId,_diff(validTimePeriod,timeBeforeExpiration)) (contracts/priceOracle/priceproviders/PythPriceProvider.sol#265-278) Instantiates a contract but is not protected. Please add access control.
OCCV3: updateFee = IPyth(pythOracle).singleUpdateFeeInWei() * cntTokenNeedUpdate (contracts/priceOracle/priceproviders/PythPriceProvider.sol#285) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x29c829792dba54d8532ad142e46cf929dc21f9a0 analyzed (17 contracts with 3 detectors), 23 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 262 / 342 - 合约地址：0xc1459fcfe23d5db9ddb04935ab7a426bd398eab0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc1459fcfe23d5db9ddb04935ab7a426bd398eab0-WstEthOracleMiddleware' running
INFO:Detectors:
OCCV9: multiple requests sent in (None,price_.price,None,price_.timestamp,None) = _priceFeed.getRoundData(roundId) (src/OracleMiddleware/oracles/ChainlinkOracle.sol#109) Each call should handle only one request at a time.
Reference: ...
INFO:Slither:0xc1459fcfe23d5db9ddb04935ab7a426bd398eab0 analyzed (49 contracts with 3 detectors), 1 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 263 / 342 - 合约地址：0xd145933c7938abe3743a83affaa8af13c550e109 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd145933c7938abe3743a83affaa8af13c550e109-PriceOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV8: deprecated function invoked in price = pyth.getPrice(pairID) (contracts/PriceOracle/PriceOracle.sol#293) Do not use this function.
OCCV9: oracle request in loop in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#392) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getOraclePriceDrop(address,address).answer (contracts/PriceOracle/PriceOracle.sol#392) not checked. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#401) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getGasPrice().price (contracts/PriceOracle/PriceOracle.sol#400) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: pyth = IPyth(_pyth) (contracts/PriceOracle/PriceOracle.sol#68) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorageV2.pyth (contracts/PriceOracle/PriceOracleStorage.sol#36) is used in oracle request but is modified in PriceOracle.setPyth(address) (contracts/PriceOracle/PriceOracle.sol#67-69) without protection. Please add access control.
OCCV4: PriceOracle.updatePullOracle(bytes[][],uint256[]) (contracts/PriceOracle/PriceOracle.sol#192-209) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: PriceOracle._getExchangeRate(address,IPriceOracleStorageV2.OracleRoute) (contracts/PriceOracle/PriceOracle.sol#287-342) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) Instantiates a contract but is not protected. Please add access control.
OCCV3: WadRayMath.WAD.wdiv((uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals()))) (contracts/PriceOracle/PriceOracle.sol#328-331) Instantiates a contract but is not protected. Please add access control.
OCCV3: (uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals())) (contracts/PriceOracle/PriceOracle.sol#328-331) Instantiates a contract but is not protected. Please add access control.
OCCV4: PriceOracle.getOraclePriceDrop(address,address) (contracts/PriceOracle/PriceOracle.sol#389-395) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#392) Instantiates a contract but is not protected. Please add access control.
OCCV3: answerDecimals = AggregatorV3Interface(priceDropFeed).decimals() (contracts/PriceOracle/PriceOracle.sol#393) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorage.gasPriceFeed (contracts/PriceOracle/PriceOracleStorage.sol#17) is used in oracle request but is modified in PriceOracle.setGasPriceFeed(address) (contracts/PriceOracle/PriceOracle.sol#381-384) without protection. Please add access control.
OCCV4: PriceOracle.getGasPrice() (contracts/PriceOracle/PriceOracle.sol#400-402) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#401) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd145933c7938abe3743a83affaa8af13c550e109 analyzed (32 contracts with 3 detectors), 20 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 264 / 342 - 合约地址：0x918d94ebdd04d98fea595963de4bde53ee83fd90 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x918d94ebdd04d98fea595963de4bde53ee83fd90-PriceOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV8: deprecated function invoked in price = pyth.getPrice(pairID) (contracts/PriceOracle/PriceOracle.sol#261) Do not use this function.
OCCV9: oracle request in loop in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#293) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#293) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#360) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getOraclePriceDrop(address,address).answer (contracts/PriceOracle/PriceOracle.sol#360) not checked. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#369) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getGasPrice().price (contracts/PriceOracle/PriceOracle.sol#368) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: pyth = IPyth(_pyth) (contracts/PriceOracle/PriceOracle.sol#62) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorageV2.pyth (contracts/PriceOracle/PriceOracleStorage.sol#36) is used in oracle request but is modified in PriceOracle.setPyth(address) (contracts/PriceOracle/PriceOracle.sol#61-63) without protection. Please add access control.
OCCV4: PriceOracle.updatePullOracle(bytes[][],uint256[]) (contracts/PriceOracle/PriceOracle.sol#169-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: PriceOracle._getExchangeRate(address,IPriceOracleStorageV2.OracleRoute) (contracts/PriceOracle/PriceOracle.sol#255-310) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#293) Instantiates a contract but is not protected. Please add access control.
OCCV3: WadRayMath.WAD.wdiv((uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals()))) (contracts/PriceOracle/PriceOracle.sol#296-299) Instantiates a contract but is not protected. Please add access control.
OCCV3: (uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals())) (contracts/PriceOracle/PriceOracle.sol#296-299) Instantiates a contract but is not protected. Please add access control.
OCCV4: PriceOracle.getOraclePriceDrop(address,address) (contracts/PriceOracle/PriceOracle.sol#357-363) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#360) Instantiates a contract but is not protected. Please add access control.
OCCV3: answerDecimals = AggregatorV3Interface(priceDropFeed).decimals() (contracts/PriceOracle/PriceOracle.sol#361) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorage.gasPriceFeed (contracts/PriceOracle/PriceOracleStorage.sol#17) is used in oracle request but is modified in PriceOracle.setGasPriceFeed(address) (contracts/PriceOracle/PriceOracle.sol#349-352) without protection. Please add access control.
OCCV4: PriceOracle.getGasPrice() (contracts/PriceOracle/PriceOracle.sol#368-370) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#369) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x918d94ebdd04d98fea595963de4bde53ee83fd90 analyzed (32 contracts with 3 detectors), 20 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 265 / 342 - 合约地址：0xa92ec1ddb97de7b58714324cf8d5c3427522a70a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa92ec1ddb97de7b58714324cf8d5c3427522a70a-ERC4626GenericEulerLevSwapper' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> contracts/swapper/LevSwapper/euler/BaseLevSwapperEuler.sol:73:9:
   |
73 |         address outTokenRecipient,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Slither:0xa92ec1ddb97de7b58714324cf8d5c3427522a70a analyzed (22 contracts with 3 detectors), 0 result(s) found

[Return code]: 0

================================================================================

--- 分析结果 266 / 342 - 合约地址：0xa8f3a00ecace7e31625a435817d5475b6d340f1a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa8f3a00ecace7e31625a435817d5475b6d340f1a-PriceOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV8: deprecated function invoked in price = pyth.getPrice(pairID) (contracts/PriceOracle/PriceOracle.sol#293) Do not use this function.
OCCV9: oracle request in loop in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#392) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getOraclePriceDrop(address,address).answer (contracts/PriceOracle/PriceOracle.sol#392) not checked. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#401) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getGasPrice().price (contracts/PriceOracle/PriceOracle.sol#400) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: pyth = IPyth(_pyth) (contracts/PriceOracle/PriceOracle.sol#68) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorageV2.pyth (contracts/PriceOracle/PriceOracleStorage.sol#36) is used in oracle request but is modified in PriceOracle.setPyth(address) (contracts/PriceOracle/PriceOracle.sol#67-69) without protection. Please add access control.
OCCV4: PriceOracle.updatePullOracle(bytes[][],uint256[]) (contracts/PriceOracle/PriceOracle.sol#192-209) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: PriceOracle._getExchangeRate(address,IPriceOracleStorageV2.OracleRoute) (contracts/PriceOracle/PriceOracle.sol#287-342) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#325) Instantiates a contract but is not protected. Please add access control.
OCCV3: WadRayMath.WAD.wdiv((uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals()))) (contracts/PriceOracle/PriceOracle.sol#328-331) Instantiates a contract but is not protected. Please add access control.
OCCV3: (uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals())) (contracts/PriceOracle/PriceOracle.sol#328-331) Instantiates a contract but is not protected. Please add access control.
OCCV4: PriceOracle.getOraclePriceDrop(address,address) (contracts/PriceOracle/PriceOracle.sol#389-395) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#392) Instantiates a contract but is not protected. Please add access control.
OCCV3: answerDecimals = AggregatorV3Interface(priceDropFeed).decimals() (contracts/PriceOracle/PriceOracle.sol#393) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorage.gasPriceFeed (contracts/PriceOracle/PriceOracleStorage.sol#17) is used in oracle request but is modified in PriceOracle.setGasPriceFeed(address) (contracts/PriceOracle/PriceOracle.sol#381-384) without protection. Please add access control.
OCCV4: PriceOracle.getGasPrice() (contracts/PriceOracle/PriceOracle.sol#400-402) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#401) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xa8f3a00ecace7e31625a435817d5475b6d340f1a analyzed (32 contracts with 3 detectors), 20 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 267 / 342 - 合约地址：0xd43052e7a4fe8bc7ec2bd83acef15118311dcfff ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd43052e7a4fe8bc7ec2bd83acef15118311dcfff-PriceOracle' running
Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IArbGasInfo.sol


Warning: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> contracts/interfaces/IOVM_GasPriceOracle.sol



INFO:Detectors:
OCCV9: oracle request in loop in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#428) Each call should handle only one request at a time.
OCCV8: deprecated function invoked in price_scope_3 = ICurveBaseOracle(curveOracle).getPrice(_assetA,oracleData) (contracts/PriceOracle/PriceOracle.sol#483-486) Do not use this function.
OCCV8: deprecated function invoked in price = pyth.getPrice(pairID) (contracts/PriceOracle/PriceOracle.sol#396) Do not use this function.
OCCV8: deprecated function invoked in price_scope_3 = ICurveBaseOracle(curveOracle).getPrice(_oracleRoute.tokenTo,oracleData) (contracts/PriceOracle/PriceOracle.sol#483-486) Do not use this function.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#428) not vaildated. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#579) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getOraclePriceDrop(address,address).answer (contracts/PriceOracle/PriceOracle.sol#579) not checked. Please check before use it.
OCCV10: answer and startedAt of data feed in (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#588) not vaildated. Please check before use it.
OCCV10: oracle response PriceOracle.getGasPrice().price (contracts/PriceOracle/PriceOracle.sol#587) not checked. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV3: pyth = IPyth(_pyth) (contracts/PriceOracle/PriceOracle.sol#73) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorageV2.pyth (contracts/PriceOracle/PriceOracleStorage.sol#39) is used in oracle request but is modified in PriceOracle.setPyth(address) (contracts/PriceOracle/PriceOracle.sol#72-74) without protection. Please add access control.
OCCV4: PriceOracle.updatePullOracle(bytes[][],uint256[]) (contracts/PriceOracle/PriceOracle.sol#260-281) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV4: PriceOracle._getExchangeRate(address,IPriceOracleStorageV2.OracleRoute) (contracts/PriceOracle/PriceOracle.sol#390-529) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#428) Instantiates a contract but is not protected. Please add access control.
OCCV3: WadRayMath.WAD.wdiv((uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals()))) (contracts/PriceOracle/PriceOracle.sol#431-434) Instantiates a contract but is not protected. Please add access control.
OCCV3: (uint256(answer) * 10 ** (18 - AggregatorV3Interface(priceFeed).decimals())) (contracts/PriceOracle/PriceOracle.sol#431-434) Instantiates a contract but is not protected. Please add access control.
OCCV4: PriceOracle.getOraclePriceDrop(address,address) (contracts/PriceOracle/PriceOracle.sol#576-582) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,answer,None,None,None) = AggregatorV3Interface(priceDropFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#579) Instantiates a contract but is not protected. Please add access control.
OCCV3: answerDecimals = AggregatorV3Interface(priceDropFeed).decimals() (contracts/PriceOracle/PriceOracle.sol#580) Instantiates a contract but is not protected. Please add access control.
OCCV3: PriceOracleStorage.gasPriceFeed (contracts/PriceOracle/PriceOracleStorage.sol#20) is used in oracle request but is modified in PriceOracle.setGasPriceFeed(address) (contracts/PriceOracle/PriceOracle.sol#568-571) without protection. Please add access control.
OCCV4: PriceOracle.getGasPrice() (contracts/PriceOracle/PriceOracle.sol#587-589) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV3: (None,price,None,None,None) = AggregatorV3Interface(gasPriceFeed).latestRoundData() (contracts/PriceOracle/PriceOracle.sol#588) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd43052e7a4fe8bc7ec2bd83acef15118311dcfff analyzed (43 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 268 / 342 - 合约地址：0x2d622cadd828ee072255287a941c0b65c5e2714b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2d622cadd828ee072255287a941c0b65c5e2714b-PriceFeedCompressor' running
INFO:Detectors:
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#277-279) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (lib/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#74) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PythPriceFeed.latestRoundData().priceData (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) not checked. Please check before use it.
OCCV12: response in uint256(priceData.conf) * PERCENTAGE_FACTOR > uint256(int256(priceData.price)) * maxConfToPriceRatio (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = price * DECIMALS / pythDecimals (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#247-280) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#247-280)  sends oracle request but PriceFeedCompressor (contracts/compressors/PriceFeedCompressor.sol#42-281) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: lastPublishTimestamp = IPyth(pyth).latestPriceInfoPublishTime(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#131) Instantiates a contract but is not protected. Please add access control.
OCCV3: fee = IPyth(pyth).getUpdateFee(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#140) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pyth).updatePriceFeeds{value: fee}(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#141) Instantiates a contract but is not protected. Please add access control.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#143) Instantiates a contract but is not protected. Please add access control.
OCCV4: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195)  sends oracle request but RedstonePriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#24-243) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2d622cadd828ee072255287a941c0b65c5e2714b analyzed (58 contracts with 3 detectors), 18 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 269 / 342 - 合约地址：0x2f5088c2f0aeed2c44c40c989442f00ec31c6e61 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2f5088c2f0aeed2c44c40c989442f00ec31c6e61-PythPriceFeedSerializer' running
INFO:Detectors:
OCCV10: publishTime of oracle response in PythPriceFeed.latestRoundData().priceData (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) not checked. Please check before use it.
OCCV12: response in uint256(priceData.conf) * PERCENTAGE_FACTOR > uint256(int256(priceData.price)) * maxConfToPriceRatio (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = price * DECIMALS / pythDecimals (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: lastPublishTimestamp = IPyth(pyth).latestPriceInfoPublishTime(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#131) Instantiates a contract but is not protected. Please add access control.
OCCV3: fee = IPyth(pyth).getUpdateFee(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#140) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pyth).updatePriceFeeds{value: fee}(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#141) Instantiates a contract but is not protected. Please add access control.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#143) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x2f5088c2f0aeed2c44c40c989442f00ec31c6e61 analyzed (10 contracts with 3 detectors), 12 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 270 / 342 - 合约地址：0x48e5b250ddac3cd14d37f3c5f3b16fec2cac64f5 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x48e5b250ddac3cd14d37f3c5f3b16fec2cac64f5-MarketCompressor' running
ERROR:ConvertToIR:Function not found getCreditManagers
ERROR:ContractSolcParsing:Impossible to generate IR for MarketCompressor.getMarketData (contracts/compressors/MarketCompressor.sol#135-165):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getPriceOracle
ERROR:ContractSolcParsing:Impossible to generate IR for MarketCompressor._getPriceOracle (contracts/compressors/MarketCompressor.sol#178-181):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getLossPolicy
ERROR:ContractSolcParsing:Impossible to generate IR for MarketCompressor._getLossPolicy (contracts/compressors/MarketCompressor.sol#183-186):
 'NoneType' object has no attribute 'type'
INFO:Detectors:
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (lib/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#74) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#277-279) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PythPriceFeed.latestRoundData().priceData (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) not checked. Please check before use it.
OCCV12: response in uint256(priceData.conf) * PERCENTAGE_FACTOR > uint256(int256(priceData.price)) * maxConfToPriceRatio (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = price * DECIMALS / pythDecimals (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#247-280) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#247-280)  sends oracle request but PriceFeedCompressor (contracts/compressors/PriceFeedCompressor.sol#42-281) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: lastPublishTimestamp = IPyth(pyth).latestPriceInfoPublishTime(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#131) Instantiates a contract but is not protected. Please add access control.
OCCV3: fee = IPyth(pyth).getUpdateFee(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#140) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pyth).updatePriceFeeds{value: fee}(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#141) Instantiates a contract but is not protected. Please add access control.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#143) Instantiates a contract but is not protected. Please add access control.
OCCV4: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195)  sends oracle request but RedstonePriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#24-243) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x48e5b250ddac3cd14d37f3c5f3b16fec2cac64f5 analyzed (141 contracts with 3 detectors), 18 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 271 / 342 - 合约地址：0xe56bd00690495df904abc3f7223438a9681f55a4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe56bd00690495df904abc3f7223438a9681f55a4-PriceFeedCompressor' running
ERROR:ConvertToIR:Function not found getCreditManagers
ERROR:ContractSolcParsing:Impossible to generate IR for BaseCompressor._getCreditManagers (contracts/compressors/BaseCompressor.sol#93-123):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getPriceOracle
ERROR:ContractSolcParsing:Impossible to generate IR for BaseCompressor._getPriceOracle (contracts/compressors/BaseCompressor.sol#144-147):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getLossPolicy
ERROR:ContractSolcParsing:Impossible to generate IR for BaseCompressor._getLossPolicy (contracts/compressors/BaseCompressor.sol#149-152):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getCreditManagers
ERROR:ContractSolcParsing:Impossible to generate IR for PriceFeedCompressor._getCreditManagers (contracts/compressors/BaseCompressor.sol#93-123):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getPriceOracle
ERROR:ContractSolcParsing:Impossible to generate IR for PriceFeedCompressor._getPriceOracle (contracts/compressors/BaseCompressor.sol#144-147):
 'NoneType' object has no attribute 'type'
ERROR:ConvertToIR:Function not found getLossPolicy
ERROR:ContractSolcParsing:Impossible to generate IR for PriceFeedCompressor._getLossPolicy (contracts/compressors/BaseCompressor.sol#149-152):
 'NoneType' object has no attribute 'type'
INFO:Detectors:
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#294-296) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (lib/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#84) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: publishTime of oracle response in PythPriceFeed.latestRoundData().priceData (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) not checked. Please check before use it.
OCCV12: response in uint256(priceData.conf) * PERCENTAGE_FACTOR > uint256(int256(priceData.price)) * maxConfToPriceRatio (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = price * DECIMALS / pythDecimals (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#264-297) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PriceFeedCompressor._getPriceFeedTreeNode(address) (contracts/compressors/PriceFeedCompressor.sol#264-297)  sends oracle request but PriceFeedCompressor (contracts/compressors/PriceFeedCompressor.sol#33-311) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.latestRoundData() (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#110-122)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#111) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#128-150)  sends oracle request but PythPriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: lastPublishTimestamp = IPyth(pyth).latestPriceInfoPublishTime(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#131) Instantiates a contract but is not protected. Please add access control.
OCCV3: fee = IPyth(pyth).getUpdateFee(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#140) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pyth).updatePriceFeeds{value: fee}(updateData) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#141) Instantiates a contract but is not protected. Please add access control.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/PythPriceFeed.sol#143) Instantiates a contract but is not protected. Please add access control.
OCCV4: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: RedstonePriceFeed.updatePrice(bytes) (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#173-195)  sends oracle request but RedstonePriceFeed (lib/@gearbox-protocol/oracles-v3/contracts/oracles/updatable/RedstonePriceFeed.sol#24-243) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe56bd00690495df904abc3f7223438a9681f55a4 analyzed (79 contracts with 3 detectors), 18 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 272 / 342 - 合约地址：0xbbe4708ec565972c2f843ce0a770ea407afefbd6 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbbe4708ec565972c2f843ce0a770ea407afefbd6-PythPriceFeed' running
INFO:Detectors:
OCCV10: publishTime of oracle response in PythPriceFeed.latestRoundData().priceData (contracts/oracles/updatable/PythPriceFeed.sol#111) not checked. Please check before use it.
OCCV12: response in uint256(priceData.conf) * PERCENTAGE_FACTOR > uint256(int256(priceData.price)) * maxConfToPriceRatio (contracts/oracles/updatable/PythPriceFeed.sol#113) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = price * DECIMALS / pythDecimals (contracts/oracles/updatable/PythPriceFeed.sol#161) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythPriceFeed.latestRoundData() (contracts/oracles/updatable/PythPriceFeed.sol#110-122) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.latestRoundData() (contracts/oracles/updatable/PythPriceFeed.sol#110-122)  sends oracle request but PythPriceFeed (contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (contracts/oracles/updatable/PythPriceFeed.sol#111) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythPriceFeed.updatePrice(bytes) (contracts/oracles/updatable/PythPriceFeed.sol#128-150) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythPriceFeed.updatePrice(bytes) (contracts/oracles/updatable/PythPriceFeed.sol#128-150)  sends oracle request but PythPriceFeed (contracts/oracles/updatable/PythPriceFeed.sol#26-181) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: lastPublishTimestamp = IPyth(pyth).latestPriceInfoPublishTime(priceFeedId) (contracts/oracles/updatable/PythPriceFeed.sol#131) Instantiates a contract but is not protected. Please add access control.
OCCV3: fee = IPyth(pyth).getUpdateFee(updateData) (contracts/oracles/updatable/PythPriceFeed.sol#140) Instantiates a contract but is not protected. Please add access control.
OCCV3: IPyth(pyth).updatePriceFeeds{value: fee}(updateData) (contracts/oracles/updatable/PythPriceFeed.sol#141) Instantiates a contract but is not protected. Please add access control.
OCCV3: priceData = IPyth(pyth).getPriceUnsafe(priceFeedId) (contracts/oracles/updatable/PythPriceFeed.sol#143) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xbbe4708ec565972c2f843ce0a770ea407afefbd6 analyzed (8 contracts with 3 detectors), 12 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 273 / 342 - 合约地址：0xe26c1864b5d3cc2e541e19c3473caed5d34bc3bf ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe26c1864b5d3cc2e541e19c3473caed5d34bc3bf-PriceFeedCompressor' running
INFO:Detectors:
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#220-222) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (node_modules/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#68) Each call should handle only one request at a time.
Reference: ...
ERROR:Detectors:The data fields of (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() is incorrect.
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 107, in process_all
    ) = process_single(compilation, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 87, in process_single
    return _process(slither, detector_classes, printer_classes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 137, in _process
    detector_resultss = slither.run_detectors()
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/slither.py", line 292, in run_detectors
    results = [d.detect() for d in self._detectors]
               ^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/abstract_detector.py", line 203, in detect
    for r in [output.data for output in self._detect()]:
                                        ^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 178, in _detect
    self._detect_chainlink_dataFeed()
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 209, in _detect_chainlink_dataFeed
    self._check_chainlink_round_data(hCall.node)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 228, in _check_chainlink_round_data
    v2, v3, v5 = responses[1], responses[2], responses[4]
                               ~~~~~~~~~^^^
IndexError: list index out of range

[Return code]: 1

================================================================================

--- 分析结果 274 / 342 - 合约地址：0x13d529e2dc67a6305580388a7c57de53fbefc951 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x13d529e2dc67a6305580388a7c57de53fbefc951-PriceFeedCompressor' running
INFO:Detectors:
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (node_modules/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#68) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#220-222) Each call should handle only one request at a time.
Reference: ...
ERROR:Detectors:The data fields of (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() is incorrect.
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 107, in process_all
    ) = process_single(compilation, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 87, in process_single
    return _process(slither, detector_classes, printer_classes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 137, in _process
    detector_resultss = slither.run_detectors()
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/slither.py", line 292, in run_detectors
    results = [d.detect() for d in self._detectors]
               ^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/abstract_detector.py", line 203, in detect
    for r in [output.data for output in self._detect()]:
                                        ^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 178, in _detect
    self._detect_chainlink_dataFeed()
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 209, in _detect_chainlink_dataFeed
    self._check_chainlink_round_data(hCall.node)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 228, in _check_chainlink_round_data
    v2, v3, v5 = responses[1], responses[2], responses[4]
                               ~~~~~~~~~^^^
IndexError: list index out of range

[Return code]: 1

================================================================================

--- 分析结果 275 / 342 - 合约地址：0xec0445805c1fd40d82b05bad821b158fbd9b033d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xec0445805c1fd40d82b05bad821b158fbd9b033d-PriceFeedCompressor' running
INFO:Detectors:
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (node_modules/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#68) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#244-246) Each call should handle only one request at a time.
Reference: ...
ERROR:Detectors:The data fields of (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() is incorrect.
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 107, in process_all
    ) = process_single(compilation, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 87, in process_single
    return _process(slither, detector_classes, printer_classes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 137, in _process
    detector_resultss = slither.run_detectors()
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/slither.py", line 292, in run_detectors
    results = [d.detect() for d in self._detectors]
               ^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/abstract_detector.py", line 203, in detect
    for r in [output.data for output in self._detect()]:
                                        ^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 178, in _detect
    self._detect_chainlink_dataFeed()
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 209, in _detect_chainlink_dataFeed
    self._check_chainlink_round_data(hCall.node)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 228, in _check_chainlink_round_data
    v2, v3, v5 = responses[1], responses[2], responses[4]
                               ~~~~~~~~~^^^
IndexError: list index out of range

[Return code]: 1

================================================================================

--- 分析结果 276 / 342 - 合约地址：0xa12059746f0673eb3a83b1192c37f0b07a0faab4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa12059746f0673eb3a83b1192c37f0b07a0faab4-OracleRouter' running
Warning: Warning: Return value of low-level calls not used.
  --> src/OracleRouter.sol:82:9:
   |
82 |         msg.sender.call{ value: msg.value - fee }("");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



INFO:Detectors:
OCCV12: response in block.timestamp <= priceData.publishTime + feed.heartbeat (src/OracleRouter.sol#228-230) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: OracleRouter.updateUnderlyingPrices(bytes[]) (src/OracleRouter.sol#77-84) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OracleRouter.updateUnderlyingPrices(bytes[]) (src/OracleRouter.sol#77-84)  sends oracle request but OracleRouter (src/OracleRouter.sol#13-232) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(oracleProviders[OracleProviderType.Pyth].oracleProviderAddress) (src/OracleRouter.sol#78) Instantiates a contract but is not protected. Please add access control.
OCCV4: OracleRouter._getChainlinkPrice(OracleRouter.PriceFeedData) (src/OracleRouter.sol#195-210) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OracleRouter._getChainlinkPrice(OracleRouter.PriceFeedData) (src/OracleRouter.sol#195-210)  sends oracle request but OracleRouter (src/OracleRouter.sol#13-232) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: OracleRouter._getPythPrice(OracleRouter.PriceFeedData) (src/OracleRouter.sol#216-231) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: OracleRouter._getPythPrice(OracleRouter.PriceFeedData) (src/OracleRouter.sol#216-231)  sends oracle request but OracleRouter (src/OracleRouter.sol#13-232) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(oracleProviders[OracleProviderType.Pyth].oracleProviderAddress) (src/OracleRouter.sol#217) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xa12059746f0673eb3a83b1192c37f0b07a0faab4 analyzed (11 contracts with 3 detectors), 9 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 277 / 342 - 合约地址：0xe28abf7028c059c4ebbe726aea7c2ef3f429b02d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe28abf7028c059c4ebbe726aea7c2ef3f429b02d-PriceFeedCompressor' running
INFO:Detectors:
OCCV9: oracle request in loop in (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() (contracts/compressors/PriceFeedCompressor.sol#245-247) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = IPriceFeed(priceFeed).latestRoundData() (node_modules/@gearbox-protocol/core-v3/contracts/traits/PriceFeedValidationTrait.sol#68) Each call should handle only one request at a time.
Reference: ...
ERROR:Detectors:The data fields of (price,updatedAt) = IPriceFeed(priceFeed).latestRoundData() is incorrect.
Traceback (most recent call last):
  File "/home/ziming/.local/bin/slither", line 8, in <module>
    sys.exit(main())
             ^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 776, in main
    main_impl(all_detector_classes=detectors, all_printer_classes=printers)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 882, in main_impl
    ) = process_all(filename, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 107, in process_all
    ) = process_single(compilation, args, detector_classes, printer_classes)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 87, in process_single
    return _process(slither, detector_classes, printer_classes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/__main__.py", line 137, in _process
    detector_resultss = slither.run_detectors()
                        ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/slither.py", line 292, in run_detectors
    results = [d.detect() for d in self._detectors]
               ^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/abstract_detector.py", line 203, in detect
    for r in [output.data for output in self._detect()]:
                                        ^^^^^^^^^^^^^^
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 178, in _detect
    self._detect_chainlink_dataFeed()
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 209, in _detect_chainlink_dataFeed
    self._check_chainlink_round_data(hCall.node)
  File "/home/ziming/.local/lib/python3.12/site-packages/slither/detectors/functions/oracle_data_check.py", line 228, in _check_chainlink_round_data
    v2, v3, v5 = responses[1], responses[2], responses[4]
                               ~~~~~~~~~^^^
IndexError: list index out of range

[Return code]: 1

================================================================================

--- 分析结果 278 / 342 - 合约地址：0xec5b37ce14e6cad1804a185cbd462bdc697082d3 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xec5b37ce14e6cad1804a185cbd462bdc697082d3-PythAggregator' running
INFO:Detectors:
OCCV10: price of oracle response in PythAggregator.constructor(IPyth,bytes32,uint256).priceInfo (src/oracles/aggregators/PythAggregator.sol#22) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythAggregator.constructor(IPyth,bytes32,uint256).priceInfo (src/oracles/aggregators/PythAggregator.sol#22) not checked. Please check before use it.
OCCV12: response in priceInfo.expo > 0 || uint8(uint32(- priceInfo.expo)) != _decimals (src/oracles/aggregators/PythAggregator.sol#42) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV5: PythAggregator.constructor(IPyth,bytes32,uint256) (src/oracles/aggregators/PythAggregator.sol#17-29)  sends oracle request but PythAggregator (src/oracles/aggregators/PythAggregator.sol#7-52) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythAggregator.latestAnswer() (src/oracles/aggregators/PythAggregator.sol#35-47) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythAggregator.latestAnswer() (src/oracles/aggregators/PythAggregator.sol#35-47)  sends oracle request but PythAggregator (src/oracles/aggregators/PythAggregator.sol#7-52) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xec5b37ce14e6cad1804a185cbd462bdc697082d3 analyzed (4 contracts with 3 detectors), 6 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 279 / 342 - 合约地址：0xf82332ff36decc79e0b2e4252b96348c1a04997d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf82332ff36decc79e0b2e4252b96348c1a04997d-PythPriceFeed' running
INFO:Detectors:
OCCV4: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18)  sends oracle request but FixedAssetReader (src/NFTMetadata/utils/FixedAssets.sol#6-27) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xf82332ff36decc79e0b2e4252b96348c1a04997d analyzed (52 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 280 / 342 - 合约地址：0xfcd06dbf74d99fe57e16c058d3419be84e1dd115 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfcd06dbf74d99fe57e16c058d3419be84e1dd115-PythERC7412Wrapper' running
INFO:Detectors:
OCCV10: price of oracle response in PythERC7412Wrapper.getLatestPrice(bytes32,uint256).pythData (contracts/PythERC7412Wrapper.sol#70) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + expo (contracts/PythERC7412Wrapper.sol#176) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in x * 10 ** factor (contracts/PythERC7412Wrapper.sol#157) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in int256(_downscale(uint64(price),uint256(- factor))) (contracts/PythERC7412Wrapper.sol#177-178) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in x / 10 ** factor (contracts/PythERC7412Wrapper.sol#169) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in block.timestamp <= stalenessTolerance + pythData.publishTime (contracts/PythERC7412Wrapper.sol#72) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV4: PythERC7412Wrapper.getLatestPrice(bytes32,uint256) (contracts/PythERC7412Wrapper.sol#68-88) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythERC7412Wrapper.getLatestPrice(bytes32,uint256) (contracts/PythERC7412Wrapper.sol#68-88)  sends oracle request but PythERC7412Wrapper (contracts/PythERC7412Wrapper.sol#26-180) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/PythERC7412Wrapper.sol#69) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythERC7412Wrapper.fulfillOracleQuery(bytes) (contracts/PythERC7412Wrapper.sol#90-144) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythERC7412Wrapper.fulfillOracleQuery(bytes) (contracts/PythERC7412Wrapper.sol#90-144)  sends oracle request but PythERC7412Wrapper (contracts/PythERC7412Wrapper.sol#26-180) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/PythERC7412Wrapper.sol#91) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xfcd06dbf74d99fe57e16c058d3419be84e1dd115 analyzed (5 contracts with 3 detectors), 12 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 281 / 342 - 合约地址：0xed300fbf1e21da54610ac1a7870fdbf7035186d1 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xed300fbf1e21da54610ac1a7870fdbf7035186d1-PythPriceFeed' running
INFO:Detectors:
OCCV4: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18)  sends oracle request but FixedAssetReader (src/NFTMetadata/utils/FixedAssets.sol#6-27) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xed300fbf1e21da54610ac1a7870fdbf7035186d1 analyzed (51 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 282 / 342 - 合约地址：0xac74c6194fd54ee3e09cb20c08ddb1ce546dcfa9 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xac74c6194fd54ee3e09cb20c08ddb1ce546dcfa9-PythPriceFeed' running
INFO:Detectors:
OCCV4: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FixedAssetReader.readAsset(bytes4) (src/NFTMetadata/utils/FixedAssets.sol#16-18)  sends oracle request but FixedAssetReader (src/NFTMetadata/utils/FixedAssets.sol#6-27) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xac74c6194fd54ee3e09cb20c08ddb1ce546dcfa9 analyzed (51 contracts with 3 detectors), 2 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 283 / 342 - 合约地址：0x9b19470324c1a99a5eb6d04de5f369f9c5937a65 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9b19470324c1a99a5eb6d04de5f369f9c5937a65-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#49-63) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#23-25) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#53) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#49-63) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#23-25) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#23-25) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/PythNode.sol#27) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/PythNode.sol#28-30) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#53) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#53) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-35)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#37-67) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#37-67)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.validate(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#69-95) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.validate(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#69-95)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-96) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-33) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-33)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-57) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#22) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.validate(NodeDefinition.Data) (contracts/nodes/PythNode.sol#35-56) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.validate(NodeDefinition.Data) (contracts/nodes/PythNode.sol#35-56)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-57) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#50) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x9b19470324c1a99a5eb6d04de5f369f9c5937a65 analyzed (37 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 284 / 342 - 合约地址：0x1fc20fcebe06097860f64948626681bb82a04ab7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1fc20fcebe06097860f64948626681bb82a04ab7-NodeModule' running
Warning: Warning: Function state mutability can be restricted to pure
  --> contracts/modules/NodeModule.sol:73:5:
   |
73 |     function _getNode(bytes32 nodeId) internal view returns (NodeDefinition.Data storage node) {
   |     ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to pure
   --> contracts/modules/NodeModule.sol:123:5:
    |
123 |     function _isNodeRegistered(bytes32 nodeId) internal view returns (bool nodeRegistered) {
    |     ^ (Relevant source part starts here and spans across multiple lines).



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x1fc20fcebe06097860f64948626681bb82a04ab7 analyzed (36 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 285 / 342 - 合约地址：0xcdf5f20d2df3bc5b4432fb872e7ee262e31a0c74 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xcdf5f20d2df3bc5b4432fb872e7ee262e31a0c74-NodeModule' running
Warning: Warning: Function state mutability can be restricted to pure
  --> contracts/modules/NodeModule.sol:73:5:
   |
73 |     function _getNode(bytes32 nodeId) internal view returns (NodeDefinition.Data storage node) {
   |     ^ (Relevant source part starts here and spans across multiple lines).


Warning: Warning: Function state mutability can be restricted to pure
   --> contracts/modules/NodeModule.sol:130:5:
    |
130 |     function _isNodeRegistered(bytes32 nodeId) internal view returns (bool nodeRegistered) {
    |     ^ (Relevant source part starts here and spans across multiple lines).



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xcdf5f20d2df3bc5b4432fb872e7ee262e31a0c74 analyzed (36 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 286 / 342 - 合约地址：0x2c5101ac37147a58d4fecbb45179bc3536253c45 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2c5101ac37147a58d4fecbb45179bc3536253c45-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x2c5101ac37147a58d4fecbb45179bc3536253c45 analyzed (36 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 287 / 342 - 合约地址：0x6e7209c0db7110fc5606baac492ce4dea2efed8e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6e7209c0db7110fc5606baac492ce4dea2efed8e-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x6e7209c0db7110fc5606baac492ce4dea2efed8e analyzed (37 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 288 / 342 - 合约地址：0xd90159162a87cfeb2c56c98ba9c7e6aa50cb4456 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd90159162a87cfeb2c56c98ba9c7e6aa50cb4456-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd90159162a87cfeb2c56c98ba9c7e6aa50cb4456 analyzed (39 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 289 / 342 - 合约地址：0x679c5ac3590edeabe413a2209b38f606c115dba7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x679c5ac3590edeabe413a2209b38f606c115dba7-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x679c5ac3590edeabe413a2209b38f606c115dba7 analyzed (75 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 290 / 342 - 合约地址：0x3ef1d9c196d629f5306cb9bd3cc5fb5fdd7f2170 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3ef1d9c196d629f5306cb9bd3cc5fb5fdd7f2170-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x3ef1d9c196d629f5306cb9bd3cc5fb5fdd7f2170 analyzed (69 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 291 / 342 - 合约地址：0x903a7908b851bab25e5d1f956723a5bb1a2af773 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x903a7908b851bab25e5d1f956723a5bb1a2af773-CollateralConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x903a7908b851bab25e5d1f956723a5bb1a2af773 analyzed (45 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 292 / 342 - 合约地址：0xbd758b98eb94ca6d70b12be429056cbe317cfe94 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbd758b98eb94ca6d70b12be429056cbe317cfe94-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xbd758b98eb94ca6d70b12be429056cbe317cfe94 analyzed (70 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 293 / 342 - 合约地址：0xadce03921530ac81f2bef116c3073ec587c95079 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xadce03921530ac81f2bef116c3073ec587c95079-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xadce03921530ac81f2bef116c3073ec587c95079 analyzed (73 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 294 / 342 - 合约地址：0x67eafdafa277aa691bcf06164199be6505f178e5 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x67eafdafa277aa691bcf06164199be6505f178e5-MarketCollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x67eafdafa277aa691bcf06164199be6505f178e5 analyzed (54 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 295 / 342 - 合约地址：0x095c6d91ca46c69ae1bd052315d5b8c88782d460 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x095c6d91ca46c69ae1bd052315d5b8c88782d460-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x095c6d91ca46c69ae1bd052315d5b8c88782d460 analyzed (74 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 296 / 342 - 合约地址：0x631ff7dadf3043eaf31a1be1b4166a22c2ae8549 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x631ff7dadf3043eaf31a1be1b4166a22c2ae8549-MarketManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x631ff7dadf3043eaf31a1be1b4166a22c2ae8549 analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 297 / 342 - 合约地址：0xa59cea6e24a8829d0cec993830b2b0fbc892b3e2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xa59cea6e24a8829d0cec993830b2b0fbc892b3e2-PoolConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xa59cea6e24a8829d0cec993830b2b0fbc892b3e2 analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 298 / 342 - 合约地址：0x187fec20126e6781b8c2fd2a5f53c5daa744b889 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x187fec20126e6781b8c2fd2a5f53c5daa744b889-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x187fec20126e6781b8c2fd2a5f53c5daa744b889 analyzed (68 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 299 / 342 - 合约地址：0xf62b01f17ebfd8fd1040bf8b984523a69f0a414f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xf62b01f17ebfd8fd1040bf8b984523a69f0a414f-PoolModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xf62b01f17ebfd8fd1040bf8b984523a69f0a414f analyzed (65 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 300 / 342 - 合约地址：0x2b596ae44a5d99e9fd42a94ccbb0d28fa460171b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2b596ae44a5d99e9fd42a94ccbb0d28fa460171b-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2b596ae44a5d99e9fd42a94ccbb0d28fa460171b analyzed (68 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 301 / 342 - 合约地址：0x3a6fb39dc244576f994132099997f122a9473f00 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3a6fb39dc244576f994132099997f122a9473f00-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x3a6fb39dc244576f994132099997f122a9473f00 analyzed (39 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 302 / 342 - 合约地址：0x39ab721a0a843e6184cf92ccbc96a133f3d1bb68 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x39ab721a0a843e6184cf92ccbc96a133f3d1bb68-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x39ab721a0a843e6184cf92ccbc96a133f3d1bb68 analyzed (76 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 303 / 342 - 合约地址：0xca2260390a2221e6c3e9c33323dd0fde695b05fd ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xca2260390a2221e6c3e9c33323dd0fde695b05fd-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xca2260390a2221e6c3e9c33323dd0fde695b05fd analyzed (70 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 304 / 342 - 合约地址：0xd1d4a8952cbb95a4b600240952ad52150aec54e0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd1d4a8952cbb95a4b600240952ad52150aec54e0-CollateralConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xd1d4a8952cbb95a4b600240952ad52150aec54e0 analyzed (45 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 305 / 342 - 合约地址：0x5c80aaab58f1d146e287af5d5e11beb6cdf8d46c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5c80aaab58f1d146e287af5d5e11beb6cdf8d46c-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x5c80aaab58f1d146e287af5d5e11beb6cdf8d46c analyzed (70 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 306 / 342 - 合约地址：0x63ebc8ed63b7de482844ede10c5ab04f50ecf36f ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x63ebc8ed63b7de482844ede10c5ab04f50ecf36f-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x63ebc8ed63b7de482844ede10c5ab04f50ecf36f analyzed (74 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 307 / 342 - 合约地址：0x32dcb1eb44953737cae2b8ff9984359a2636ffcc ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x32dcb1eb44953737cae2b8ff9984359a2636ffcc-PoolConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x32dcb1eb44953737cae2b8ff9984359a2636ffcc analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 308 / 342 - 合约地址：0x9d2e092fd18f3bf7dc6a11124ab8365116fc46e2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9d2e092fd18f3bf7dc6a11124ab8365116fc46e2-MarketCollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x9d2e092fd18f3bf7dc6a11124ab8365116fc46e2 analyzed (54 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 309 / 342 - 合约地址：0xb2505d6ea571639c9902ecca70a1f93a0d321e39 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xb2505d6ea571639c9902ecca70a1f93a0d321e39-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xb2505d6ea571639c9902ecca70a1f93a0d321e39 analyzed (75 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 310 / 342 - 合约地址：0x24122032cd490f67180fea525edfcd1e373a8cd0 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x24122032cd490f67180fea525edfcd1e373a8cd0-MarketManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x24122032cd490f67180fea525edfcd1e373a8cd0 analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 311 / 342 - 合约地址：0x8b6603d48d525bd4c118a803044e1c37b9a7174e ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x8b6603d48d525bd4c118a803044e1c37b9a7174e-PoolModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x8b6603d48d525bd4c118a803044e1c37b9a7174e analyzed (65 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 312 / 342 - 合约地址：0x00aad1449059dffb524dd23d21ae2601b0fffb42 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x00aad1449059dffb524dd23d21ae2601b0fffb42-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x00aad1449059dffb524dd23d21ae2601b0fffb42 analyzed (69 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 313 / 342 - 合约地址：0x6418882acd5326477ed374d962e4a7631d64f284 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x6418882acd5326477ed374d962e4a7631d64f284-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x6418882acd5326477ed374d962e4a7631d64f284 analyzed (69 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 314 / 342 - 合约地址：0xce7d0e4b048719e35fac66c16e7680c7c086c84c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xce7d0e4b048719e35fac66c16e7680c7c086c84c-AsyncOrderConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xce7d0e4b048719e35fac66c16e7680c7c086c84c analyzed (52 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 315 / 342 - 合约地址：0xdd1ee5ed388b2e2d0503e3e768773ea409ee548d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdd1ee5ed388b2e2d0503e3e768773ea409ee548d-AsyncOrderModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xdd1ee5ed388b2e2d0503e3e768773ea409ee548d analyzed (63 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 316 / 342 - 合约地址：0xdd4c514839198584ec18a89dcaad08d59831b1d4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xdd4c514839198584ec18a89dcaad08d59831b1d4-AsyncOrderSettlementModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xdd4c514839198584ec18a89dcaad08d59831b1d4 analyzed (68 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 317 / 342 - 合约地址：0x4a05757daf26eb0b74b6dfd7b8aa6a787cee14ed ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x4a05757daf26eb0b74b6dfd7b8aa6a787cee14ed-AtomicOrderModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x4a05757daf26eb0b74b6dfd7b8aa6a787cee14ed analyzed (63 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 318 / 342 - 合约地址：0xaa78b9a428e0e5a3451882688e829ece85784a25 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xaa78b9a428e0e5a3451882688e829ece85784a25-MarketConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xaa78b9a428e0e5a3451882688e829ece85784a25 analyzed (62 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 319 / 342 - 合约地址：0xe54538fd29ff476c8a1f131c593828a864896cc8 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe54538fd29ff476c8a1f131c593828a864896cc8-SpotMarketFactoryModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xe54538fd29ff476c8a1f131c593828a864896cc8 analyzed (78 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 320 / 342 - 合约地址：0xfbeab6621b30f486a2e03bf328c879485d96dfe7 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xfbeab6621b30f486a2e03bf328c879485d96dfe7-WrapperModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xfbeab6621b30f486a2e03bf328c879485d96dfe7 analyzed (64 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 321 / 342 - 合约地址：0x0af6e02f3cc1bfeba408383dcd382872fd5da592 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x0af6e02f3cc1bfeba408383dcd382872fd5da592-FeedPriceOracle' running
INFO:Detectors:
OCCV9: oracle request in loop in (None,answer,None,updatedAt,None) = feed.latestRoundData() (contracts/Oracle/FeedPriceOracle.sol#170) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: answer and startedAt of data feed in (None,answer,None,updatedAt,None) = feed.latestRoundData() (contracts/Oracle/FeedPriceOracle.sol#170) not vaildated. Please check before use it.
OCCV12: response in price = uint256(answer) * (10 ** decimalDelta) (contracts/Oracle/FeedPriceOracle.sol#181) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = (price * getPrice(feedData.denominator)) / EXP_SCALE (contracts/Oracle/FeedPriceOracle.sol#365) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = (price * getPrice(feedData.denominator)) / EXP_SCALE (contracts/Oracle/FeedPriceOracle.sol#365) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = (price * getPrice(feedData.denominator)) / EXP_SCALE (contracts/Oracle/FeedPriceOracle.sol#183) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = (price * getPrice(feedData.denominator)) / EXP_SCALE (contracts/Oracle/FeedPriceOracle.sol#183) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
Reference: ...
INFO:Detectors:
OCCV3: decimals = AggregatorV3Interface(feedAddr).decimals() (contracts/Oracle/FeedPriceOracle.sol#139) Instantiates a contract but is not protected. Please add access control.
OCCV4: FeedPriceOracle._getChainlinkPrice(FeedPriceOracle.ChainlinkFeed) (contracts/Oracle/FeedPriceOracle.sol#161-186) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: FeedPriceOracle._getChainlinkPrice(FeedPriceOracle.ChainlinkFeed) (contracts/Oracle/FeedPriceOracle.sol#161-186)  sends oracle request but FeedPriceOracle (contracts/Oracle/FeedPriceOracle.sol#52-447) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: feed = AggregatorV3Interface(feedData.feedAddr) (contracts/Oracle/FeedPriceOracle.sol#162) Instantiates a contract but is not protected. Please add access control.
OCCV3: decimals = AggregatorV3Interface(feedAddr).decimals() (contracts/Oracle/FeedPriceOracle.sol#204) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x0af6e02f3cc1bfeba408383dcd382872fd5da592 analyzed (19 contracts with 3 detectors), 12 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 322 / 342 - 合约地址：0xbd5bf37fc39e03d675d09e0890f549def14f796b ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbd5bf37fc39e03d675d09e0890f549def14f796b-NodeModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xbd5bf37fc39e03d675d09e0890f549def14f796b analyzed (39 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 323 / 342 - 合约地址：0x806b9d4b0a56b6d1d9cacb60aee95e8d885bd55a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x806b9d4b0a56b6d1d9cacb60aee95e8d885bd55a-AccountModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x806b9d4b0a56b6d1d9cacb60aee95e8d885bd55a analyzed (76 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 324 / 342 - 合约地址：0x2266e6b43615622c737b881bb430b6ed90e94b34 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x2266e6b43615622c737b881bb430b6ed90e94b34-AssociateDebtModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x2266e6b43615622c737b881bb430b6ed90e94b34 analyzed (70 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 325 / 342 - 合约地址：0x918f7b6fb894cff6548453e723ab06eb74c9ea62 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x918f7b6fb894cff6548453e723ab06eb74c9ea62-CollateralConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x918f7b6fb894cff6548453e723ab06eb74c9ea62 analyzed (45 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 326 / 342 - 合约地址：0x87eeb627d70816caa91a4f2245c358962610bf29 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x87eeb627d70816caa91a4f2245c358962610bf29-CollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x87eeb627d70816caa91a4f2245c358962610bf29 analyzed (70 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 327 / 342 - 合约地址：0x9a088090892327ffdcc01b677f58ee2939fb7163 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x9a088090892327ffdcc01b677f58ee2939fb7163-IssueUSDModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x9a088090892327ffdcc01b677f58ee2939fb7163 analyzed (74 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 328 / 342 - 合约地址：0x5eff594e10acb20919a577794c4e9b4bb1221f17 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x5eff594e10acb20919a577794c4e9b4bb1221f17-LiquidationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x5eff594e10acb20919a577794c4e9b4bb1221f17 analyzed (75 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 329 / 342 - 合约地址：0x366439c0bef9d40e8340426ad88d685d8e11d55c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x366439c0bef9d40e8340426ad88d685d8e11d55c-MarketCollateralModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0x366439c0bef9d40e8340426ad88d685d8e11d55c analyzed (54 contracts with 3 detectors), 22 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 330 / 342 - 合约地址：0x3eaee9c1e78fd01fdef8ffe99df9de0551acc299 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x3eaee9c1e78fd01fdef8ffe99df9de0551acc299-PoolConfigurationModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x3eaee9c1e78fd01fdef8ffe99df9de0551acc299 analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 331 / 342 - 合约地址：0x86c62a51fb091487af1139cfc9590a2eb10940c4 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x86c62a51fb091487af1139cfc9590a2eb10940c4-MarketManagerModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/modules/core/MarketManagerModule.sol:201:34:
    |
201 |     ) external override returns (uint256 feeAmount) {
    |                                  ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/modules/core/MarketManagerModule.sol:244:34:
    |
244 |     ) external override returns (uint256 feeAmount) {
    |                                  ^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x86c62a51fb091487af1139cfc9590a2eb10940c4 analyzed (62 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 332 / 342 - 合约地址：0xaa47dc08362fc6fee3408dc09c42855bf3de0a92 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xaa47dc08362fc6fee3408dc09c42855bf3de0a92-RewardsManagerModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xaa47dc08362fc6fee3408dc09c42855bf3de0a92 analyzed (69 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 333 / 342 - 合约地址：0xe40725e3fc5c0277a094025c9a3abca4ee2a2b76 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe40725e3fc5c0277a094025c9a3abca4ee2a2b76-PoolModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe40725e3fc5c0277a094025c9a3abca4ee2a2b76 analyzed (65 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 334 / 342 - 合约地址：0x1c234a5eec9034e542f23c1f31c99d505364c03a ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x1c234a5eec9034e542f23c1f31c99d505364c03a-VaultModule' running
ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pythData = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#51-65) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).pythData (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#25-27) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#29) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#30-32) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#55) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-37)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#39-69)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#71-97)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-98) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-35)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#37-58)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-59) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#52) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x1c234a5eec9034e542f23c1f31c99d505364c03a analyzed (69 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 335 / 342 - 合约地址：0xd8296c6bfccaf00c374826a83be294c6f564488c ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd8296c6bfccaf00c374826a83be294c6f564488c-AccountModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd8296c6bfccaf00c374826a83be294c6f564488c analyzed (76 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 336 / 342 - 合约地址：0x7ff3b04654602014f51692baa0e7a3ef40b3f830 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x7ff3b04654602014f51692baa0e7a3ef40b3f830-AssociateDebtModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x7ff3b04654602014f51692baa0e7a3ef40b3f830 analyzed (70 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 337 / 342 - 合约地址：0xe95373b3a8c26d2bec2fd731a47cd49bef3c2cda ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe95373b3a8c26d2bec2fd731a47cd49bef3c2cda-CollateralConfigurationModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xe95373b3a8c26d2bec2fd731a47cd49bef3c2cda analyzed (45 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 338 / 342 - 合约地址：0xbe5360faae167b08c302e640aecad2af81a97ce2 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xbe5360faae167b08c302e640aecad2af81a97ce2-CollateralModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xbe5360faae167b08c302e640aecad2af81a97ce2 analyzed (70 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 339 / 342 - 合约地址：0xc06d3e74d58c67453130d4cebd6c96be9ad0060d ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xc06d3e74d58c67453130d4cebd6c96be9ad0060d-MarketCollateralModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
Reference: ...
INFO:Slither:0xc06d3e74d58c67453130d4cebd6c96be9ad0060d analyzed (54 contracts with 3 detectors), 24 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 340 / 342 - 合约地址：0xe6f25a27dd45945aae7abc4f2a8dd02212d99bab ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xe6f25a27dd45945aae7abc4f2a8dd02212d99bab-IssueUSDModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xe6f25a27dd45945aae7abc4f2a8dd02212d99bab analyzed (74 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 341 / 342 - 合约地址：0x745dd7113e0759c73bf48aed34c70076ad60c805 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0x745dd7113e0759c73bf48aed34c70076ad60c805-LiquidationModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for Account.cleanAccountLocks (contracts/storage/Account.sol#117-151):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for ScalableMapping.set (contracts/storage/ScalableMapping.sol#90-105):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r = pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28-33) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0x745dd7113e0759c73bf48aed34c70076ad60c805 analyzed (75 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

--- 分析结果 342 / 342 - 合约地址：0xd86c1352b63d2f4e9554ee35379330dfc1e65f46 ---
'solc --standard-json --allow-paths /home/ziming/github/oracleTest/crytic-export/etherscan-contracts/0xd86c1352b63d2f4e9554ee35379330dfc1e65f46-MarketManagerModule' running
Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/pyth/PythOffchainLookupNode.sol:22:30:
   |
22 |     ) internal pure returns (NodeOutput.Data memory nodeOutput, bytes memory possibleError) {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused try/catch parameter. Remove or comment out the variable name to silence this warning.
  --> @synthetixio/oracle-manager/contracts/nodes/UniswapNode.sol:46:13:
   |
46 |             uint160[] memory _unused
   |             ^^^^^^^^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/modules/core/MarketManagerModule.sol:201:34:
    |
201 |     ) external override returns (uint256 feeAmount) {
    |                                  ^^^^^^^^^^^^^^^^^


Warning: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> contracts/modules/core/MarketManagerModule.sol:244:34:
    |
244 |     ) external override returns (uint256 feeAmount) {
    |                                  ^^^^^^^^^^^^^^^^^



ERROR:ContractSolcParsing:Impossible to generate IR for FullMath.mulDiv (@synthetixio/oracle-manager/contracts/utils/FullMath.sol#19-111):
 'NoneType' object has no attribute 'parameters'
ERROR:ContractSolcParsing:Impossible to generate IR for TickMath.getSqrtRatioAtTick (@synthetixio/oracle-manager/contracts/utils/TickMath.sol#30-63):
 'NoneType' object has no attribute 'parameters'
INFO:Detectors:
OCCV9: multiple requests sent in r_scope_0 = pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35-40) Each call should handle only one request at a time.
OCCV9: multiple requests sent in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) Each call should handle only one request at a time.
OCCV9: multiple requests sent in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
OCCV9: oracle request in loop in (answer,updatedAt) = chainlink.getRoundData(-- latestRoundId) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#59-73) Each call should handle only one request at a time.
Reference: ...
INFO:Detectors:
OCCV10: price of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#28) not checked. Please check before use it.
OCCV12: response in factor = PRECISION + pythData.expo (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#43) may be tampered by state variables. The oracle data should not be influenced or modified by any user.
OCCV12: response in price = pythData.price.downscale((- factor).toUint()) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#44-46) may be tampered by parameters. The oracle data should not be influenced or modified by any user.
OCCV10: price of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: publishTime of oracle response in PythNode.process(bytes).r_scope_0 (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#35) not checked. Please check before use it.
OCCV10: the value in pyth.getPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
OCCV10: the value in pyth.getEmaPriceUnsafe(priceFeedId) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#69) not checked but returned directly. Please check before use it.
Reference: ...
INFO:Detectors:
OCCV4: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#18-45)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.getTwapPrice(IAggregatorV3Interface,uint80,int256,uint256) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#47-77)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: ChainlinkNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#79-105)  sends oracle request but ChainlinkNode (@synthetixio/oracle-manager/contracts/nodes/ChainlinkNode.sol#11-106) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV4: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.process(bytes) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#17-49)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#24) Instantiates a contract but is not protected. Please add access control.
OCCV4: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: PythNode.isValid(NodeDefinition.Data) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#51-72)  sends oracle request but PythNode (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#11-73) is not upgradeable. Please use OpenZeppelin upgradeable.
OCCV3: pyth = IPyth(pythAddress) (@synthetixio/oracle-manager/contracts/nodes/pyth/PythNode.sol#66) Instantiates a contract but is not protected. Please add access control.
OCCV4: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29) sends oracle request but is not pausable. Please use OpenZeppelin Pausable.
OCCV5: Config.readUint(bytes32,uint256) (contracts/storage/Config.sol#26-29)  sends oracle request but Config (contracts/storage/Config.sol#7-42) is not upgradeable. Please use OpenZeppelin upgradeable.
Reference: ...
INFO:Slither:0xd86c1352b63d2f4e9554ee35379330dfc1e65f46 analyzed (62 contracts with 3 detectors), 26 result(s) found

[Return code]: 255

================================================================================

